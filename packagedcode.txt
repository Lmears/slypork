/Users/lachie/Documents/coding/website/CNAME
---
slypork.net

---
/Users/lachie/Documents/coding/website/README.md
---
# slypork
Portfolio site featuring my audio mastering, music projects, and software development. Connect with my work, listen to my creations, and explore my codebase. 
 


---
/Users/lachie/Documents/coding/website/index.html
---
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <meta name="description"
        content="Slypork: Explore a portfolio of audio mastering, music, graphic design, and software development. Connect and delve into creative and technical work.">
    <title>Slypork</title>
    <link rel="icon" type="image/png" sizes="16x16" href="./assets/images/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="./assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="./assets/images/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="192x192" href="./assets/images/favicon-192x192.png">
    <link rel="preload" href="./assets/fonts/roboto-v48-latin-500.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="./assets/fonts/roboto-v48-latin-200.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home.webp" type="image/webp">
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home-hover.webp" type="image/webp">
    <link href="./assets/css/output.css" rel="stylesheet">
</head>

<body class="text-neutral-900">
    <canvas id="boidCanvas"></canvas>
    <div id="controls">
        <button id="godModeButton" class="mr-2 hidden md:block">
            <svg
                class="w-4 h-4 fill-current text-background hover:text-backgroundHovered transition transform hover:scale-110">
                <use href="./assets/images/icons.svg#sliders"></use>
            </svg>
        </button>
        <input type="range" id="speedSlider" min="0" max="200" value="100">
        <span id="speedValue" class="ml-2 text-background text-right w-10">100%</span>
    </div>
    <main id="container" class="flex min-h-full px-2 pb-12 pt-8 md:px-12 md:pt-12 mx-auto">
        <header>
            <nav class="text-2xl flex justify-center mt-[10vh] md:mt-0 nav-active group">
                <button id="hamburger-menu" aria-label="Menu" class="hidden show-hamburger:block"
                    style="transform: translate(-8px, 12px);">&#9776;</button>
                <ul id="navLinks" class="inline-flex flex-col items-center md:items-start min-w-0 md:min-w-36">
                    <li class="group-[.nav-active]:pb-4 md:group-[.nav-active]:pb-9 md:px-3 md:pt-3 md:pb-9">
                        <a href=".." id="homeLink" class="p-1 block">
                            <img src="../assets/images/home.webp" alt="Home" width="80" height="80"
                                class="w-[80px] home-logo">
                        </a>
                    </li>
                    <li class="hidden show-nav:group-[.nav-active]:block md:block py-1 md:p-3">
                        <a href="./about/" id="aboutLink">
                            <span class="nav-link-text">About</span></a>
                    </li>
                    <li class="hidden show-nav:group-[.nav-active]:block md:block py-1 md:p-3">
                        <a href="./mastering/" id="masteringLink">
                            <span class="nav-link-text">Mastering</span></a>
                    </li>
                    <li class="hidden show-nav:group-[.nav-active]:block md:block py-1 md:p-3">
                        <a href="./music/" id="musicLink">
                            <span class="nav-link-text">Music</span></a>
                    </li>
                    <li class="hidden show-nav:group-[.nav-active]:block md:block py-1 md:p-3">
                        <a href="./design/" id="designLink">
                            <span class="nav-link-text">Design</span></a>
                    </li>
                    <li class="hidden show-nav:group-[.nav-active]:block md:block py-1 md:p-3">
                        <a href="./software/" id="softwareLink">
                            <span class="nav-link-text">Software</span></a>
                    </li>
                    <li class="hidden show-nav:group-[.nav-active]:block md:block py-1 md:p-3">
                        <a href="./contact/" id="contactLink">
                            <span class="nav-link-text">Contact</span></a>
                    </li>
                </ul>
            </nav>
        </header>

        <section id="content" class="flex-1 p-5 flex flex-col">
            <!-- Potential Content Here -->
        </section>

        <footer class="p-2 md:p-0 text-center text-3xl">
            <div class="p-1 md:p-3 inline-flex -translate-y-2 md:-translate-y-0" id="footer">slypork.net</div>
        </footer>
    </main>
    <script src="./assets/js/script.js"></script>
    <script src="./assets/js/boid-simulator.js" type="module"></script>
    <div class="easter-egg" id="easterEgg"></div>
    <script src="./assets/js/easter-egg.js"></script>
</body>

</html>

---
/Users/lachie/Documents/coding/website/package-lock.json
---
{
  "name": "website",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "devDependencies": {
        "tailwindcss": "^3.4.17"
      }
    },
    "node_modules/@alloc/quick-lru": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@isaacs/cliui": {
      "version": "8.0.2",
      "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
      "dev": true,
      "dependencies": {
        "string-width": "^5.1.2",
        "string-width-cjs": "npm:string-width@^4.2.0",
        "strip-ansi": "^7.0.1",
        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
        "wrap-ansi": "^8.1.0",
        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.8",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz",
      "integrity": "sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==",
      "dev": true,
      "dependencies": {
        "@jridgewell/set-array": "^1.2.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "dev": true,
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
      "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
      "dev": true,
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
      "dev": true
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.25",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
      "dev": true,
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true,
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@pkgjs/parseargs": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
      "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
      "dev": true,
      "optional": true,
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/ansi-regex": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
      "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/ansi-styles": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/any-promise": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
      "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
      "dev": true
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "dev": true,
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/arg": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
      "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
      "dev": true
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/brace-expansion": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
      "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "dev": true,
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/camelcase-css": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
      "dev": true,
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "dev": true,
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chokidar/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dev": true,
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "dev": true
    },
    "node_modules/commander": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
      "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
      "dev": true,
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "dev": true,
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "dev": true,
      "bin": {
        "cssesc": "bin/cssesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/didyoumean": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
      "dev": true
    },
    "node_modules/dlv": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
      "dev": true
    },
    "node_modules/eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
      "dev": true
    },
    "node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "dev": true
    },
    "node_modules/fast-glob": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.8"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "dev": true,
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "dev": true,
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/foreground-child": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz",
      "integrity": "sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==",
      "dev": true,
      "dependencies": {
        "cross-spawn": "^7.0.6",
        "signal-exit": "^4.0.1"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "dev": true,
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/glob": {
      "version": "10.4.5",
      "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
      "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
      "dev": true,
      "dependencies": {
        "foreground-child": "^3.1.0",
        "jackspeak": "^3.1.2",
        "minimatch": "^9.0.4",
        "minipass": "^7.1.2",
        "package-json-from-dist": "^1.0.0",
        "path-scurry": "^1.11.1"
      },
      "bin": {
        "glob": "dist/esm/bin.mjs"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "dev": true,
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "dev": true,
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true
    },
    "node_modules/jackspeak": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
      "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
      "dev": true,
      "dependencies": {
        "@isaacs/cliui": "^8.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      },
      "optionalDependencies": {
        "@pkgjs/parseargs": "^0.11.0"
      }
    },
    "node_modules/jiti": {
      "version": "1.21.7",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-1.21.7.tgz",
      "integrity": "sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==",
      "dev": true,
      "bin": {
        "jiti": "bin/jiti.js"
      }
    },
    "node_modules/lilconfig": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz",
      "integrity": "sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==",
      "dev": true,
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/antonk52"
      }
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
      "dev": true
    },
    "node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "dev": true
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true,
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "dev": true,
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/minipass": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
      "dev": true,
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/mz": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
      "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
      "dev": true,
      "dependencies": {
        "any-promise": "^1.0.0",
        "object-assign": "^4.0.1",
        "thenify-all": "^1.0.0"
      }
    },
    "node_modules/nanoid": {
      "version": "3.3.11",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-hash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
      "dev": true,
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/package-json-from-dist": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
      "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
      "dev": true
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true
    },
    "node_modules/path-scurry": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
      "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
      "dev": true,
      "dependencies": {
        "lru-cache": "^10.2.0",
        "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
      },
      "engines": {
        "node": ">=16 || 14 >=14.18"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "dev": true
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/pirates": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz",
      "integrity": "sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==",
      "dev": true,
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/postcss": {
      "version": "8.5.3",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.3.tgz",
      "integrity": "sha512-dle9A3yYxlBSrt8Fu+IpjGT8SY8hN0mlaA6GY8t0P5PjIOZemULz/E2Bnm/2dcUOena75OTNkHI76uZBNUUq3A==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "nanoid": "^3.3.8",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-import": {
      "version": "15.1.0",
      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz",
      "integrity": "sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==",
      "dev": true,
      "dependencies": {
        "postcss-value-parser": "^4.0.0",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "postcss": "^8.0.0"
      }
    },
    "node_modules/postcss-js": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz",
      "integrity": "sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==",
      "dev": true,
      "dependencies": {
        "camelcase-css": "^2.0.1"
      },
      "engines": {
        "node": "^12 || ^14 || >= 16"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": "^8.4.21"
      }
    },
    "node_modules/postcss-load-config": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz",
      "integrity": "sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "lilconfig": "^3.0.0",
        "yaml": "^2.3.4"
      },
      "engines": {
        "node": ">= 14"
      },
      "peerDependencies": {
        "postcss": ">=8.0.9",
        "ts-node": ">=9.0.0"
      },
      "peerDependenciesMeta": {
        "postcss": {
          "optional": true
        },
        "ts-node": {
          "optional": true
        }
      }
    },
    "node_modules/postcss-nested": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz",
      "integrity": "sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "postcss-selector-parser": "^6.1.1"
      },
      "engines": {
        "node": ">=12.0"
      },
      "peerDependencies": {
        "postcss": "^8.2.14"
      }
    },
    "node_modules/postcss-selector-parser": {
      "version": "6.1.2",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
      "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
      "dev": true,
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
      "dev": true
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
      "dev": true,
      "dependencies": {
        "pify": "^2.3.0"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "dev": true,
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "dev": true,
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/signal-exit": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
      "dev": true,
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "dev": true,
      "dependencies": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/string-width-cjs": {
      "name": "string-width",
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true
    },
    "node_modules/string-width-cjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/strip-ansi-cjs": {
      "name": "strip-ansi",
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/sucrase": {
      "version": "3.35.0",
      "resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
      "integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
      "dev": true,
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.2",
        "commander": "^4.0.0",
        "glob": "^10.3.10",
        "lines-and-columns": "^1.1.6",
        "mz": "^2.7.0",
        "pirates": "^4.0.1",
        "ts-interface-checker": "^0.1.9"
      },
      "bin": {
        "sucrase": "bin/sucrase",
        "sucrase-node": "bin/sucrase-node"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/tailwindcss": {
      "version": "3.4.17",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz",
      "integrity": "sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==",
      "dev": true,
      "dependencies": {
        "@alloc/quick-lru": "^5.2.0",
        "arg": "^5.0.2",
        "chokidar": "^3.6.0",
        "didyoumean": "^1.2.2",
        "dlv": "^1.1.3",
        "fast-glob": "^3.3.2",
        "glob-parent": "^6.0.2",
        "is-glob": "^4.0.3",
        "jiti": "^1.21.6",
        "lilconfig": "^3.1.3",
        "micromatch": "^4.0.8",
        "normalize-path": "^3.0.0",
        "object-hash": "^3.0.0",
        "picocolors": "^1.1.1",
        "postcss": "^8.4.47",
        "postcss-import": "^15.1.0",
        "postcss-js": "^4.0.1",
        "postcss-load-config": "^4.0.2",
        "postcss-nested": "^6.2.0",
        "postcss-selector-parser": "^6.1.2",
        "resolve": "^1.22.8",
        "sucrase": "^3.35.0"
      },
      "bin": {
        "tailwind": "lib/cli.js",
        "tailwindcss": "lib/cli.js"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/thenify": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
      "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
      "dev": true,
      "dependencies": {
        "any-promise": "^1.0.0"
      }
    },
    "node_modules/thenify-all": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
      "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
      "dev": true,
      "dependencies": {
        "thenify": ">= 3.1.0 < 4"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/ts-interface-checker": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
      "integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
      "dev": true
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "dev": true
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^6.1.0",
        "string-width": "^5.0.1",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs": {
      "name": "wrap-ansi",
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true
    },
    "node_modules/wrap-ansi-cjs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yaml": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.7.1.tgz",
      "integrity": "sha512-10ULxpnOCQXxJvBgxsn9ptjq6uviG/htZKk9veJGhlqn3w/DxQ631zFF+nlQXLwmImeS5amR2dl2U8sg6U9jsQ==",
      "dev": true,
      "bin": {
        "yaml": "bin.mjs"
      },
      "engines": {
        "node": ">= 14"
      }
    }
  }
}


---
/Users/lachie/Documents/coding/website/package.json
---
{
  "type": "module",
  "devDependencies": {
    "tailwindcss": "^3.4.17"
  }
}

---
/Users/lachie/Documents/coding/website/tailwind.config.mjs
---
// tailwind.config.js

/** @type {import('tailwindcss').Config} */
export default {
  content: [
    './*.html',         // Scans HTML files in the root
    './*/**/*.html',    // Scans HTML files in immediate subdirectories (like cv/index.html)
    './assets/js/*.js'
  ],
  theme: {
    extend: {
      fontFamily: {
        sans: [
          'Roboto', 'sans-serif'
        ],
      },
      colors: {
        background: '#f3f4f1',
        backgroundHovered: '#dcddd9',
        primary: '#073b4c',
        heading: '#193a4a',
        body: '#333333',
        light: '#f3f5f6',
        section: '#e7ebed',
      },
      brightness: {
        80: '.8',
        110: '1.1',
      },
      screens: {
        'sm': '642px', // Even though this is close to default sm: there may be more nav items in the future
        'md': '768px',
        'lg': '1024px',
        'show-hamburger': { 'raw': '(max-width: 767.98px) and (min-height: 620px)' },
        'show-nav': { 'raw': '(min-height: 620px)' },
      },
    }
  },
  plugins: [],
}

---
/Users/lachie/Documents/coding/website/music/index.html
---
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>Music | Slypork</title>
    <link rel="icon" type="image/png" sizes="16x16" href="../assets/images/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="../assets/images/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="192x192" href="../assets/images/favicon-192x192.png">
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-500.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-300.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-200.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home.webp" type="image/webp">
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home-hover.webp" type="image/webp">
    <link href="../assets/css/output.css" rel="stylesheet">
</head>

<body class="text-neutral-900">
    <canvas id="boidCanvas"></canvas>
    <div id="controls">
        <button id="godModeButton" class="mr-2 hidden md:block">
            <svg
                class="w-4 h-4 fill-current text-background hover:text-backgroundHovered transition transform hover:scale-110">
                <use href="../assets/images/icons.svg#sliders"></use>
            </svg>
        </button>
        <input type="range" id="speedSlider" min="0" max="200" value="100">
        <span id="speedValue" class="ml-2 text-background text-right w-10">100%</span>
    </div>
    <main id="container" class="flex px-4 pb-12 pt-8 md:px-12 md:pt-12 mx-auto">
        <header>
            <nav class="flex flex-row justify-center sm:flex-col text-2xl group">
                <button id="hamburger-menu" aria-label="Menu" class="py-3 px-2 sm:hidden">&#9776;</button>
                <ul id="navLinks"
                    class="inline-flex flex-col sm:flex-row md:flex md:flex-col md:items-start min-h-[60.75px] items-center justify-between min-w-0 md:min-w-36">
                    <li
                        class="group-[.nav-active]:pb-4 sm:group-[.nav-active]:pb-0 md:group-[.nav-active]:pb-9 md:px-3 md:pt-3 md:pb-9">
                        <a href=".." id="homeLink" class="p-1 block">
                            <img src="../assets/images/home.webp" alt="Home"
                                class="w-[64px] sm:w-[48px] md:w-[80px] aspect-[80/65.94] home-logo">
                        </a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../about/" id="aboutLink">
                            <span class="nav-link-text">About</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../mastering/" id="masteringLink">
                            <span class="nav-link-text">Mastering</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="./" class="selected" id="musicLink">
                            <span class="nav-link-text">Music</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../design/" id="designLink">
                            <span class="nav-link-text">Design</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../software/" id="softwareLink">
                            <span class="nav-link-text">Software</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../contact/" id="contactLink">
                            <span class="nav-link-text">Contact</span></a>
                    </li>
                </ul>
            </nav>
        </header>
        <section id="content" class="flex-1 md:px-4 flex flex-col">
            <h1 class="text-3xl md:text-5xl leading-tight px-2 md:px-4 pb-8 pt-10 md:pb-12 md:pt-7">
                <div id="pageTitle" class="inline-block">Music</div>
            </h1>
            <section id="links">
                <div class="visual-container" id="visualContainer">
                    <div class="mx-2 md:mx-4 my-4 md:my-8">
                        <div class="pb-4 text-2xl">My projects:</div>
                        <div class="text-lg font-light grid grid-cols-1 md:grid-cols-1 lg:grid-cols-3 gap-8">
                            <div class="project-container">
                                <a href="https://linktr.ee/keithunsheathed" target="_blank"
                                    class="hover-effect subtle-underline">
                                    <img src="../assets/images/project-logos/keith.webp" alt="Keith"
                                        class="project-logo" id="keith-logo">
                                    <div class="project-name">Keith</div>
                                </a>
                                <div class="project-info text-sm">experimental • psychedelic • slambient • post core
                                </div>
                            </div>
                            <div class="project-container">
                                <a href="https://linktr.ee/djpretence" target="_blank"
                                    class="hover-effect subtle-underline">
                                    <img src="../assets/images/project-logos/dj-pretence.webp" alt="DJ PRETENCE"
                                        class="project-logo" id="dj-pretence-logo">
                                    <div class="project-name">DJ PRETENCE</div>
                                </a>
                                <div class="project-info text-sm">club • techno • trance • post goa
                                </div>
                            </div>
                            <div class="project-container">
                                <a href="https://linktr.ee/rootbasis" target="_blank"
                                    class="hover-effect subtle-underline">
                                    <img src="../assets/images/project-logos/root-basis.webp" alt="Root Basis"
                                        class="project-logo" id="root-basis-logo">
                                    <div class="project-name">Root Basis</div>
                                </a>
                                <div class="project-info text-sm">ambient • dub techno / house • bass adjacent • post
                                    dub
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            <section id="playerGrid" class="visual-container-bottom">
                <div class="mx-2 md:mx-4 my-4 md:my-8">
                    <h2 class="pb-4 text-2xl">Latest sets:
                    </h2>
                    <div class="grid grid-cols-1 gap-8 text-lg soundcloud-artist">
                        <div>
                            <a href="https://soundcloud.com/keithunsheathed" title="Keith" target="_blank"
                                class="hover-effect thin-underline">Keith</a>
                            <iframe id="keith-player" class="rounded-xl" width="100%" height="166" scrolling="no"
                                frameborder="no" allow="autoplay" loading="lazy"
                                style="border: 1px solid rgba(23, 23, 23, 0.2);"
                                src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/1714032603&color=%231f2937&inverse=true&auto_play=false&show_user=true"></iframe>
                        </div>
                        <div>
                            <a href="https://soundcloud.com/djpretence" title="DJ PRETENCE" target="_blank"
                                class="hover-effect thin-underline">DJ PRETENCE</a>
                            <iframe id="dj-pretence-player" class="rounded-xl" width="100%" height="166" scrolling="no"
                                frameborder="no" allow="autoplay" loading="lazy"
                                style="border: 1px solid rgba(23, 23, 23, 0.2);"
                                src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/1313168281&color=%231f2937&inverse=true&auto_play=false&show_user=true"></iframe>
                        </div>
                        <div>
                            <div>
                                <a href="https://soundcloud.com/rootbasis" title="Root Basis" target="_blank"
                                    class="hover-effect thin-underline">Root Basis</a>
                            </div>
                            <iframe id="root-basis-player" class="rounded-xl" width="100%" height="166" scrolling="no"
                                frameborder="no" allow="autoplay" loading="lazy"
                                style="border: 1px solid rgba(23, 23, 23, 0.2);"
                                src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/1480906258&color=%231f2937&inverse=true&auto_play=false&show_user=true"></iframe>
                        </div>
                    </div>
                    <div class="flex justify-center items-center pb-4 pt-8 md:pt-12">
                        <p class="text-lg font-light">
                            <i class="fas fa-calendar-check" style="width: 24px;"></i>
                            <strong>Bookings:</strong>
                            <a href="mailto:mastering@slypork.net" target="_blank" class="link-underline">
                                bookings@slypork.net
                            </a>
                        </p>
                    </div>
                </div>
            </section>
        </section>
    </main>
    <script src="../assets/js/music.js"></script>
    <script src="../assets/js/script.js"></script>
    <script src="../assets/js/boid-simulator.js" type="module"></script>
    <div class="easter-egg" id="easterEgg"></div>
    <script src="../assets/js/easter-egg.js"></script>
</body>

</html>

---
/Users/lachie/Documents/coding/website/design/index.html
---
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>Design | Slypork</title>
    <link rel="icon" type="image/png" sizes="16x16" href="../assets/images/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="../assets/images/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="192x192" href="../assets/images/favicon-192x192.png">
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-500.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-300.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-200.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home.webp" type="image/webp">
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home-hover.webp" type="image/webp">
    <link href="../assets/css/output.css" rel="stylesheet">
</head>

<body class="text-neutral-900">
    <canvas id="boidCanvas"></canvas>
    <div id="controls">
        <button id="godModeButton" class="mr-2 hidden md:block">
            <svg
                class="w-4 h-4 fill-current text-background hover:text-backgroundHovered transition transform hover:scale-110">
                <use href="../assets/images/icons.svg#sliders"></use>
            </svg>
        </button>
        <input type="range" id="speedSlider" min="0" max="200" value="100">
        <span id="speedValue" class="ml-2 text-background text-right w-10">100%</span>
    </div>
    <main id="container" class="flex px-4 pb-12 pt-8 md:px-12 md:pt-12 mx-auto">
        <header>
            <nav class="flex flex-row justify-center sm:flex-col text-2xl group">
                <button id="hamburger-menu" aria-label="Menu" class="py-3 px-2 sm:hidden">&#9776;</button>
                <ul id="navLinks"
                    class="inline-flex flex-col sm:flex-row md:flex md:flex-col md:items-start min-h-[60.75px] items-center justify-between min-w-0 md:min-w-36">
                    <li
                        class="group-[.nav-active]:pb-4 sm:group-[.nav-active]:pb-0 md:group-[.nav-active]:pb-9 md:px-3 md:pt-3 md:pb-9">
                        <a href=".." id="homeLink" class="p-1 block">
                            <img src="../assets/images/home.webp" alt="Home"
                                class="w-[64px] sm:w-[48px] md:w-[80px] aspect-[80/65.94] home-logo">
                        </a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../about/" id="aboutLink">
                            <span class="nav-link-text">About</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../mastering/" id="masteringLink">
                            <span class="nav-link-text">Mastering</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../music/" id="musicLink">
                            <span class="nav-link-text">Music</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="./" class="selected" id="designLink">
                            <span class="nav-link-text">Design</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../software/" id="softwareLink">
                            <span class="nav-link-text">Software</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../contact/" id="contactLink">
                            <span class="nav-link-text">Contact</span></a>
                    </li>
                </ul>
            </nav>
        </header>
        <section id="content" class="flex-1 md:px-4 flex flex-col">
            <h1 class="text-3xl md:text-5xl leading-tight px-2 md:px-4 pb-8 pt-10 md:pb-12 md:pt-7">
                <div id="pageTitle" class="inline-block">Design</div>
            </h1>
            <article id="blurb">
                <div class="visual-container" id="visualContainer">
                    <div class="mx-2 md:mx-4 my-4 md:my-8">
                        <p class="text-lg font-light">
                            With over 13 years of Adobe Photoshop experience, I've recently expanded into offering
                            graphic design services. I specialize in creating gig posters, album art, and logos; drawing
                            from a diverse range of influences.
                            <br><br>
                        </p>
                        <h2 class="text-xl">Connect with me:</h2>
                        <p class="text-lg font-light ml-4">
                            Insta:
                            <a href="https://www.instagram.com/slyporkstudio" target="_blank"
                                class="link-underline inline-flex items-center">
                                @slyporkstudio
                                <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" width="24" height="24"
                                    style="text-align: center; display: inline-block; vertical-align: middle;">
                                    <path d="M7 17L17 7M17 16L17 7L8 7" stroke="currentColor" stroke-width="1.2"
                                        stroke-linecap="butt" stroke-linejoin="butt" fill="none" />
                                </svg>
                            </a>
                            <br>
                            Email:
                            <a href="mailto:mastering@slypork.net" target="_blank"
                                class="link-underline">slyporkstudio@icloud.com
                            </a>
                        </p>
                    </div>
                </div>
            </article>
            <section class="visual-container-bottom" id="designGrid">
                <div class="mx-2 md:mx-4 my-4 md:my-8">
                    <h2 class="pb-4 text-2xl">Past work:
                    </h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4" id="imageGrid">
                        <!-- Items will be added here by JavaScript -->
                    </div>
                </div>
            </section>
        </section>

        <!-- Lightbox Modal -->
        <div id="myModal" class="modal">
            <!-- <span class="close cursor-pointer">&times;</span> -->
            <img class="modal-content" id="modalImage">
        </div>

    </main>
    <script src="../assets/js/design.js"></script>
    <script src="../assets/js/script.js"></script>
    <script src="../assets/js/boid-simulator.js" type="module"></script>
    <div class="easter-egg" id="easterEgg"></div>
    <script src="../assets/js/easter-egg.js"></script>
</body>

</html>

---
/Users/lachie/Documents/coding/website/contact/index.html
---
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>Contact | Slypork</title>
    <link rel="icon" type="image/png" sizes="16x16" href="../assets/images/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="../assets/images/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="192x192" href="../assets/images/favicon-192x192.png">
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-500.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-300.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-200.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home.webp" type="image/webp">
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home-hover.webp" type="image/webp">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
        integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="../assets/css/output.css" rel="stylesheet">
</head>

<body class="text-neutral-900">
    <canvas id="boidCanvas"></canvas>
    <div id="controls">
        <button id="godModeButton" class="mr-2 hidden md:block">
            <svg
                class="w-4 h-4 fill-current text-background hover:text-backgroundHovered transition transform hover:scale-110">
                <use href="../assets/images/icons.svg#sliders"></use>
            </svg>
        </button>
        <input type="range" id="speedSlider" min="0" max="200" value="100">
        <span id="speedValue" class="ml-2 text-background text-right w-10">100%</span>
    </div>
    <main id="container" class="flex px-4 pb-12 pt-8 md:px-12 md:pt-12 mx-auto">
        <header>
            <nav class="flex flex-row justify-center sm:flex-col text-2xl group">
                <button id="hamburger-menu" aria-label="Menu" class="py-3 px-2 sm:hidden">&#9776;</button>
                <ul id="navLinks"
                    class="inline-flex flex-col sm:flex-row md:flex md:flex-col md:items-start min-h-[60.75px] items-center justify-between min-w-0 md:min-w-36">
                    <li
                        class="group-[.nav-active]:pb-4 sm:group-[.nav-active]:pb-0 md:group-[.nav-active]:pb-9 md:px-3 md:pt-3 md:pb-9">
                        <a href=".." id="homeLink" class="p-1 block">
                            <img src="../assets/images/home.webp" alt="Home"
                                class="w-[64px] sm:w-[48px] md:w-[80px] aspect-[80/65.94] home-logo">
                        </a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../about/" id="aboutLink">
                            <span class="nav-link-text">About</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../mastering/" id="masteringLink">
                            <span class="nav-link-text">Mastering</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../music/" id="musicLink">
                            <span class="nav-link-text">Music</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../design/" id="designLink">
                            <span class="nav-link-text">Design</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../software/" id="softwareLink">
                            <span class="nav-link-text">Software</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="./" class="selected" id="contactLink">
                            <span class="nav-link-text">Contact</span></a>
                    </li>
                </ul>
            </nav>
        </header>
        <section id="content" class="flex-1 md:px-4 flex flex-col">
            <h1 class="text-3xl md:text-5xl leading-tight px-2 md:px-4 pb-8 pt-10 md:pb-12 md:pt-7">
                <div id="pageTitle" class="inline-block">Contact</div>
            </h1>
            <div class="visual-container flex flex-col lg:flex-row" id="visualContainer">
                <div class="flex-1 mx-2 md:mx-4 my-4 md:mt-8 lg:mb-8">
                    <h2 class="text-xl md:text-2xl leading-tight pb-4">Contact Emails:</h2>
                    <p class="text-lg font-light ml-4">
                        <i class="fas fa-headphones" style="width: 30px; text-align: center;"></i>
                        <strong>Mastering:</strong><br>
                        <a href="mailto:mastering@slypork.net" class="link-underline ml-7">
                            mastering@slypork.net
                        </a><br><br>
                        <i class="fas fa-calendar-check" style="width: 30px; text-align: center;"></i>
                        <strong>Bookings:</strong><br>
                        <a href="mailto:bookings@slypork.net" class="link-underline ml-7">
                            bookings@slypork.net
                        </a><br><br>
                        <i class="fas fa-code" style="width: 30px; text-align: center;"></i>
                        <strong>Software:</strong><br>
                        <a href="mailto:dev@slypork.net" class="link-underline ml-7">
                            dev@slypork.net
                        </a><br><br>
                        <i class="fas fa-palette" style="width: 30px; text-align: center;"></i>
                        <strong>Graphic design:</strong><br>
                        <a href="mailto:slyporkstudio@icloud.com" class="link-underline ml-7">
                            slyporkstudio@icloud.com
                        </a>
                    </p>
                </div>
                <div class="flex-1 mx-2 md:mx-4 my-4 md:mb-8 lg:mt-8">
                    <h2 class="text-xl md:text-2xl leading-tight pb-4">Social Media:</h2>
                    <p class="text-lg font-light ml-4">
                        <i class="fab fa-instagram" style="width: 30px; text-align: center;"></i>
                        <strong>Instagram:</strong><br>
                        <a href="https://www.instagram.com/slyporkstudio" target="_blank" class="link-underline ml-7">
                            @slyporkstudio
                        </a><br><br>
                        <i class="fab fa-facebook" style="width: 30px; text-align: center;"></i>
                        <strong>Facebook:</strong><br>
                        <a href="https://www.facebook.com/slyporkstudio" target="_blank" class="link-underline ml-7">
                            @slyporkstudio
                        </a><br><br>
                        <i class="fab fa-twitch" style="width: 30px; text-align: center;"></i>
                        <strong>Twitch:</strong><br>
                        <a href="https://www.twitch.tv/slyporkstudio" target="_blank" class="link-underline ml-7">
                            @slyporkstudio
                        </a>
                    </p>
                </div>
            </div>
        </section>
    </main>
    <script src="../assets/js/script.js"></script>
    <script src="../assets/js/boid-simulator.js" type="module"></script>
    <div class="easter-egg" id="easterEgg"></div>
    <script src="../assets/js/easter-egg.js"></script>
</body>

</html>

---
/Users/lachie/Documents/coding/website/booking/index.html
---
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>Booking | Slypork</title>
    <link rel="icon" type="image/png" sizes="16x16" href="../assets/images/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="../assets/images/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="192x192" href="../assets/images/favicon-192x192.png">
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-500.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home.webp" type="image/webp">
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home-hover.webp" type="image/webp">
    <link href="../assets/css/output.css" rel="stylesheet">
</head>

<body class="text-neutral-900">
    <canvas id="boidCanvas"></canvas>
    <div id="controls">
        <button id="godModeButton" class="mr-2 hidden md:block">
            <svg
                class="w-4 h-4 fill-current text-background hover:text-backgroundHovered transition transform hover:scale-110">
                <use href="../assets/images/icons.svg#sliders"></use>
            </svg>
        </button>
        <input type="range" id="speedSlider" min="0" max="200" value="100">
        <span id="speedValue" class="ml-2 text-background text-right w-10">100%</span>
    </div>
    <main id="container" class="flex px-4 pb-12 pt-8 md:px-12 md:pt-12 mx-auto flex-grow">
        <section id="content" class="flex-1 flex flex-col">
            <div class="flex flex-col items-center w-full">
                <a href=".." id="homeLink" class="p-1 mb-4">
                    <img id="simpleHomeLink" src="../assets/images/home.webp" alt="Home"
                        class="w-[64px] md:w-[80px] aspect-[80/65.94] home-logo">
                </a>
                <h1
                    class="text-3xl md:text-5xl pb-8 md:pb-12 header-font font-medium leading-tight px-2 md:px-4 text-center w-full">
                    <div id="pageTitle" class="inline-block">Booking</div>
                </h1>
            </div>
            <div class="visual-container flex-grow flex">
                <div class="px-0 md:px-4 py-4 md:py-8 flex-grow flex">
                    <div class="iframe-container rounded-xl overflow-hidden flex-grow">
                        <iframe
                            src="https://calendar.google.com/calendar/appointments/schedules/AcZssZ1i0sKVIrPUn9n4DPGSscS9byPDX_PlTqmgfSYP7UcXd4ngQCfr3-NvuJqOGcMXsbjjkvimRABy?gv=true"
                            class="block w-full h-full border-none" style="color-scheme: dark;"></iframe>
                    </div>
                </div>
            </div>
        </section>
    </main>
    <script src="../assets/js/script.js"></script>
    <script src="../assets/js/boid-simulator.js" type="module"></script>
    <div class="easter-egg" id="easterEgg"></div>
    <script src="../assets/js/easter-egg.js"></script>
</body>

</html>

---
/Users/lachie/Documents/coding/website/mastering/index.html
---
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>Mastering | Slypork</title>
    <link rel="icon" type="image/png" sizes="16x16" href="../assets/images/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="../assets/images/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="192x192" href="../assets/images/favicon-192x192.png">
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-500.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-300.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-200.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home.webp" type="image/webp">
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home-hover.webp" type="image/webp">
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/mastering/danger-zone-cropped.webp"
        type="image/webp">
    <link href="../assets/css/output.css" rel="stylesheet">
</head>

<body class="text-neutral-900">
    <canvas id="boidCanvas"></canvas>
    <div id="controls">
        <button id="godModeButton" class="mr-2 hidden md:block">
            <svg
                class="w-4 h-4 fill-current text-background hover:text-backgroundHovered transition transform hover:scale-110">
                <use href="../assets/images/icons.svg#sliders"></use>
            </svg>
        </button>
        <input type="range" id="speedSlider" min="0" max="200" value="100">
        <span id="speedValue" class="ml-2 text-background text-right w-10">100%</span>
    </div>
    <main id="container" class="flex px-4 pb-12 pt-8 md:px-12 md:pt-12 mx-auto">
        <header>
            <nav class="flex flex-row justify-center sm:flex-col text-2xl group">
                <button id="hamburger-menu" aria-label="Menu" class="py-3 px-2 sm:hidden">&#9776;</button>
                <ul id="navLinks"
                    class="inline-flex flex-col sm:flex-row md:flex md:flex-col md:items-start min-h-[60.75px] items-center justify-between min-w-0 md:min-w-36">
                    <li
                        class="group-[.nav-active]:pb-4 sm:group-[.nav-active]:pb-0 md:group-[.nav-active]:pb-9 md:px-3 md:pt-3 md:pb-9">
                        <a href=".." id="homeLink" class="p-1 block">
                            <img src="../assets/images/home.webp" alt="Home"
                                class="w-[64px] sm:w-[48px] md:w-[80px] aspect-[80/65.94] home-logo">
                        </a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../about/" id="aboutLink">
                            <span class="nav-link-text">About</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="./" class="selected" id="masteringLink">
                            <span class="nav-link-text">Mastering</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../music/" id="musicLink">
                            <span class="nav-link-text">Music</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../design/" id="designLink">
                            <span class="nav-link-text">Design</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../software/" id="softwareLink">
                            <span class="nav-link-text">Software</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../contact/" id="contactLink">
                            <span class="nav-link-text">Contact</span></a>
                    </li>
                </ul>
            </nav>
        </header>
        <section id="content" class="flex-1 md:px-4 flex flex-col">
            <h1 class="text-3xl md:text-5xl leading-tight px-2 md:px-4 pb-8 pt-10 md:pb-12 md:pt-7">
                <div id="pageTitle" class="inline-block">Mastering</div>
            </h1>
            <article id="blurb">
                <div class="visual-container" id="visualContainer">
                    <div class="mx-2 md:mx-4 my-4 md:my-8">
                        <div class="image-container mb-8">
                            <img id="masteringImage" src="../assets/images/mastering/danger-zone-cropped.webp"
                                alt="Mastering Studio Image" style="max-width: 100%; height: auto;" class="rounded-xl">
                        </div>
                        <p class="text-lg font-light">
                            I have been mastering audio for over four years, working with a wide range of styles from
                            underground electronica to pop and acoustic. I'm particularly drawn to outdoor sound system
                            culture, but have spent my fair share of time in the clubs as well.
                            <br><br>
                            I focus on stereo mastering but am happy to work with stems for those seeking a more
                            collaborative approach. My fully digital, in-the-box setup allows for low costs and fast
                            turnarounds. As a result, my mastering chain is constantly evolving.
                            <br><br>
                            If you'd like to know more about the tools I use, feel free to ask!
                            <br><br>
                        </p>
                        <h2 class="text-xl">Connect with me:</h2>
                        <p class="text-lg font-light ml-4">
                            <a href="https://forms.gle/eX6ChXJJtzQWtVws7" target="_blank"
                                class="link-underline inline-flex items-center">
                                Google form
                                <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" width="24" height="24"
                                    style="text-align: center; display: inline-block; vertical-align: middle;">
                                    <path d="M7 17L17 7M17 16L17 7L8 7" stroke="currentColor" stroke-width="1.2"
                                        fill="none" />
                                </svg>
                            </a>
                            <br>
                            Insta:
                            <a href="https://www.instagram.com/slyporkstudio" target="_blank"
                                class="link-underline inline-flex items-center">
                                @slyporkstudio
                                <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" width="24" height="24"
                                    style="text-align: center; display: inline-block; vertical-align: middle;">
                                    <path d="M7 17L17 7M17 16L17 7L8 7" stroke="currentColor" stroke-width="1.2"
                                        fill="none" />
                                </svg>
                            </a>
                            <br>
                            Email:
                            <a href="mailto:mastering@slypork.net" target="_blank"
                                class="link-underline">mastering@slypork.net
                            </a>
                        </p>
                    </div>
                </div>
            </article>
            <section id="playerGrid" class="visual-container-bottom">
                <div class="mx-2 md:mx-4 my-4 md:my-8">
                    <h2 class="text-2xl">Past work:
                    </h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 text-lg" id="songsGrid">
                        <!-- Items will be added here by JavaScript -->
                    </div>
                </div>
            </section>
        </section>
    </main>
    <script src="../assets/js/mastering.js"></script>
    <script src="../assets/js/script.js"></script>
    <script src="../assets/js/boid-simulator.js" type="module"></script>
    <div class="easter-egg" id="easterEgg"></div>
    <script src="../assets/js/easter-egg.js"></script>
</body>

</html>

---
/Users/lachie/Documents/coding/website/about/index.html
---
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>About | Slypork</title>
    <link rel="icon" type="image/png" sizes="16x16" href="../assets/images/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="../assets/images/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="192x192" href="../assets/images/favicon-192x192.png">
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-500.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-300.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-200.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home.webp" type="image/webp">
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home-hover.webp" type="image/webp">
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/about/about.webp">
    <link href="../assets/css/output.css" rel="stylesheet">
</head>

<body class="text-neutral-900">
    <canvas id="boidCanvas"></canvas>
    <div id="controls">
        <button id="godModeButton" class="mr-2 hidden md:block">
            <svg
                class="w-4 h-4 fill-current text-background hover:text-backgroundHovered transition transform hover:scale-110">
                <use href="../assets/images/icons.svg#sliders"></use>
            </svg>
        </button>
        <input type="range" id="speedSlider" min="0" max="200" value="100">
        <span id="speedValue" class="ml-2 text-background text-right w-10">100%</span>
    </div>
    <main id="container" class="flex px-4 pb-12 pt-8 md:px-12 md:pt-12 mx-auto">
        <header>
            <nav class="flex flex-row justify-center sm:flex-col text-2xl group">
                <button id="hamburger-menu" aria-label="Menu" class="py-3 px-2 sm:hidden">&#9776;</button>
                <ul id="navLinks"
                    class="inline-flex flex-col sm:flex-row md:flex md:flex-col md:items-start min-h-[60.75px] items-center justify-between min-w-0 md:min-w-36">
                    <li
                        class="group-[.nav-active]:pb-4 sm:group-[.nav-active]:pb-0 md:group-[.nav-active]:pb-9 md:px-3 md:pt-3 md:pb-9">
                        <a href=".." id="homeLink" class="p-1 block">
                            <img src="../assets/images/home.webp" alt="Home"
                                class="w-[64px] sm:w-[48px] md:w-[80px] aspect-[80/65.94] home-logo">
                        </a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="./" class="selected" id="aboutLink">
                            <span class="nav-link-text">About</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../mastering/" id="masteringLink">
                            <span class="nav-link-text">Mastering</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../music/" id="musicLink">
                            <span class="nav-link-text">Music</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../design/" id="designLink">
                            <span class="nav-link-text">Design</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../software/" id="softwareLink">
                            <span class="nav-link-text">Software</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../contact/" id="contactLink">
                            <span class="nav-link-text">Contact</span></a>
                    </li>
                </ul>
            </nav>
        </header>
        <section id="content" class="flex-1 md:px-4 flex flex-col">
            <h1 class="text-3xl md:text-5xl leading-tight px-2 md:px-4 pb-8 pt-10 md:pb-12 md:pt-7">
                <div id="pageTitle" class="inline-block">About</div>
            </h1>
            <div class="visual-container" id="visualContainer">
                <div class="flex flex-col lg:flex-row justify-center my-4 md:my-8">
                    <div class="w-full max-w-full lg:w-2/3 px-2 md:px-4">
                        <article id="blurb">
                            <div id="pageContent" class="text-lg font-light pb-12 lg:pb-0">
                                Nestled amongst the beautiful Port Hills of Whakaraupō, the studio overlooks the
                                magnificent Banks Peninsula.
                                <br><br>
                                Slypork was set up in 2023 by Lachie Mears with the help of some friends and a lifelong
                                desire for a dedicated creative space.
                                <br><br>
                                A born and bred lover of music, Lachie has spent the past 10 years learning how to work
                                with digital audio and has several years of experience mastering a wide range of music
                                from the Aotearoa underground.
                                <br><br>
                                So far, this has culminated in three diverse musical projects, and the co-founding of a
                                record label.
                                <br><br>
                                <div class="ml-4">
                                    •
                                    <a href="../music/" class="link-underline">Music Projects</a>
                                    <br>
                                    •
                                    <a href="https://teethandtail.bandcamp.com/" target="_blank"
                                        class="link-underline inline-flex items-center">
                                        Record Label (Bandcamp)
                                        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" width="24"
                                            height="24"
                                            style="text-align: center; display: inline-block; vertical-align: middle;">
                                            <path d="M7 17L17 7M17 16L17 7L8 7" stroke="currentColor" stroke-width="1.2"
                                                stroke-linecap="butt" stroke-linejoin="butt" fill="none" />
                                        </svg>
                                    </a>
                                </div>
                                <br>
                                In 2021 Lachie finished a bachelor's degree in Computer Science & Psychology and has
                                since grown a deep interest in software, UX, and graphic design, working on the
                                development of a number of quality of life and accessibility apps.
                            </div>
                        </article>
                    </div>
                    <div class="w-full max-w-full lg:w-1/3 px-2 md:px-4">
                        <section>
                            <img id="aboutImage" src="../assets/images/about/about.webp"
                                class="w-full lg:h-auto mx-auto modal-trigger cursor-pointer rounded-xl"
                                alt="Portrait of Lachie, founder of Slypork Studio, donned in lilac and enjoying a hi-tech morning at Twisted Frequency festival." />
                            <p class="text-center text-gray-500 text-sm mt-2">
                                <em>
                                    Portrait of Lachie, founder of Slypork Studio, donned in lilac and enjoying a
                                    morning of hi-tech music at Twisted Frequency festival.
                                </em>
                            </p>
                        </section>
                    </div>
                </div>
            </div>
        </section>
        <!-- Lightbox Modal -->

    </main>
    <div id="myModal" class="modal">
        <!-- <span class="close cursor-pointer">×</span> -->
        <img class="modal-content" id="modalImage">
    </div>
    <script src="../assets/js/script.js"></script>
    <script src="../assets/js/boid-simulator.js" type="module"></script>
    <div class="easter-egg" id="easterEgg"></div>
    <script src="../assets/js/easter-egg.js"></script>
</body>

</html>

---
/Users/lachie/Documents/coding/website/software/index.html
---
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>Software | Slypork</title>
    <link rel="icon" type="image/png" sizes="16x16" href="../assets/images/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="../assets/images/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="192x192" href="../assets/images/favicon-192x192.png">
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-500.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-300.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-200.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home.webp" type="image/webp">
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home-hover.webp" type="image/webp">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
        integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="../assets/css/output.css" rel="stylesheet">
</head>

<body class="text-neutral-900">
    <canvas id="boidCanvas"></canvas>
    <div id="controls">
        <button id="godModeButton" class="mr-2 hidden md:block">
            <svg
                class="w-4 h-4 fill-current text-background hover:text-backgroundHovered transition transform hover:scale-110">
                <use href="../assets/images/icons.svg#sliders"></use>
            </svg>
        </button>
        <input type="range" id="speedSlider" min="0" max="200" value="100">
        <span id="speedValue" class="ml-2 text-background text-right w-10">100%</span>
    </div>
    <main id="container" class="flex px-4 pb-12 pt-8 md:px-12 md:pt-12 mx-auto">
        <header>
            <nav class="flex flex-row justify-center sm:flex-col text-2xl group">
                <button id="hamburger-menu" aria-label="Menu" class="py-3 px-2 sm:hidden">&#9776;</button>
                <ul id="navLinks"
                    class="inline-flex flex-col sm:flex-row md:flex md:flex-col md:items-start min-h-[60.75px] items-center justify-between min-w-0 md:min-w-36">
                    <li
                        class="group-[.nav-active]:pb-4 sm:group-[.nav-active]:pb-0 md:group-[.nav-active]:pb-9 md:px-3 md:pt-3 md:pb-9">
                        <a href=".." id="homeLink" class="p-1 block">
                            <img src="../assets/images/home.webp" alt="Home"
                                class="w-[64px] sm:w-[48px] md:w-[80px] aspect-[80/65.94] home-logo">
                        </a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../about/" id="aboutLink">
                            <span class="nav-link-text">About</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../mastering/" id="masteringLink">
                            <span class="nav-link-text">Mastering</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../music/" id="musicLink">
                            <span class="nav-link-text">Music</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../design/" id="designLink">
                            <span class="nav-link-text">Design</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="./" class="selected" id="softwareLink">
                            <span class="nav-link-text">Software</span></a>
                    </li>
                    <li class="hidden group-[.nav-active]:block sm:block p-0 md:p-3">
                        <a href="../contact/" id="contactLink">
                            <span class="nav-link-text">Contact</span></a>
                    </li>
                </ul>
            </nav>
        </header>
        <section id="content" class="flex-1 md:px-4 flex flex-col">
            <h1 class="text-3xl md:text-5xl leading-tight px-2 md:px-4 pb-8 pt-10 md:pb-12 md:pt-7">
                <div id="pageTitle" class="inline-block">Software</div>
            </h1>
            <article id="blurb">
                <div class="visual-container" id="visualContainer">
                    <div class="mx-2 md:mx-4 my-4 md:my-8">
                        <p class="text-lg font-light">
                            I've been crafting software solutions for about two years. My portfolio showcases my
                            experience
                            with UI/UX, but I'm also developing skills in other areas. I specialize in web technologies
                            and mobile app development, and I'm eager to tackle new challenges. If you have a project in
                            mind, let's discuss how we can bring it to life.
                            <br><br>
                        </p>
                        <h2 class="text-xl">Connect with me:</h2>
                        <p class="text-lg font-light ml-4">
                            Email:
                            <a href="mailto:mastering@slypork.net" target="_blank"
                                class="link-underline">dev@slypork.net
                            </a>
                        </p>
                    </div>
                </div>
            </article>
            <section class="visual-container-bottom" id="softwareContainer">
                <div class="mx-2 md:mx-4 my-4 md:my-8">
                    <div>
                        <div class="my-4 text-xl">
                            <h2>Smart Access:</h2>
                            <p class="ml-4 text-lg font-light">
                                - UI/UX
                                <br>
                                - Data forensics
                            </p>
                        </div>
                        <iframe src="https://app.smartaccess.enterprises/" loading="lazy"
                            class="software-iframe rounded-xl" frameborder="0"></iframe>
                    </div>
                    <br>
                    <div>
                        <div class="my-4 text-xl">
                            <h2>My Life My Voice:</h2>
                            <p class="ml-4 text-lg font-light">
                                - UI/UX
                            </p>
                        </div>
                        <iframe src="https://app.mylifemyvoice.org.nz/" loading="lazy"
                            class="software-iframe  rounded-xl" frameborder="0"></iframe>
                    </div>
                    <br>
                    <div>
                        <div class="my-4 text-xl">
                            <h2>Twisted Frequency:</h2>
                            <p class="ml-4 text-lg font-light">
                                - UI/UX
                            </p>
                        </div>
                        <iframe src="https://twistedfrequency.nz/" loading="lazy" class="software-iframe rounded-xl"
                            frameborder="0"></iframe>
                    </div>
                    <br>
                    <div class="flex justify-center pb-4 pt-2 md:pt-6">
                        <div class="max-w-xs w-full">
                            <div class="flex flex-wrap justify-evenly gap-x-4 text-lg font-light">
                                <a href="https://github.com/Lmears" target="_blank"
                                    class="hover-effect inline-flex justify-center items-center">
                                    <i class="fab fa-github pr-2"></i>
                                    <span class="link-underline">Github</span>
                                    <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" width="24" height="24"
                                        class="inline-block align-middle text-center">
                                        <path d="M7 17L17 7M17 16L17 7L8 7" stroke="currentColor" stroke-width="1.2"
                                            fill="none" />
                                    </svg>
                                </a>
                                <a href="https://github.com/Lmears/slypork-studio" target="_blank"
                                    class="hover-effect inline-flex justify-center items-center">
                                    <i class="fas fa-code pr-2"></i>
                                    <span class="link-underline">Source code</span>
                                    <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" width="24" height="24"
                                        class="inline-block align-middle text-center">
                                        <path d="M7 17L17 7M17 16L17 7L8 7" stroke="currentColor" stroke-width="1.2"
                                            fill="none" />
                                    </svg>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </section>
    </main>
    <script src="../assets/js/script.js"></script>
    <script src="../assets/js/boid-simulator.js" type="module"></script>
    <div class="easter-egg" id="easterEgg"></div>
    <script src="../assets/js/easter-egg.js"></script>
</body>

</html>

---
/Users/lachie/Documents/coding/website/flock/index.html
---
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>Flock | Slypork</title>
    <link rel="icon" type="image/png" sizes="16x16" href="../assets/images/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="../assets/images/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="192x192" href="../assets/images/favicon-192x192.png">
    <link href="../assets/css/output.css" rel="stylesheet">
</head>

<body data-page-mode="permanent-sim">
    <canvas id="boidCanvas"></canvas>
    <div id="controls">
        <button id="godModeButton" class="mr-2 hidden md:block">
            <svg
                class="w-4 h-4 fill-current text-background hover:text-backgroundHovered transition transform hover:scale-110">
                <use href="../assets/images/icons.svg#sliders"></use>
            </svg>
        </button>
        <input type="range" id="speedSlider" min="0" max="200" value="100">
        <span id="speedValue" class="ml-2 text-background text-right w-10">100%</span>
    </div>
    <main id="container" class="flex px-4 pb-12 pt-8 md:px-12 md:pt-12 mx-auto">
        <section id="content" class="flex-1 flex flex-col">
            <div class="flex flex-col items-center">
                <a href=".." id="homeLink" class="p-1">
                    <img id="simpleHomeLink" src="../assets/images/home.webp" alt="Home"
                        class="w-[64px] md:w-[80px] aspect-[80/65.94] home-logo">
                </a>
            </div>
        </section>
    </main>
    <script src="../assets/js/script.js"></script>
    <script src="../assets/js/boid-simulator.js" type="module"></script>

    <!-- This new script block replaces the easter-egg.js functionality -->
    <script>
        /**
         * @param {string} sliderId - The ID of the slider element
         * @param {string} [displayId] - Optional ID of element to show the value
         * @param {string} [suffix='%'] - Suffix to add to displayed value
         */
        function initializeSlider(sliderId, displayId = null, suffix = '%') {
            const slider = document.getElementById(sliderId);
            const display = displayId ? document.getElementById(displayId) : null;

            if (!slider) {
                console.warn(`Slider with ID '${sliderId}' not found`);
                return;
            }

            const updateSliderHandler = function () {
                const value = parseFloat(slider.value);
                updateSliderFill(slider);

                if (display) {
                    const step = slider.step;
                    if (step && step.includes('.')) {
                        const precision = step.split('.')[1].length;
                        display.textContent = value.toFixed(precision) + suffix;
                    } else {
                        display.textContent = value + suffix;
                    }
                }
            };

            slider.addEventListener('input', updateSliderHandler);
            updateSliderHandler(); // Initial call
        }

        document.addEventListener('DOMContentLoaded', () => {
            const boidCanvas = document.getElementById('boidCanvas');
            const controls = document.getElementById('controls');

            // Instantly show the canvas and controls
            if (boidCanvas) {
                boidCanvas.style.display = 'block';
                boidCanvas.style.opacity = '1';
            }
            if (controls) {
                controls.style.display = 'flex';
                controls.style.opacity = '1';
            }

            // Set the body state
            document.body.classList.add('boid-active');

            // Initialize the slider and start the simulation
            if (typeof initializeSlider === 'function') {
                initializeSlider('speedSlider', 'speedValue', '%');
            }
            if (typeof startSimulation === 'function') {
                startSimulation();
            } else {
                console.error('startSimulation function not found. Ensure boid-simulator.js is loaded correctly.');
            }
        });
    </script>
</body>

</html>

---
/Users/lachie/Documents/coding/website/cv/index.html
---
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CV | Slypork</title>
    <link rel="icon" type="image/png" sizes="16x16" href="../assets/images/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="../assets/images/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="192x192" href="../assets/images/favicon-192x192.png">
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-500.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/inter-v19-latin-700.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/inter-v19-latin-600.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/inter-v19-latin-500.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="../assets/fonts/inter-v19-latin-regular.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home.webp" type="image/webp">
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home-hover.webp" type="image/webp">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
        integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="../assets/css/output.css" rel="stylesheet">
    <style>
        .pdf-icon-shadow {
            filter: drop-shadow(0 4px 4px rgba(0, 0, 0, 0.25));
        }

        .cv-font {
            font-family: 'Inter', sans-serif;
        }

        @page {
            size: A4;
            margin: 0;
        }

        .cv-page {
            width: 210mm;
            height: 297mm;
        }

        @media screen {
            .cv-page {
                width: 100%;
                max-width: 100%;
                height: auto;
            }
        }

        @media print {
            body {
                -webkit-print-color-adjust: exact;
                print-color-adjust: exact;
                margin: 0;
                padding: 0;
                scrollbar-gutter: auto !important;
            }

            .cv-page {
                width: 210mm;
                height: 297mm;
            }

            /* Remove padding from website shell elements for print */
            #container,
            #content {
                padding: 0 !important;
                margin: 0 !important;
            }

            .no-print {
                display: none !important;
            }

            .page-break {
                page-break-after: always;
            }

            .shadow-lg {
                box-shadow: none !important;
            }

            .print\:my-0 {
                margin-top: 0 !important;
                margin-bottom: 0 !important;
            }
        }
    </style>
</head>

<body class="text-neutral-900">
    <canvas id="boidCanvas" class="no-print"></canvas>
    <div id="controls" class="no-print">
        <button id="godModeButton" class="mr-2 hidden md:block">
            <svg
                class="w-4 h-4 fill-current text-background hover:text-backgroundHovered transition transform hover:scale-110">
                <use href="../assets/images/icons.svg#sliders"></use>
            </svg>
        </button>
        <input type="range" id="speedSlider" min="0" max="200" value="100">
        <span id="speedValue" class="ml-2 text-background text-right w-10">100%</span>
    </div>

    <main id="container" class="flex px-4 pb-12 pt-8 md:px-12 md:pt-12 mx-auto">
        <section id="content">
            <div class="flex flex-col items-center w-full no-print">
                <a href=".." id="homeLink" class="p-1 mb-4">
                    <img id="simpleHomeLink" src="../assets/images/home.webp" alt="Home"
                        class="w-[64px] md:w-[80px] aspect-[80/65.94] home-logo">
                </a>
                <h1 class="text-3xl md:text-5xl pb-8 md:pb-12 font-medium leading-tight px-2 md:px-4 text-center">
                    <div id="pageTitle" class="inline-block">Curriculum Vitae</div>
                </h1>
            </div>
            <div class="flex flex-row w-full justify-end">
                <button id="downloadPdfBtn" title="Download CV as PDF"
                    class="absolute -translate-y-14 md:-translate-y-16 md:mr-4 no-print z-50 bg-transparent text-white hover:opacity-90 focus:outline-none transition-opacity duration-150 ease-in-out">
                    <svg class="h-10 md:h-12" xmlns="http://www.w3.org/2000/svg"
                        xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" viewBox="11.194 0 67.616 90"
                        xml:space="preserve">
                        <g
                            style="stroke: none; stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: none; fill-rule: nonzero; opacity: 1;">
                            <path
                                d="M 78.806 62.716 V 20.496 c 0 -1.214 -0.473 -2.356 -1.332 -3.216 L 61.526 1.332 C 60.667 0.473 59.525 0 58.31 0 H 15.742 c -2.508 0 -4.548 2.04 -4.548 4.548 V 43.16 v 19.556 C 34.114 65.376 56.665 65.47 78.806 62.716 z"
                                style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(220,223,225); fill-rule: nonzero; opacity: 1;"
                                transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                            <path
                                d="M 11.194 62.716 v 11.23 v 11.506 c 0 2.508 2.04 4.548 4.548 4.548 h 58.517 c 2.508 0 4.548 -2.04 4.548 -4.548 V 62.716 H 11.194 z"
                                style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(7, 59, 76); fill-rule: nonzero; opacity: 1;"
                                transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                            <polygon points="60.27,18.41 78.81,36.88 78.73,19.73 "
                                style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(196,203,210); fill-rule: nonzero; opacity: 1;"
                                transform="  matrix(1 0 0 1 0 0) " />
                            <path
                                d="M 77.474 17.28 L 61.526 1.332 c -0.675 -0.676 -1.529 -1.102 -2.453 -1.258 v 15.382 c 0 2.358 1.919 4.277 4.277 4.277 h 15.382 C 78.576 18.81 78.15 17.956 77.474 17.28 z"
                                style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(171,178,184); fill-rule: nonzero; opacity: 1;"
                                transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                            <path
                                d="M 33.092 68.321 h -4.374 c -0.69 0 -1.25 0.56 -1.25 1.25 v 8.091 v 5.541 c 0 0.69 0.56 1.25 1.25 1.25 s 1.25 -0.56 1.25 -1.25 v -4.291 h 3.124 c 2.254 0 4.088 -1.834 4.088 -4.088 v -2.415 C 37.18 70.155 35.346 68.321 33.092 68.321 z M 34.68 74.824 c 0 0.876 -0.712 1.588 -1.588 1.588 h -3.124 v -5.591 h 3.124 c 0.876 0 1.588 0.712 1.588 1.588 V 74.824 z"
                                style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;"
                                transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                            <path
                                d="M 45.351 84.453 H 41.27 c -0.69 0 -1.25 -0.56 -1.25 -1.25 V 69.571 c 0 -0.69 0.56 -1.25 1.25 -1.25 h 4.082 c 2.416 0 4.38 1.965 4.38 4.38 v 7.371 C 49.731 82.488 47.767 84.453 45.351 84.453 z M 42.52 81.953 h 2.832 c 1.037 0 1.88 -0.844 1.88 -1.881 v -7.371 c 0 -1.036 -0.844 -1.88 -1.88 -1.88 H 42.52 V 81.953 z"
                                style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;"
                                transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                            <path
                                d="M 61.282 68.321 H 54.07 c -0.69 0 -1.25 0.56 -1.25 1.25 v 13.632 c 0 0.69 0.56 1.25 1.25 1.25 s 1.25 -0.56 1.25 -1.25 v -5.566 h 3.473 c 0.69 0 1.25 -0.56 1.25 -1.25 s -0.56 -1.25 -1.25 -1.25 H 55.32 v -4.315 h 5.962 c 0.69 0 1.25 -0.56 1.25 -1.25 S 61.973 68.321 61.282 68.321 z"
                                style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;"
                                transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                            <path
                                d="M 60.137 40.012 c -0.154 -0.374 -0.52 -0.617 -0.924 -0.617 h -4.805 V 27.616 c 0 -0.552 -0.447 -1 -1 -1 H 40.592 c -0.552 0 -1 0.448 -1 1 v 11.778 h -4.805 c -0.404 0 -0.769 0.244 -0.924 0.617 c -0.155 0.374 -0.069 0.804 0.217 1.09 l 12.213 12.213 c 0.195 0.195 0.451 0.293 0.707 0.293 s 0.512 -0.098 0.707 -0.293 L 59.92 41.102 C 60.206 40.815 60.292 40.386 60.137 40.012 z"
                                style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(196,203,210); fill-rule: nonzero; opacity: 1;"
                                transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                            <path
                                d="M 58.137 38.012 c -0.154 -0.374 -0.52 -0.617 -0.924 -0.617 h -4.805 V 25.616 c 0 -0.552 -0.447 -1 -1 -1 H 38.592 c -0.552 0 -1 0.448 -1 1 v 11.778 h -4.805 c -0.404 0 -0.769 0.244 -0.924 0.617 c -0.155 0.374 -0.069 0.804 0.217 1.09 l 12.213 12.213 c 0.195 0.195 0.451 0.293 0.707 0.293 s 0.512 -0.098 0.707 -0.293 L 57.92 39.102 C 58.206 38.815 58.292 38.386 58.137 38.012 z"
                                style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(7, 59, 76); fill-rule: nonzero; opacity: 1;"
                                transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                        </g>

                        <!-- Alternative Icon -->
                        <!-- <g style="stroke: none; stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: none; fill-rule: nonzero; opacity: 1;"
                transform="translate(1.4065934065934016 1.4065934065934016) scale(2.81 2.81)">
                <path
                    d="M 62.599 82.784 h 13.364 c 1.602 0 2.9 -1.298 2.9 -2.9 V 18.075 c 0 -0.769 -0.306 -1.507 -0.849 -2.051 L 62.84 0.849 C 62.296 0.306 61.558 0 60.789 0 H 20.283 c -1.602 0 -2.9 1.298 -2.9 2.9 v 18.662 v 23.234 v 7.612 v 27.475 c 0 1.602 1.298 2.9 2.9 2.9 h 13.044 H 62.599 z"
                    style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(220,223,225); fill-rule: nonzero; opacity: 1;"
                    transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                <path d="M 78.864 16.874 H 64.633 c -1.459 0 -2.642 -1.183 -2.642 -2.642 V 0 L 78.864 16.874 z"
                    style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(171,178,184); fill-rule: nonzero; opacity: 1;"
                    transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                <path
                    d="M 11.136 42.776 c 0 1.116 0.938 2.021 2.096 2.021 h 40.239 c 1.158 0 2.096 -0.905 2.096 -2.021 V 23.583 c 0 -1.116 -0.938 -2.021 -2.096 -2.021 H 13.232 c -1.158 0 -2.096 0.905 -2.096 2.021 V 42.776 z"
                    style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(234,84,64); fill-rule: nonzero; opacity: 1;"
                    transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                <path
                    d="M 60.377 76.061 h -4.652 V 59.482 c 0 -0.757 -0.592 -1.371 -1.322 -1.371 H 41.844 c -0.73 0 -1.322 0.614 -1.322 1.371 v 16.579 H 35.87 c -0.884 0 -1.326 1.068 -0.701 1.693 l 11.745 11.745 c 0.668 0.668 1.751 0.668 2.418 0 l 11.745 -11.745 C 61.703 77.129 61.26 76.061 60.377 76.061 z"
                    style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(234,84,64); fill-rule: nonzero; opacity: 1;"
                    transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                <path
                    d="M 22.088 35.351 h -4.486 c -0.552 0 -1 -0.448 -1 -1 v -7.437 c 0 -0.552 0.448 -1 1 -1 h 4.486 c 1.732 0 3.142 1.41 3.142 3.142 v 3.152 C 25.23 33.941 23.821 35.351 22.088 35.351 z M 18.603 33.351 h 3.486 c 0.63 0 1.142 -0.512 1.142 -1.142 v -3.152 c 0 -0.63 -0.512 -1.142 -1.142 -1.142 h -3.486 V 33.351 z"
                    style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;"
                    transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                <path
                    d="M 17.603 40.443 c -0.552 0 -1 -0.448 -1 -1 v -5.092 c 0 -0.552 0.448 -1 1 -1 s 1 0.448 1 1 v 5.092 C 18.603 39.996 18.155 40.443 17.603 40.443 z"
                    style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;"
                    transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                <path
                    d="M 34.432 40.443 h -4.266 c -0.552 0 -1 -0.448 -1 -1 V 26.915 c 0 -0.552 0.448 -1 1 -1 h 4.266 c 1.854 0 3.362 1.508 3.362 3.362 v 7.804 C 37.794 38.935 36.286 40.443 34.432 40.443 z M 31.166 38.443 h 3.266 c 0.751 0 1.362 -0.611 1.362 -1.362 v -7.804 c 0 -0.751 -0.611 -1.362 -1.362 -1.362 h -3.266 V 38.443 z"
                    style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;"
                    transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                <path
                    d="M 42.958 40.443 c -0.552 0 -1 -0.448 -1 -1 V 26.915 c 0 -0.552 0.448 -1 1 -1 s 1 0.448 1 1 v 12.529 C 43.958 39.996 43.51 40.443 42.958 40.443 z"
                    style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;"
                    transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                <path
                    d="M 49.586 27.915 h -6.628 c -0.552 0 -1 -0.448 -1 -1 s 0.448 -1 1 -1 h 6.628 c 0.553 0 1 0.448 1 1 S 50.139 27.915 49.586 27.915 z"
                    style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;"
                    transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
                <path
                    d="M 47.299 34.179 h -4.341 c -0.552 0 -1 -0.448 -1 -1 s 0.448 -1 1 -1 h 4.341 c 0.553 0 1 0.448 1 1 S 47.852 34.179 47.299 34.179 z"
                    style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(255,255,255); fill-rule: nonzero; opacity: 1;"
                    transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
            </g> -->
                    </svg>
                </button>
            </div>
            <div
                class="cv-font border-t-[0.5px] border-b-[0.5px] border-[rgba(23,23,23,0.5)] print:border-none px-0 md:px-4 py-4 md:py-8 print:p-0">
                <div class="rounded-xl print:rounded-none overflow-hidden cv-page flex flex-col" id="cvContent">
                    <header class="bg-primary text-white text-center p-6 rounded-t-lg print:rounded-none">
                        <p class="text-3xl font-bold text-white">LACHLAN MEARS</p>
                        <p class="text-lg text-gray-200 font-medium">Front-End Specialist | Full-Stack Experience</p>
                    </header>

                    <div class="flex flex-col md:flex-row print:flex-row flex-grow">
                        <div
                            class="md:w-1/3 print:w-1/3 bg-white md:bg-section print:bg-section p-6 space-y-6 mt-0 md:rounded-bl-lg print:rounded-none">
                            <section>
                                <ul class="space-y-1.5 text-sm">
                                    <li class="flex items-center">
                                        <i class="fas fa-phone fa-fw w-5 text-primary mr-2"></i>
                                        <a href="tel:02040259238"
                                            class="text-body hover:text-primary hover:underline">02040259238</a>
                                    </li>
                                    <li class="flex items-center">
                                        <i class="fas fa-envelope fa-fw w-5 text-primary mr-2"></i>
                                        <a href="mailto:dev@slypork.net"
                                            class="text-body hover:text-primary hover:underline">dev@slypork.net</a>
                                    </li>
                                    <li class="flex items-center">
                                        <i class="fab fa-github fa-fw w-5 text-primary mr-2"></i>
                                        <a href="https://github.com/Lmears" target="_blank"
                                            class="text-body hover:text-primary hover:underline">github.com/Lmears</a>
                                    </li>
                                    <li class="flex items-center">
                                        <i class="fas fa-globe fa-fw w-5 text-primary mr-2"></i>
                                        <a href="https://slypork.net/" target="_blank"
                                            class="text-body hover:text-primary hover:underline">slypork.net</a>
                                    </li>
                                </ul>
                            </section>
                            <hr class="border-gray-300 my-4">
                            <section>
                                <h2 class="text-lg font-semibold text-heading border-b border-heading pb-1 mb-2">
                                    PROFILE
                                </h2>
                                <p class="text-sm text-body">
                                    Front-end specialist with full-stack experience, expertise in
                                    <strong class="font-semibold text-primary">Flutter</strong>,
                                    <strong class="font-semibold text-primary">React.js</strong>, and
                                    <strong class="font-semibold text-primary">UI/UX design</strong>. Adept at building
                                    <strong class="font-semibold text-primary">accessible</strong>,
                                    <strong class="font-semibold text-primary">responsive</strong>, and
                                    <strong class="font-semibold text-primary">localized</strong>
                                    web applications. Passionate about inclusive design and user-centered development.
                                    Proven ability to juggle multiple projects and deliver high-quality results. Seeking
                                    to grow into a senior front-end developer role.
                                </p>
                            </section>
                            <hr class="border-gray-300 my-4">
                            <section>
                                <h2 class="text-lg font-semibold text-heading border-b border-heading pb-1 mb-2">
                                    TECHNICAL SKILLS
                                </h2>
                                <div class="space-y-2 text-sm">
                                    <div>
                                        <h4 class="font-semibold text-heading flex items-center text-sm">
                                            <i class="fas fa-code fa-fw w-5 text-primary mr-1.5"></i>Languages
                                        </h4>
                                        <p class="text-body ml-6 text-xs">Dart, JavaScript, TypeScript, HTML, CSS,
                                            Python, Java
                                        </p>
                                    </div>
                                    <div>
                                        <h4 class="font-semibold text-heading flex items-center text-sm">
                                            <i class="fas fa-cubes fa-fw w-5 text-primary mr-1.5"></i>Frameworks &
                                            Libraries
                                        </h4>
                                        <p class="text-body ml-6 text-xs">Flutter, React.js, Tailwind CSS
                                        </p>
                                    </div>
                                    <div>
                                        <h4 class="font-semibold text-heading flex items-center text-sm">
                                            <i class="fas fa-tools fa-fw w-5 text-primary mr-1.5"></i>Tools & Platforms
                                        </h4>
                                        <p class="text-body ml-6 text-xs">Git, Firebase, Supabase, Figma, GraphQL, REST
                                            APIs</p>
                                    </div>
                                    <div>
                                        <h4 class="font-semibold text-heading flex items-center text-sm">
                                            <i
                                                class="fas fa-drafting-compass fa-fw w-5 text-primary mr-1.5"></i>Practices
                                            & Design
                                        </h4>
                                        <p class="text-body ml-6 text-xs">Responsive Design, Accessibility (a11y),
                                            Localization (l10n), Agile</p>
                                    </div>
                                </div>
                            </section>
                            <hr class="border-gray-300 my-4">
                            <section class="hidden md:block print:block">
                                <h2 class="text-lg font-semibold text-heading border-b border-heading pb-1 mb-2">
                                    INTERESTS
                                </h2>
                                <ul class="space-y-1 text-sm text-body">
                                    <li class="flex items-center">
                                        <i class="fas fa-volume-up fa-fw w-5 text-primary mr-2"></i>Audio mastering
                                    </li>
                                    <li class="flex items-center">
                                        <i class="fas fa-gamepad fa-fw w-5 text-primary mr-2"></i>Indie game development
                                    </li>
                                    <li class="flex items-center">
                                        <i class="fas fa-brain fa-fw w-5 text-primary mr-2"></i>Locally hosted AI
                                    </li>
                                    <li class="flex items-center">
                                        <i class="fas fa-mountain fa-fw w-5 text-primary mr-2"></i>Bouldering
                                    </li>
                                    <li class="flex items-center">
                                        <i class="fas fa-film fa-fw w-5 text-primary mr-2"></i>Retro sci-fi
                                    </li>
                                    <!-- <li class="flex items-center">
                                        <i
                                            class="fas fa-balance-scale-right fa-fw w-5 text-primary mr-2"></i>Slacklining
                                    </li> -->
                                </ul>
                            </section>
                        </div>
                        <div
                            class="md:w-2/3 print:w-2/3 bg-white pl-6 pb-6 pr-6 md:pt-6 print:pt-6 space-y-6 rounded-bl-lg md:rounded-bl-none rounded-br-lg print:rounded-none">
                            <section>
                                <h2
                                    class="text-lg md:text-xl font-semibold text-heading border-b-2 border-heading pb-1 mb-3">
                                    PROFESSIONAL EXPERIENCE
                                </h2>
                                <div class="mb-4">
                                    <h3 class="text-lg font-semibold text-primary leading-tight">Software Developer |
                                        Front-End Focus
                                        <span class="font-normal text-sm text-gray-500 whitespace-nowrap">(Fixed-Term
                                            Contract)</span>
                                    </h3>
                                    <div class="flex items-center mt-1">
                                        <a href="https://app.smartaccess.enterprises/" target="_blank"
                                            class="text-primary hover:underline text-sm inline-flex items-center">
                                            <img src="../assets/images/navy-smart-access-logo.png" alt="Slypork logo"
                                                class="w-5 h-5 mr-2">
                                            <span>
                                                <strong class="font-semibold whitespace-nowrap">Smart Access</strong>
                                                <span class="whitespace-nowrap">
                                                    -
                                                    <em class="font-medium">Accessibility Navigation App</em>
                                                    <i
                                                        class="fas fa-external-link-alt text-xs print:hidden -translate-y-0.5"></i>
                                                </span>
                                            </span>
                                        </a>
                                    </div>
                                    <p class="text-xs text-gray-600 mb-1.5">May 2023 - Present</p>
                                    <ul class="list-disc list-outside ml-5 space-y-0.5 text-sm text-body">
                                        <li>Developed features for a Flutter app creating custom navigation routes for
                                            users with diverse accessibility needs.</li>
                                        <li>Built visualization interfaces for algorithmic navigation routes.</li>
                                        <li>Created responsive UI for accessibility data (NZ/Tasmania cities).</li>
                                        <li>Improved usability & accessibility (screen readers, UI patterns) via user
                                            feedback.
                                        </li>
                                        <li>Ensured cross-platform (iOS/Android/Web) compatibility.</li>
                                    </ul>
                                </div>
                                <div class="mb-4">
                                    <h3 class="text-lg font-semibold text-primary leading-tight">Software Developer |
                                        Front-End Focus
                                        <span class="font-normal text-sm text-gray-500 whitespace-nowrap">(Fixed-Term
                                            Contract)</span>
                                    </h3>
                                    <div class="flex items-center mt-1">
                                        <a href="https://app.mylifemyvoice.org.nz/" target="_blank"
                                            class="text-primary hover:underline text-sm inline-flex items-center">
                                            <img src="../assets/images/navy-mlmv-logo.png" alt="Slypork logo"
                                                class="w-5 h-5 mr-2">
                                            <span>
                                                <strong class="font-semibold whitespace-nowrap">My Life My
                                                    Voice</strong>
                                                <span class="whitespace-nowrap">
                                                    -
                                                    <em class="font-medium">Peer Support Platform</em>
                                                    <i
                                                        class="fas fa-external-link-alt text-xs print:hidden -translate-y-0.5"></i>
                                                </span>
                                            </span>
                                        </a>
                                    </div>
                                    <p class="text-xs text-gray-600 mb-1.5">May 2023 - Present</p>
                                    <ul class="list-disc list-outside ml-5 space-y-0.5 text-sm text-body">
                                        <li>Developed Flutter front-end for peer support application.</li>
                                        <li>Led implementation of a full forum system for community discussion and
                                            knowledge sharing.</li>
                                        <li>Integrated localization (l10n) for diverse language users.</li>
                                        <li>Integrated accessibility features (screen readers, navigation).
                                        </li>
                                        <!-- <li>Used Firebase for real-time notifications & enhanced Supabase backend.</li> -->
                                        <li>Used Firebase for notifications & enhanced Supabase backend.</li>
                                        <li>Ensured responsive design across all device types.</li>
                                    </ul>
                                </div>
                            </section>
                            <hr class="border-gray-300 my-4">
                            <section>
                                <h2
                                    class="text-lg md:text-xl font-semibold text-heading border-b-2 border-heading pb-1 mb-3">
                                    INDEPENDENT PROJECTS
                                </h2>
                                <div>
                                    <h3 class="text-lg font-semibold text-primary">Personal Portfolio Website
                                        <span class="font-normal text-sm text-gray-500">| 2023</span>
                                    </h3>
                                    <div class="flex items-center">
                                        <a href="https://slypork.net/" target="_blank"
                                            class="text-primary hover:underline text-sm inline-flex items-center">
                                            <img src="../assets/images/navy-slypork-logo.png" alt="Slypork logo"
                                                class="w-6 h-6 mr-2">
                                            slypork.net
                                            <i
                                                class="fas fa-external-link-alt ml-1 text-xs print:hidden -translate-y-0.5"></i>
                                        </a>
                                    </div>
                                    <ul class="list-disc list-outside ml-5 mt-1 space-y-0.5 text-sm text-body">
                                        <li>Built responsive portfolio to showcase projects and hobbies.
                                        </li>
                                        <li>Deployed and maintained via GitHub Pages.</li>
                                        <li>Implemented an <a href="https://slypork.net/flock" target="_blank"
                                                class="text-primary print:text-body font-semibold print:font-normal hover:underline inline-flex items-center">interactive
                                                boid flocking simulation<i
                                                    class="fas fa-external-link-alt ml-1 text-xs print:hidden -translate-y-0.5"></i></a>
                                            (JavaScript) as a visual experiment in animation and emergent behavior</li>
                                    </ul>
                                </div>
                            </section>
                            <hr class="border-gray-300 my-4">
                            <section>
                                <h2
                                    class="text-lg md:text-xl font-semibold text-heading border-b-2 border-heading pb-1 mb-3">
                                    EDUCATION
                                </h2>
                                <div>
                                    <h3 class="text-lg font-semibold text-primary">Bachelor of Science</h3>
                                    <div class="flex items-center">
                                        <img src="../assets/images/navy-vuw-logo.png"
                                            alt="Victoria University of Wellington logo" class="w-5 h-5 mr-2">
                                        <p class="text-heading font-medium text-sm">Victoria University of
                                            Wellington</p>
                                    </div>
                                    <p class="text-sm text-body">Major: Computer Science | Minor: Psychology
                                    </p>
                                    <p class="text-xs text-gray-600">Graduated 2021</p>
                                </div>
                            </section>
                            <hr class="border-gray-300 my-4 md:hidden print:hidden">
                            <section class="block md:hidden print:hidden">
                                <h2 class="text-lg font-semibold text-heading border-b border-heading pb-1 mb-2">
                                    INTERESTS
                                </h2>
                                <ul class="space-y-1 text-sm text-body">
                                    <li class="flex items-center">
                                        <i class="fas fa-volume-up fa-fw w-5 text-primary mr-2"></i>Audio mastering
                                    </li>
                                    <li class="flex items-center">
                                        <i class="fas fa-gamepad fa-fw w-5 text-primary mr-2"></i>Indie game development
                                    </li>
                                    <li class="flex items-center">
                                        <i class="fas fa-brain fa-fw w-5 text-primary mr-2"></i>Locally hosted AI
                                    </li>
                                    <li class="flex items-center">
                                        <i class="fas fa-mountain fa-fw w-5 text-primary mr-2"></i>Bouldering
                                    </li>
                                    <li class="flex items-center">
                                        <i class="fas fa-film fa-fw w-5 text-primary mr-2"></i>Retro sci-fi
                                    </li>
                                    <!-- <li class="flex items-center">
                                        <i
                                            class="fas fa-balance-scale-right fa-fw w-5 text-primary mr-2"></i>Slacklining
                                    </li> -->
                                </ul>
                            </section>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>



    <script src="../assets/js/script.js"></script>
    <script src="../assets/js/boid-simulator.js" type="module"></script>
    <script>
        const downloadBtn = document.getElementById('downloadPdfBtn');
        if (downloadBtn) {
            downloadBtn.addEventListener('click', function () {
                window.print();
            });
        }
    </script>
    <div class="easter-egg no-print" id="easterEgg"></div>
    <script src="../assets/js/easter-egg.js"></script>
</body>

</html>

---
/Users/lachie/Documents/coding/website/assets/css/boid-simulator.css
---
#boidCanvas {
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
}

#controls {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.5);
    padding: 10px 20px;
    border-radius: 20px;
    display: flex;
    align-items: center;
    transition: opacity 0.3s;
    z-index: 1000;
}

#controls:hover {
    opacity: 1;
}

#speedSlider {
    width: 200px;
    height: 5px;
    border-radius: 5px;
    background: #d3d3d3;
    outline: none;
    opacity: 0.7;
    transition: opacity 0.2s;
}

#speedSlider:hover {
    opacity: 1;
}

#speedSlider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background: #4CAF50;
    cursor: pointer;
}

#speedSlider::-moz-range-thumb {
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background: #4CAF50;
    cursor: pointer;
}

#speedValue {
    color: white;
    margin-left: 10px;
    width: 30px;
    text-align: right;
    font-size: 16px;
}

#boidCanvas,
#controls {
    display: none;
}

---
/Users/lachie/Documents/coding/website/assets/css/input.css
---
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Main Styles */

/* Base styles */

html {
    margin: 0;
    padding: 0;
    background-color: rgb(243, 244, 241);
    color: rgb(23, 23, 23);
    transition: background-color 0.5s ease;
    height: 100%;
    overflow: hidden;
}

body {
    height: 100%;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
    scrollbar-gutter: stable both-edges;
    position: relative;
    overflow-x: hidden;
    scrollbar-color: #b1b1b1 #e1e1e1;
    scrollbar-width: thin;
}

.boid-active {
    background-color: transparent !important;
}

/* Typography */
h1 {
    min-width: 303.44px;
}

.thin-underline:hover {
    text-decoration: underline 1px;
    text-underline-offset: 3px;
}

.subtle-underline:hover {
    text-decoration: underline 1.5px;
    text-underline-offset: 3px;
}

.link-underline {
    text-decoration: underline 1.5px;
    text-underline-offset: 3px;
    transition: text-underline-offset 0.2s ease;
}

.link-underline:hover {
    text-underline-offset: 6px;
}

.hover-effect:hover .link-underline {
    text-underline-offset: 6px;
}

/* Layout */
#container {
    width: 100%;
    max-width: 1080px;
}

.visual-container,
.visual-container-bottom {
    border-top: 0.5px solid rgba(23, 23, 23, 0.5);
    /* margin-top: -0.5px; */
    border-bottom: 0.5px solid rgba(23, 23, 23, 0.5);
    position: relative;
    z-index: 1;
    /* backdrop-filter: blur(8px); */
}

.visual-container {
    border-top: 0.5px solid rgba(23, 23, 23, 0.5);
}

.visual-container-bottom {
    position: relative;
}

/* Navigation */

nav.nav-active {
    margin-bottom: 0px;
}

nav ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

nav ul li a {
    display: inline-block;
    text-decoration: none;
    color: inherit;
    font-weight: 100;
    padding: 4px;
}

.nav-link-text {
    /* display: block; */
    text-align: center;
    letter-spacing: 0.025em;
}

nav ul li a.selected .nav-link-text {
    font-weight: 500;
    letter-spacing: 0.01em;
}

/* Hamburger menu */
#hamburger-menu {
    font-size: 2.25rem;
    position: absolute;
    top: 32px;
    right: 16px;
    z-index: 1000;
    color: rgba(23, 23, 23);
}

/* Cursor */
.cursor-pointer {
    cursor: pointer;
}

/* Hover effects */
nav ul li a:hover,
#hamburger-menu:hover,
.subtle-underline:hover,
.link-underline:hover,
.hover-effect:hover,
.hover-effect:hover .project-name,
.close:hover,
.close:focus {
    color: rgba(23, 23, 23, 0.7);
}

/* Aspect ratio */
.aspect-ratio-1\/1 {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
}

.aspect-ratio-1\/1 iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 12px;
}

/* Modal */
.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
    align-items: center;
    justify-content: center;
}

.modal-content {
    max-width: 90%;
    max-height: 90%;
}

#caption {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
    text-align: center;
    color: rgba(23, 23, 23, 0.75);
    padding: 10px 0;
    height: 150px;
    font-style: italic;
}

.close {
    position: absolute;
    top: 10px;
    right: 35px;
    color: rgba(23, 23, 23);
    font-size: 30px;
    font-weight: 100;
    transition: color 0.2s;
    background: transparent;
    border: none;
}

/* Scrollbar */
/* * {
    scrollbar-width: thin;
    scrollbar-color: #afb3b8 #e9ebed;
} */

/* *::-webkit-scrollbar-track {
    background: #e9ebed;
    border: 1px solid #fff;
    border-radius: 4px;
    scrollbar-width: thin;
} */

/* ::-webkit-scrollbar {
    width: 12px;
    background: #e9ebed;
}

::-webkit-scrollbar-track {
    background: #e9ebed;
}

::-webkit-scrollbar-thumb {
    background-color: #a8acb1;
    border-radius: 6px;
    border: 3px solid #e9ebed;
} */

/* Software iframes */
.software-iframe {
    width: 100%;
    height: 800px;
}

@media (max-width: 767px) {
    #container {
        flex-direction: column;
    }

    .visual-container,
    .visual-container-bottom {
        padding: 0;
    }

    nav ul li a {
        font-size: smaller;
    }
}

/* Easter Egg */

.easter-egg {
    position: fixed;
    bottom: -21px;
    right: 32px;
    width: 45px;
    height: 40px;
    background-image: url('../images/home.webp');
    background-size: 45px 40px;
    background-position: center;
    z-index: 2000;
    cursor: pointer;
}

/* Create the pseudo-element for the hover state */
.easter-egg::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    /* The hover image */
    background-image: url('../images/home-hover.webp');
    background-size: 45px 40px;
    background-position: center;
    background-repeat: no-repeat;

    /* Start with it being invisible */
    opacity: 0;
}

/* On hover, make the pseudo-element visible */
.easter-egg:not(.easter-egg--clicked):hover::after {
    opacity: 1;
}

/* Mastering */

.player-wrapper {
    margin-top: 1rem;
}

.release-name,
.credits {
    color: rgba(23, 23, 23);
    text-align: start;
    /* font-size: 0.8em; */
    line-height: 1.2;
}

.release-name {
    padding-top: 0.75rem;
    padding-bottom: 0.375rem;
}

.credits {
    padding-bottom: 0.5rem;
    font-weight: 100;
}

.various-artists {
    color: rgba(23, 23, 23);
    text-align: start;
    font-size: 0.8em;
    font-weight: 100;
}

/* Music */

.project-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    padding-top: 12px;
}

.project-logo {
    width: 100%;
    max-width: 180px;
    margin-bottom: 1rem;
    transition: transform 0.2s ease, filter 0.2s ease;
    filter: drop-shadow(0 1px 3px rgba(0, 0, 0, 0.2));
}

.hover-effect:hover .project-logo {
    transform: scale(1.05);
    filter: drop-shadow(0 3px 6px rgba(0, 0, 0, 0.3));
}

.project-name,
.project-info {
    color: rgba(23, 23, 23);
    display: flex;
    align-items: center;
    justify-content: center;
}

.project-name {
    padding-top: 0.5rem;
    font-weight: 500;
}

.project-name:hover {
    text-decoration: underline 1.5px;
    text-underline-offset: 3px;
}

.project-info {
    padding-bottom: 0.5rem;
}

.soundcloud-artist {
    color: rgba(23, 23, 23);
    line-break: anywhere;
    font-weight: 300;
}

/* Boid Simulation */

#boidCanvas {
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
}


#controls {
    position: fixed;
    bottom: 16px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    padding: 10px 16px;
    border-radius: 32px;
    display: flex;
    align-items: center;
    transition: opacity 0.3s;
    z-index: 1000;
}

input[type=range] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background: transparent;
    filter: brightness(0.9);
    transition: filter 0.2s;
    padding: 8px 0;
    margin-top: -8px;
    margin-bottom: -8px;
    cursor: pointer;
}

input[type=range]:hover {
    filter: brightness(1.1);
}


input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background: #2196F3;
    cursor: pointer;
    margin-top: -4.5px;
    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.4);
}

input[type=range]::-webkit-slider-runnable-track {
    width: 100%;
    height: 6px;
    cursor: pointer;
    background: linear-gradient(to right, #2196F3 0%, #2196F3 var(--value, 50%), #d3d3d3 var(--value, 50%), #d3d3d3 100%);
    border-radius: 6px;
}

input[type=range]::-moz-range-thumb {
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background: #2196F3;
    cursor: pointer;
    border: none;
    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.4);
}

input[type=range]::-moz-range-track {
    width: 100%;
    height: 6px;
    cursor: pointer;
    background: linear-gradient(to right, #2196F3 0%, #2196F3 var(--value, 50%), #d3d3d3 var(--value, 50%), #d3d3d3 100%);
    border-radius: 6px;
    border: none;
}

/* Hide the default checkbox */
input[type="checkbox"] {
    appearance: none;
    -webkit-appearance: none;
    width: 13px;
    height: 13px;
    border-radius: 4px;
    background: #d3d3d3;
    cursor: pointer;
    position: relative;
    filter: brightness(0.8);
    transition: filter 0.2s;
}

/* Hover effect */
input[type="checkbox"]:hover {
    filter: brightness(1.1);
}

/* Checked state */
input[type="checkbox"]:checked {
    background: #2196F3;
    filter: brightness(1);
}

/* Checked hover effect */
input[type="checkbox"]:checked:hover {
    filter: brightness(1.15);
}

/* Centered checkmark */
input[type="checkbox"]:checked::after {
    content: '';
    position: absolute;
    left: 50%;
    top: 50%;
    width: 5px;
    height: 8px;
    border: solid white;
    border-width: 0 2px 2px 0;
    transform: translate(-50%, -60%) rotate(45deg);
}

/* Disabled state */
input[type="checkbox"]:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    filter: none;
}

#boidCanvas,
#controls {
    display: none;
}

/* Fonts */

/* Roboto */
/* roboto-200 - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 200;
    src: url('../fonts/roboto-v48-latin-200.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* roboto-200italic - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Roboto';
    font-style: italic;
    font-weight: 200;
    src: url('../fonts/roboto-v48-latin-200italic.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* roboto-300 - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 300;
    src: url('../fonts/roboto-v48-latin-300.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* roboto-300italic - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Roboto';
    font-style: italic;
    font-weight: 300;
    src: url('../fonts/roboto-v48-latin-300italic.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* roboto-500 - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 500;
    src: url('../fonts/roboto-v48-latin-500.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* roboto-500italic - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Roboto';
    font-style: italic;
    font-weight: 500;
    src: url('../fonts/roboto-v48-latin-500italic.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* Inter */
/* inter-regular - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Inter';
    font-style: normal;
    font-weight: 400;
    src: url('../fonts/inter-v19-latin-regular.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-italic - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Inter';
    font-style: italic;
    font-weight: 400;
    src: url('../fonts/inter-v19-latin-italic.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-500 - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Inter';
    font-style: normal;
    font-weight: 500;
    src: url('../fonts/inter-v19-latin-500.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-500italic - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Inter';
    font-style: italic;
    font-weight: 500;
    src: url('../fonts/inter-v19-latin-500italic.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-600 - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Inter';
    font-style: normal;
    font-weight: 600;
    src: url('../fonts/inter-v19-latin-600.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-600italic - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Inter';
    font-style: italic;
    font-weight: 600;
    src: url('../fonts/inter-v19-latin-600italic.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-700 - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Inter';
    font-style: normal;
    font-weight: 700;
    src: url('../fonts/inter-v19-latin-700.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-700italic - latin */
@font-face {
    font-display: swap;
    /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
    font-family: 'Inter';
    font-style: italic;
    font-weight: 700;
    src: url('../fonts/inter-v19-latin-700italic.woff2') format('woff2');
    /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

---
/Users/lachie/Documents/coding/website/assets/css/mastering.css
---
.player-wrapper {
    margin-top: 1rem;
}

.release-name,
.credits {
    color: rgba(23, 23, 23);
    text-align: start;
    /* font-size: 0.8em; */
    line-height: 1.2;
}

.release-name {
    padding-top: 0.75rem;
    padding-bottom: 0.375rem;
}

.credits {
    padding-bottom: 0.5rem;
    font-weight: 100;
}

.various-artists {
    color: rgba(23, 23, 23);
    text-align: start;
    font-size: 0.8em;
    font-weight: 100;
}

---
/Users/lachie/Documents/coding/website/assets/css/music.css
---
.project-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    padding-top: 12px;
}

.project-logo {
    width: 100%;
    max-width: 180px;
    margin-bottom: 1rem;
    transition: transform 0.2s ease;
}

.hover-effect:hover .project-logo {
    transform: scale(1.05);
}

.project-name,
.project-info {
    color: rgba(23, 23, 23);
    display: flex;
    align-items: center;
    justify-content: center;
}

.project-name {
    padding-top: 0.5rem;
    font-weight: 500;
}

.project-name:hover {
    text-decoration: underline 1.5px;
    text-underline-offset: 3px;
}

.project-info {
    padding-bottom: 0.5rem;
}

.soundcloud-artist {
    color: rgba(23, 23, 23);
    line-break: anywhere;
    font-weight: 300;
}

---
/Users/lachie/Documents/coding/website/assets/css/output.css
---
*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Roboto, sans-serif;
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

.container {
  width: 100%;
}

@media (min-width: 642px) {
  .container {
    max-width: 642px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

.visible {
  visibility: visible;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.bottom-4 {
  bottom: 1rem;
}

.left-4 {
  left: 1rem;
}

.left-\[-4px\] {
  left: -4px;
}

.right-\[-4px\] {
  right: -4px;
}

.top-1\/2 {
  top: 50%;
}

.z-50 {
  z-index: 50;
}

.z-\[1000\] {
  z-index: 1000;
}

.m-0 {
  margin: 0px;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-0 {
  margin-top: 0px;
  margin-bottom: 0px;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.mb-1\.5 {
  margin-bottom: 0.375rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-3 {
  margin-bottom: 0.75rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.ml-1 {
  margin-left: 0.25rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.ml-4 {
  margin-left: 1rem;
}

.ml-5 {
  margin-left: 1.25rem;
}

.ml-6 {
  margin-left: 1.5rem;
}

.ml-7 {
  margin-left: 1.75rem;
}

.mr-1\.5 {
  margin-right: 0.375rem;
}

.mr-2 {
  margin-right: 0.5rem;
}

.mt-0 {
  margin-top: 0px;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-\[10vh\] {
  margin-top: 10vh;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.\!grid {
  display: grid !important;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.aspect-\[80\/65\.94\] {
  aspect-ratio: 80/65.94;
}

.h-10 {
  height: 2.5rem;
}

.h-4 {
  height: 1rem;
}

.h-5 {
  height: 1.25rem;
}

.h-6 {
  height: 1.5rem;
}

.h-full {
  height: 100%;
}

.max-h-\[calc\(100vh-32px\)\] {
  max-height: calc(100vh - 32px);
}

.min-h-0 {
  min-height: 0px;
}

.min-h-\[60\.75px\] {
  min-height: 60.75px;
}

.min-h-full {
  min-height: 100%;
}

.w-10 {
  width: 2.5rem;
}

.w-4 {
  width: 1rem;
}

.w-5 {
  width: 1.25rem;
}

.w-6 {
  width: 1.5rem;
}

.w-\[64px\] {
  width: 64px;
}

.w-\[80px\] {
  width: 80px;
}

.w-full {
  width: 100%;
}

.min-w-0 {
  min-width: 0px;
}

.min-w-\[276px\] {
  min-width: 276px;
}

.max-w-full {
  max-width: 100%;
}

.max-w-xs {
  max-width: 20rem;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-shrink {
  flex-shrink: 1;
}

.flex-grow {
  flex-grow: 1;
}

.grow {
  flex-grow: 1;
}

.-translate-y-0\.5 {
  --tw-translate-y: -0.125rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-14 {
  --tw-translate-y: -3.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-2 {
  --tw-translate-y: -0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-0 {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-5 {
  --tw-translate-y: 1.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-100 {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-95 {
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.resize {
  resize: both;
}

.list-outside {
  list-style-position: outside;
}

.list-disc {
  list-style-type: disc;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-evenly {
  justify-content: space-evenly;
}

.gap-4 {
  gap: 1rem;
}

.gap-8 {
  gap: 2rem;
}

.gap-x-4 {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

.space-y-0\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
}

.space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-y-auto {
  overflow-y: auto;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded-2xl {
  border-radius: 1rem;
}

.rounded-\[32px\] {
  border-radius: 32px;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.rounded-t-lg {
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}

.rounded-bl-lg {
  border-bottom-left-radius: 0.5rem;
}

.rounded-br-lg {
  border-bottom-right-radius: 0.5rem;
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.border-b-\[0\.5px\] {
  border-bottom-width: 0.5px;
}

.border-t-\[0\.5px\] {
  border-top-width: 0.5px;
}

.border-none {
  border-style: none;
}

.border-\[rgba\(23\2c 23\2c 23\2c 0\.5\)\] {
  border-color: rgba(23,23,23,0.5);
}

.border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity, 1));
}

.border-heading {
  --tw-border-opacity: 1;
  border-color: rgb(25 58 74 / var(--tw-border-opacity, 1));
}

.bg-background {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 241 / var(--tw-bg-opacity, 1));
}

.bg-black\/60 {
  background-color: rgb(0 0 0 / 0.6);
}

.bg-primary {
  --tw-bg-opacity: 1;
  background-color: rgb(7 59 76 / var(--tw-bg-opacity, 1));
}

.bg-transparent {
  background-color: transparent;
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.fill-current {
  fill: currentColor;
}

.p-0 {
  padding: 0px;
}

.p-1 {
  padding: 0.25rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-5 {
  padding: 1.25rem;
}

.p-6 {
  padding: 1.5rem;
}

.px-0 {
  padding-left: 0px;
  padding-right: 0px;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.pb-1 {
  padding-bottom: 0.25rem;
}

.pb-12 {
  padding-bottom: 3rem;
}

.pb-4 {
  padding-bottom: 1rem;
}

.pb-6 {
  padding-bottom: 1.5rem;
}

.pb-8 {
  padding-bottom: 2rem;
}

.pl-6 {
  padding-left: 1.5rem;
}

.pr-2 {
  padding-right: 0.5rem;
}

.pr-6 {
  padding-right: 1.5rem;
}

.pt-10 {
  padding-top: 2.5rem;
}

.pt-2 {
  padding-top: 0.5rem;
}

.pt-8 {
  padding-top: 2rem;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.align-middle {
  vertical-align: middle;
}

.font-sans {
  font-family: Roboto, sans-serif;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-light {
  font-weight: 300;
}

.font-medium {
  font-weight: 500;
}

.font-normal {
  font-weight: 400;
}

.font-semibold {
  font-weight: 600;
}

.leading-none {
  line-height: 1;
}

.leading-tight {
  line-height: 1.25;
}

.text-background {
  --tw-text-opacity: 1;
  color: rgb(243 244 241 / var(--tw-text-opacity, 1));
}

.text-body {
  --tw-text-opacity: 1;
  color: rgb(51 51 51 / var(--tw-text-opacity, 1));
}

.text-gray-200 {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity, 1));
}

.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity, 1));
}

.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
}

.text-heading {
  --tw-text-opacity: 1;
  color: rgb(25 58 74 / var(--tw-text-opacity, 1));
}

.text-neutral-900 {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity, 1));
}

.text-primary {
  --tw-text-opacity: 1;
  color: rgb(7 59 76 / var(--tw-text-opacity, 1));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.opacity-0 {
  opacity: 0;
}

.opacity-100 {
  opacity: 1;
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline {
  outline-style: solid;
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.backdrop-blur-sm {
  --tw-backdrop-blur: blur(4px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-150 {
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

/* Main Styles */

/* Base styles */

html {
  margin: 0;
  padding: 0;
  background-color: rgb(243, 244, 241);
  color: rgb(23, 23, 23);
  transition: background-color 0.5s ease;
  height: 100%;
  overflow: hidden;
}

body {
  height: 100%;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
  scrollbar-gutter: stable both-edges;
  position: relative;
  overflow-x: hidden;
  scrollbar-color: #b1b1b1 #e1e1e1;
  scrollbar-width: thin;
}

.boid-active {
  background-color: transparent !important;
}

/* Typography */

h1 {
  min-width: 303.44px;
}

.thin-underline:hover {
  -webkit-text-decoration: underline 1px;
          text-decoration: underline 1px;
  text-underline-offset: 3px;
}

.subtle-underline:hover {
  -webkit-text-decoration: underline 1.5px;
          text-decoration: underline 1.5px;
  text-underline-offset: 3px;
}

.link-underline {
  -webkit-text-decoration: underline 1.5px;
          text-decoration: underline 1.5px;
  text-underline-offset: 3px;
  transition: text-underline-offset 0.2s ease;
}

.link-underline:hover {
  text-underline-offset: 6px;
}

.hover-effect:hover .link-underline {
  text-underline-offset: 6px;
}

/* Layout */

#container {
  width: 100%;
  max-width: 1080px;
}

.visual-container,
.visual-container-bottom {
  border-top: 0.5px solid rgba(23, 23, 23, 0.5);
  /* margin-top: -0.5px; */
  border-bottom: 0.5px solid rgba(23, 23, 23, 0.5);
  position: relative;
  z-index: 1;
  /* backdrop-filter: blur(8px); */
}

.visual-container {
  border-top: 0.5px solid rgba(23, 23, 23, 0.5);
}

.visual-container-bottom {
  position: relative;
}

/* Navigation */

nav.nav-active {
  margin-bottom: 0px;
}

nav ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

nav ul li a {
  display: inline-block;
  text-decoration: none;
  color: inherit;
  font-weight: 100;
  padding: 4px;
}

.nav-link-text {
  /* display: block; */
  text-align: center;
  letter-spacing: 0.025em;
}

nav ul li a.selected .nav-link-text {
  font-weight: 500;
  letter-spacing: 0.01em;
}

/* Hamburger menu */

#hamburger-menu {
  font-size: 2.25rem;
  position: absolute;
  top: 32px;
  right: 16px;
  z-index: 1000;
  color: rgba(23, 23, 23);
}

/* Cursor */

.cursor-pointer {
  cursor: pointer;
}

/* Hover effects */

nav ul li a:hover,
#hamburger-menu:hover,
.subtle-underline:hover,
.link-underline:hover,
.hover-effect:hover,
.hover-effect:hover .project-name,
.close:hover,
.close:focus {
  color: rgba(23, 23, 23, 0.7);
}

/* Aspect ratio */

.aspect-ratio-1\/1 {
  position: relative;
  width: 100%;
  padding-bottom: 100%;
}

.aspect-ratio-1\/1 iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
}

/* Modal */

.modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.9);
  align-items: center;
  justify-content: center;
}

.modal-content {
  max-width: 90%;
  max-height: 90%;
}

#caption {
  margin: auto;
  display: block;
  width: 80%;
  max-width: 700px;
  text-align: center;
  color: rgba(23, 23, 23, 0.75);
  padding: 10px 0;
  height: 150px;
  font-style: italic;
}

.close {
  position: absolute;
  top: 10px;
  right: 35px;
  color: rgba(23, 23, 23);
  font-size: 30px;
  font-weight: 100;
  transition: color 0.2s;
  background: transparent;
  border: none;
}

/* Scrollbar */

/* * {
    scrollbar-width: thin;
    scrollbar-color: #afb3b8 #e9ebed;
} */

/* *::-webkit-scrollbar-track {
    background: #e9ebed;
    border: 1px solid #fff;
    border-radius: 4px;
    scrollbar-width: thin;
} */

/* ::-webkit-scrollbar {
    width: 12px;
    background: #e9ebed;
}

::-webkit-scrollbar-track {
    background: #e9ebed;
}

::-webkit-scrollbar-thumb {
    background-color: #a8acb1;
    border-radius: 6px;
    border: 3px solid #e9ebed;
} */

/* Software iframes */

.software-iframe {
  width: 100%;
  height: 800px;
}

@media (max-width: 767px) {
  #container {
    flex-direction: column;
  }

  .visual-container,
    .visual-container-bottom {
    padding: 0;
  }

  nav ul li a {
    font-size: smaller;
  }
}

/* Easter Egg */

.easter-egg {
  position: fixed;
  bottom: -21px;
  right: 32px;
  width: 45px;
  height: 40px;
  background-image: url('../images/home.webp');
  background-size: 45px 40px;
  background-position: center;
  z-index: 2000;
  cursor: pointer;
}

/* Create the pseudo-element for the hover state */

.easter-egg::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* The hover image */
  background-image: url('../images/home-hover.webp');
  background-size: 45px 40px;
  background-position: center;
  background-repeat: no-repeat;
  /* Start with it being invisible */
  opacity: 0;
}

/* On hover, make the pseudo-element visible */

.easter-egg:not(.easter-egg--clicked):hover::after {
  opacity: 1;
}

/* Mastering */

.player-wrapper {
  margin-top: 1rem;
}

.release-name,
.credits {
  color: rgba(23, 23, 23);
  text-align: start;
  /* font-size: 0.8em; */
  line-height: 1.2;
}

.release-name {
  padding-top: 0.75rem;
  padding-bottom: 0.375rem;
}

.credits {
  padding-bottom: 0.5rem;
  font-weight: 100;
}

.various-artists {
  color: rgba(23, 23, 23);
  text-align: start;
  font-size: 0.8em;
  font-weight: 100;
}

/* Music */

.project-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding-top: 12px;
}

.project-logo {
  width: 100%;
  max-width: 180px;
  margin-bottom: 1rem;
  transition: transform 0.2s ease, filter 0.2s ease;
  filter: drop-shadow(0 1px 3px rgba(0, 0, 0, 0.2));
}

.hover-effect:hover .project-logo {
  transform: scale(1.05);
  filter: drop-shadow(0 3px 6px rgba(0, 0, 0, 0.3));
}

.project-name,
.project-info {
  color: rgba(23, 23, 23);
  display: flex;
  align-items: center;
  justify-content: center;
}

.project-name {
  padding-top: 0.5rem;
  font-weight: 500;
}

.project-name:hover {
  -webkit-text-decoration: underline 1.5px;
          text-decoration: underline 1.5px;
  text-underline-offset: 3px;
}

.project-info {
  padding-bottom: 0.5rem;
}

.soundcloud-artist {
  color: rgba(23, 23, 23);
  line-break: anywhere;
  font-weight: 300;
}

/* Boid Simulation */

#boidCanvas {
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1;
}

#controls {
  position: fixed;
  bottom: 16px;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  padding: 10px 16px;
  border-radius: 32px;
  display: flex;
  align-items: center;
  transition: opacity 0.3s;
  z-index: 1000;
}

input[type=range] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  filter: brightness(0.9);
  transition: filter 0.2s;
  padding: 8px 0;
  margin-top: -8px;
  margin-bottom: -8px;
  cursor: pointer;
}

input[type=range]:hover {
  filter: brightness(1.1);
}

input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background: #2196F3;
  cursor: pointer;
  margin-top: -4.5px;
  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.4);
}

input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: 6px;
  cursor: pointer;
  background: linear-gradient(to right, #2196F3 0%, #2196F3 var(--value, 50%), #d3d3d3 var(--value, 50%), #d3d3d3 100%);
  border-radius: 6px;
}

input[type=range]::-moz-range-thumb {
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background: #2196F3;
  cursor: pointer;
  border: none;
  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.4);
}

input[type=range]::-moz-range-track {
  width: 100%;
  height: 6px;
  cursor: pointer;
  background: linear-gradient(to right, #2196F3 0%, #2196F3 var(--value, 50%), #d3d3d3 var(--value, 50%), #d3d3d3 100%);
  border-radius: 6px;
  border: none;
}

/* Hide the default checkbox */

input[type="checkbox"] {
  -moz-appearance: none;
       appearance: none;
  -webkit-appearance: none;
  width: 13px;
  height: 13px;
  border-radius: 4px;
  background: #d3d3d3;
  cursor: pointer;
  position: relative;
  filter: brightness(0.8);
  transition: filter 0.2s;
}

/* Hover effect */

input[type="checkbox"]:hover {
  filter: brightness(1.1);
}

/* Checked state */

input[type="checkbox"]:checked {
  background: #2196F3;
  filter: brightness(1);
}

/* Checked hover effect */

input[type="checkbox"]:checked:hover {
  filter: brightness(1.15);
}

/* Centered checkmark */

input[type="checkbox"]:checked::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  width: 5px;
  height: 8px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: translate(-50%, -60%) rotate(45deg);
}

/* Disabled state */

input[type="checkbox"]:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  filter: none;
}

#boidCanvas,
#controls {
  display: none;
}

/* Fonts */

/* Roboto */

/* roboto-200 - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Roboto';

  font-style: normal;

  font-weight: 200;

  src: url('../fonts/roboto-v48-latin-200.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* roboto-200italic - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Roboto';

  font-style: italic;

  font-weight: 200;

  src: url('../fonts/roboto-v48-latin-200italic.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* roboto-300 - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Roboto';

  font-style: normal;

  font-weight: 300;

  src: url('../fonts/roboto-v48-latin-300.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* roboto-300italic - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Roboto';

  font-style: italic;

  font-weight: 300;

  src: url('../fonts/roboto-v48-latin-300italic.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* roboto-500 - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Roboto';

  font-style: normal;

  font-weight: 500;

  src: url('../fonts/roboto-v48-latin-500.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* roboto-500italic - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Roboto';

  font-style: italic;

  font-weight: 500;

  src: url('../fonts/roboto-v48-latin-500italic.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* Inter */

/* inter-regular - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Inter';

  font-style: normal;

  font-weight: 400;

  src: url('../fonts/inter-v19-latin-regular.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-italic - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Inter';

  font-style: italic;

  font-weight: 400;

  src: url('../fonts/inter-v19-latin-italic.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-500 - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Inter';

  font-style: normal;

  font-weight: 500;

  src: url('../fonts/inter-v19-latin-500.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-500italic - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Inter';

  font-style: italic;

  font-weight: 500;

  src: url('../fonts/inter-v19-latin-500italic.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-600 - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Inter';

  font-style: normal;

  font-weight: 600;

  src: url('../fonts/inter-v19-latin-600.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-600italic - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Inter';

  font-style: italic;

  font-weight: 600;

  src: url('../fonts/inter-v19-latin-600italic.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-700 - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Inter';

  font-style: normal;

  font-weight: 700;

  src: url('../fonts/inter-v19-latin-700.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* inter-700italic - latin */

@font-face {
  font-display: swap;

  /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */

  font-family: 'Inter';

  font-style: italic;

  font-weight: 700;

  src: url('../fonts/inter-v19-latin-700italic.woff2') format('woff2');

  /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

.hover\:scale-110:hover {
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:bg-backgroundHovered:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(220 221 217 / var(--tw-bg-opacity, 1));
}

.hover\:text-backgroundHovered:hover {
  --tw-text-opacity: 1;
  color: rgb(220 221 217 / var(--tw-text-opacity, 1));
}

.hover\:text-neutral-300:hover {
  --tw-text-opacity: 1;
  color: rgb(212 212 212 / var(--tw-text-opacity, 1));
}

.hover\:text-primary:hover {
  --tw-text-opacity: 1;
  color: rgb(7 59 76 / var(--tw-text-opacity, 1));
}

.hover\:underline:hover {
  text-decoration-line: underline;
}

.hover\:opacity-90:hover {
  opacity: 0.9;
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.group.nav-active .group-\[\.nav-active\]\:block {
  display: block;
}

.group.nav-active .group-\[\.nav-active\]\:pb-4 {
  padding-bottom: 1rem;
}

@media (min-width: 642px) {
  .sm\:block {
    display: block;
  }

  .sm\:hidden {
    display: none;
  }

  .sm\:w-\[48px\] {
    width: 48px;
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:flex-col {
    flex-direction: column;
  }

  .group.nav-active .sm\:group-\[\.nav-active\]\:pb-0 {
    padding-bottom: 0px;
  }
}

@media (min-width: 768px) {
  .md\:mx-4 {
    margin-left: 1rem;
    margin-right: 1rem;
  }

  .md\:my-8 {
    margin-top: 2rem;
    margin-bottom: 2rem;
  }

  .md\:mb-8 {
    margin-bottom: 2rem;
  }

  .md\:mr-4 {
    margin-right: 1rem;
  }

  .md\:mt-0 {
    margin-top: 0px;
  }

  .md\:mt-8 {
    margin-top: 2rem;
  }

  .md\:block {
    display: block;
  }

  .md\:flex {
    display: flex;
  }

  .md\:hidden {
    display: none;
  }

  .md\:h-12 {
    height: 3rem;
  }

  .md\:w-1\/3 {
    width: 33.333333%;
  }

  .md\:w-2\/3 {
    width: 66.666667%;
  }

  .md\:w-\[80px\] {
    width: 80px;
  }

  .md\:min-w-36 {
    min-width: 9rem;
  }

  .md\:-translate-y-0 {
    --tw-translate-y: -0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:-translate-y-16 {
    --tw-translate-y: -4rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:flex-col {
    flex-direction: column;
  }

  .md\:items-start {
    align-items: flex-start;
  }

  .md\:rounded-bl-lg {
    border-bottom-left-radius: 0.5rem;
  }

  .md\:rounded-bl-none {
    border-bottom-left-radius: 0px;
  }

  .md\:bg-section {
    --tw-bg-opacity: 1;
    background-color: rgb(231 235 237 / var(--tw-bg-opacity, 1));
  }

  .md\:p-0 {
    padding: 0px;
  }

  .md\:p-3 {
    padding: 0.75rem;
  }

  .md\:px-12 {
    padding-left: 3rem;
    padding-right: 3rem;
  }

  .md\:px-3 {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }

  .md\:px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .md\:py-8 {
    padding-top: 2rem;
    padding-bottom: 2rem;
  }

  .md\:pb-12 {
    padding-bottom: 3rem;
  }

  .md\:pb-9 {
    padding-bottom: 2.25rem;
  }

  .md\:pt-12 {
    padding-top: 3rem;
  }

  .md\:pt-3 {
    padding-top: 0.75rem;
  }

  .md\:pt-6 {
    padding-top: 1.5rem;
  }

  .md\:pt-7 {
    padding-top: 1.75rem;
  }

  .md\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  .md\:text-5xl {
    font-size: 3rem;
    line-height: 1;
  }

  .md\:text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  .group.nav-active .md\:group-\[\.nav-active\]\:pb-9 {
    padding-bottom: 2.25rem;
  }
}

@media (min-width: 1024px) {
  .lg\:mb-8 {
    margin-bottom: 2rem;
  }

  .lg\:mt-8 {
    margin-top: 2rem;
  }

  .lg\:h-auto {
    height: auto;
  }

  .lg\:w-1\/3 {
    width: 33.333333%;
  }

  .lg\:w-2\/3 {
    width: 66.666667%;
  }

  .lg\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .lg\:flex-row {
    flex-direction: row;
  }

  .lg\:pb-0 {
    padding-bottom: 0px;
  }
}

@media (max-width: 767.98px) and (min-height: 620px) {
  .show-hamburger\:block {
    display: block;
  }
}

@media (min-height: 620px) {
  .group.nav-active .show-nav\:group-\[\.nav-active\]\:block {
    display: block;
  }
}

@media print {
  .print\:block {
    display: block;
  }

  .print\:hidden {
    display: none;
  }

  .print\:w-1\/3 {
    width: 33.333333%;
  }

  .print\:w-2\/3 {
    width: 66.666667%;
  }

  .print\:flex-row {
    flex-direction: row;
  }

  .print\:rounded-none {
    border-radius: 0px;
  }

  .print\:border-none {
    border-style: none;
  }

  .print\:bg-section {
    --tw-bg-opacity: 1;
    background-color: rgb(231 235 237 / var(--tw-bg-opacity, 1));
  }

  .print\:p-0 {
    padding: 0px;
  }

  .print\:pt-6 {
    padding-top: 1.5rem;
  }

  .print\:font-normal {
    font-weight: 400;
  }

  .print\:font-medium {
    font-weight: 500;
  }

  .print\:font-light {
    font-weight: 300;
  }

  .print\:text-body {
    --tw-text-opacity: 1;
    color: rgb(51 51 51 / var(--tw-text-opacity, 1));
  }
}

---
/Users/lachie/Documents/coding/website/assets/css/styles.css
---
/* Base styles */
html,
body {
    /* height: 100%; */
    margin: 0;
    padding: 0;
    /* font-size: 100%; */
    font-family: 'Roboto', sans-serif;
    background-color: rgb(243, 244, 241);
    z-index: 3;
    scrollbar-gutter: stable both-edges;
    color: rgba(23, 23, 23);
    transition: background-color 0.5s ease;
}

.boid-active {
    background-color: transparent !important;
}

/* Typography */
h1 {
    min-width: 303.44px;
}

.thin-underline:hover {
    text-decoration: underline 1px;
    text-underline-offset: 3px;
}

.subtle-underline:hover {
    text-decoration: underline 1.5px;
    text-underline-offset: 3px;
}

.link-underline {
    text-decoration: underline 1.5px;
    text-underline-offset: 3px;
    transition: text-underline-offset 0.2s ease;
}

.link-underline:hover {
    text-underline-offset: 6px;
}

.hover-effect:hover .link-underline {
    text-underline-offset: 6px;
}

/* Layout */
#container {
    /* height: 100%; */
    box-sizing: border-box;
    max-width: 1080px;
}

.visual-container,
.visual-container-bottom {
    border-top: 0.5px solid rgba(23, 23, 23, 0.5);
    margin-top: -0.5px;
    border-bottom: 0.5px solid rgba(23, 23, 23, 0.5);
    position: relative;
    z-index: 1;
}

.visual-container {
    border-top: 0.5px solid rgba(23, 23, 23, 0.5);
}

.visual-container-bottom {
    position: relative;
}

/* Navigation */
nav {
    min-width: 142px;
}

nav.nav-active {
    margin-bottom: 0px;
}

nav ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

nav ul li {
    padding: 0.75rem 0.75rem;
}

nav ul li a {
    display: inline-block;
    text-decoration: none;
    color: inherit;
    font-weight: 100;
    padding: 4px;
}

.nav-link-text {
    display: block;
    text-align: center;
    letter-spacing: 0.025em;
}

nav ul li a.selected .nav-link-text {
    font-weight: 500;
    /* text-indent: -1px; */
    letter-spacing: 0.01em;
}

nav ul li:first-child {
    line-height: 0;
    padding-inline: 0.75rem;
    padding-top: 0.75rem;
    padding-bottom: 0rem;
}

/* Hamburger menu */
#hamburger-menu {
    font-size: 36px;
    position: absolute;
    top: 32px;
    right: 8px;
    padding: 0.75rem 1rem;
    z-index: 1000;
    color: rgba(23, 23, 23);
}

/* Cursor */
.cursor-pointer {
    cursor: pointer;
}

/* Hover effects */
nav ul li a:hover,
#hamburger-menu:hover,
.subtle-underline:hover,
.link-underline:hover,
.hover-effect:hover,
.hover-effect:hover .project-name,
.close:hover,
.close:focus {
    color: rgba(23, 23, 23, 0.7);
}

/* Aspect ratio */
.aspect-ratio-1\/1 {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
}

.aspect-ratio-1\/1 iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 12px;
}

/* Modal */
.modal {
    display: none;
    position: fixed;
    z-index: 9999;
    padding-top: 100px;
    padding-bottom: 100px;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.6);
}

.modal-content {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
}

#caption {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
    text-align: center;
    color: rgba(23, 23, 23, 0.75);
    padding: 10px 0;
    height: 150px;
    font-style: italic;
}

.close {
    position: absolute;
    top: 10px;
    right: 35px;
    color: rgba(23, 23, 23);
    font-size: 30px;
    font-weight: 100;
    transition: color 0.2s;
    background: transparent;
    border: none;
}

/* Scrollbar */
html {
    scrollbar-width: thin;
    scrollbar-color: #a8acb1 #e9ebed;
}

::-webkit-scrollbar {
    width: 12px;
    background: #e9ebed;
}

::-webkit-scrollbar-track {
    background: #e9ebed;
}

::-webkit-scrollbar-thumb {
    background-color: #a8acb1;
    border-radius: 6px;
    border: 3px solid #e9ebed;
}

/* Software iframes */
.software-iframe {
    width: 100%;
    height: 800px;
}

/* Media queries */
@media (max-width: 641px) {
    nav ul li:not(:first-child) {
        display: none;
    }

    nav.nav-active ul li:not(:first-child) {
        display: block;
    }

    nav.nav-active ul li:first-child {
        padding-bottom: 16px !important;
    }

    nav ul {
        display: flex;
        flex-direction: column !important;
        justify-content: space-around;
        align-items: center;
        padding-inline: 0rem !important;
    }
}

@media (max-width: 767px) {
    #container {
        flex-direction: column;
    }

    .visual-container,
    .visual-container-bottom {
        padding: 0;
    }

    nav ul {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        padding-inline: 0.5rem;
        min-height: 60.75px;
    }

    nav ul li a {
        font-size: smaller;
    }

    nav ul li {
        padding: 0 0 !important;
    }
}

/* Easter Egg */
.easter-egg {
    position: fixed;
    bottom: -21px;
    /* Position it so that only the top half is visible initially */
    right: 25px;
    width: 45px;
    height: 40px;
    /* Full height of the image */
    background-image: url('../images/home.png');
    background-size: 45px 40px;
    background-position: center;
    z-index: 1;
    cursor: pointer;
}

---
/Users/lachie/Documents/coding/website/assets/images/icons.svg
---
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
  <symbol id="sliders" viewBox="0 0 512 512">
    <path d="M0 416c0 17.7 14.3 32 32 32l54.7 0c12.3 28.3 40.5 48 73.3 48s61-19.7 73.3-48L480 448c17.7 0 32-14.3 32-32s-14.3-32-32-32l-246.7 0c-12.3-28.3-40.5-48-73.3-48s-61 19.7-73.3 48L32 384c-17.7 0-32 14.3-32 32zm128 0a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zM320 256a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm32-80c-32.8 0-61 19.7-73.3 48L32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l246.7 0c12.3 28.3 40.5 48 73.3 48s61-19.7 73.3-48l54.7 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-54.7 0c-12.3-28.3-40.5-48-73.3-48zM192 128a32 32 0 1 1 0-64 32 32 0 1 1 0 64zm73.3-64C253 35.7 224.8 16 192 16s-61 19.7-73.3 48L32 64C14.3 64 0 78.3 0 96s14.3 32 32 32l86.7 0c12.3 28.3 40.5 48 73.3 48s61-19.7 73.3-48L480 128c17.7 0 32-14.3 32-32s-14.3-32-32-32L265.3 64z"/>
  </symbol>

<symbol id="dice-d20" viewBox="0 0 511.771 511.771">
    <g transform="translate(1 1)" fill="currentColor"><g><g>
      <path d="M506.771,100.257c0-4.289-2.415-7.773-5.734-8.942c-1.412-0.804-2.783-1.318-3.998-1.435L253.514-0.314 c-1.829-0.914-4.571-0.914-6.4,0L11.09,81.386c-1.733,0.019-3.385,0.451-4.433,1.499c-0.566,0.566-1.126,1.228-1.638,1.943 C3.765,86.354,3,88.275,3,90.2v310.857c0,3.657,1.829,7.314,5.486,8.229L246.2,509.857c0.914,0.914,2.743,0.914,3.657,0.914 c0.627,0,1.253-0.007,1.88-0.302c0.849-0.261,1.616-0.665,2.198-1.107l245.522-90.934c3.657-0.914,6.4-4.571,6.4-8.229V104.338 C506.437,103.194,506.771,101.838,506.771,100.257z M249.857,17.971l219.429,80.457l-219.429,73.143L38.657,90.2L249.857,17.971z M21.286,103.914l219.429,84.114v299.886L21.286,394.657V103.914z M259,487.914V188.943l228.571-76.19v290.133L259,487.914z"/>
      <path d="M450.086,154.2c-10.057,0-17.371,10.057-17.371,21.943c0,11.886,8.229,21.943,17.371,21.943 c10.057,0,17.371-10.057,17.371-21.943C467.457,164.257,459.229,154.2,450.086,154.2z"/>
      <path d="M378.771,263.914c-10.057,0-17.371,10.057-17.371,21.943c0,11.886,8.229,21.943,17.371,21.943 c10.057,0,17.371-10.057,17.371-21.943C396.143,273.971,388.829,263.914,378.771,263.914z"/>
      <path d="M312.943,384.6c-10.057,0-17.371,10.057-17.371,21.943c0,11.886,8.229,21.943,17.371,21.943 c10.057,0,17.371-10.057,17.371-21.943C330.314,394.657,322.086,384.6,312.943,384.6z"/>
      <path d="M189.514,199.914c-10.057,0-17.371,10.057-17.371,21.943c0,11.886,8.229,21.943,17.371,21.943 c10.057,0,17.371-10.057,17.371-21.943C206.886,209.971,199.571,200.829,189.514,199.914z"/>
      <path d="M57.857,145.971c-9.143,0-17.371,10.057-17.371,21.943c0,11.886,8.229,21.943,17.371,21.943 c10.057,0,17.371-10.057,17.371-21.943C75.229,155.114,67.914,145.971,57.857,145.971z"/>
      <path d="M186.771,391.914c-10.057,0-17.371,10.057-17.371,21.943s8.229,21.943,17.371,21.943 c10.057,0,17.371-10.057,17.371-21.943C204.143,401.971,196.829,391.914,186.771,391.914z"/>
      <path d="M57.857,338.886c-10.057,0-17.371,10.057-17.371,21.943c0,11.886,8.229,21.943,17.371,21.943 c9.143,0,16.457-10.057,16.457-21.943C74.314,348.943,67,338.886,57.857,338.886z"/>
      <path d="M271.8,93.857c0-10.057-10.057-17.371-21.943-17.371c-11.886,0-21.943,7.314-21.943,17.371 c0,10.057,10.057,17.371,21.943,17.371C261.743,111.229,271.8,103,271.8,93.857z"/>
    </g></g></g>
  </symbol>
</svg>



---
/Users/lachie/Documents/coding/website/assets/images/slypork-svg.svg
---
<?xml version="1.0" encoding="UTF-8"?><svg id="Layer_2" xmlns="http://www.w3.org/2000/svg" width="683" height="563" viewBox="0 0 683 563"><defs><style>.cls-1{fill:#161622;}.cls-1,.cls-2,.cls-3{stroke-width:0px;}.cls-2{fill:#fdfbf3;}.cls-3{fill:#c6b8af;}</style></defs><g id="Layer_1-2"><path class="cls-1" d="M0,140v-30c3.4-4-.6-10.5,2.9-14.6,3-3.6,8.9-2.4,12.9-2.5,12-.1,23.6.2,35.3-3.1,26.1-7.5,40.6-28.2,60-45.3,20.1-17.7,46.3-24,72.1-15.9,24.8,7.8,39.6,26.5,54.4,46.7,49.9-22.8,101.2-27.8,154.3-12,8-15.3,19.5-29.2,32.6-40.3,14.2-12.1,29.4-16.7,46.6-22.9h20c.7,2.4,18.9,5.4,22.7,7,9.4,4,17.5,9.6,25.1,16.3,16.1,14.1,30.9,29.9,49.2,41.1,16.7,10.2,35.5,16.5,54.9,18.9,8.4,1,25.9-2.4,33.4,1.4,7.8,4,3.8,15.1,6.6,22.3v22c-1.4.6-2,1.5-1.9,3.1.7,7.3-1.1,14.3-2.9,21.3-5.9,22.7-16.6,42.9-31.7,60.7-9.4,11.1-20,20.8-32.3,28.7-2.8,1.8-4.6,3.3-3.6,7.5,4.3,18.6,6.3,37.4,5.7,56.6-.6,21.2-3.2,41.8-9.1,62.3-11.6,40.5-32.2,75.8-60.8,106.5-17.4,18.7-36.9,34.7-58.9,47.9-33.5,20.1-69.4,32.9-108.3,37.7-4.5.6-9.2-.4-13.4,1.8h-54c-.4-1.3-1.5-1-2.4-1.2-26.5-3.4-52.1-9.9-76.9-19.7-31.1-12.4-59.6-29.1-84.5-51.5-15.9-14.2-29.5-30.4-41-48.4-11.3-17.7-20.8-36.4-27.1-56.4-8.6-27.5-12.6-55.7-11.3-84.7.7-15.8,1.9-31.4,5.5-46.8.7-3.2.2-4.8-2.6-6.3-15.6-8.6-28.8-20.2-39.5-34.3-13.4-17.6-23.9-36.7-28.5-58.7-1-5-.7-10.4-3.6-15ZM199,69.9s.1,0,.1,0c-.4-.4-.7-.7-1.1-1.1h0c-.4-.3-.7-.6-1.1-1h.2c-9.8-11.1-24.6-17.6-39.4-16.7-18.3,1.1-30.6,13.2-42.6,25.7-12.6,13.2-26.2,25.1-43,32.7-7.9,3.6-16.3,6.1-24.9,7.5-4.7.7-18.5-1.4-21.9,1.7-3.9,37.2,19.3,77,38,89.8,0-12.8-2.3-21.3,11.5-25.5,11.1-3.4,26-.8,36.1-5.3,6,0,18.5,2.7,23.9.2,5.3-2.5,4.8-11.3,5.8-16.9,2.7-15.1,5.2-30,7-45.2,1.3-11,2.5-30.1,15.5-34.1,14.6-4.6,23,12.9,29.4,22.6,4.1-3.3,17.3-10.6,19-15.6,2-5.7-7.4-14.6-11.4-17.8-.4-.4-.8-.7-1.1-1.1ZM189,490.1h-.2c.4.3.8.6,1.2.9,17.2,16.2,46.1,26.5,68.2,33.6,23.3,7.5,47.9,12.2,72.4,13.3,84.7,3.8,165.5-34.5,216.2-102.3,25.6-34.3,41-74.7,44.5-117.4.9-11.3,1-22.6-.2-33.9-.8-7.9-.2-19.7-6.7-25.4-7.8-6.7-23-10-32.2-15.1-7-4-15.8-12.6-24.2-12.6-12.7-6.4-52.2-23-61.7-4.4-4.5,8.6-1.7,21.5-3.3,31.1-2,12.3-7.6,23.1-12.9,34.2-4.5,2.8-7.7,9.6-11.5,13.4-4.2,4.1-8.9,7.7-13.9,10.7-9.9,6-21.3,10.1-32.8,12.1-30.8,5.3-58.6-1.7-83.8-19.3-10.3-11.2-18.7-23.1-23.2-37.8-3.4-10.9-1.7-26.6-9.9-35.4-7.7-8.3-23.5-9.4-32.6-2.8-11.4,8.2-9.3,24.6-15.6,36.1,13.9-3.3,26.5-1.4,38.3,6-9.6.4-18.8,2.5-28.9,4.8,18.6,12.3,33.5,23.9,44.5,43.8,11.5,20.7,13.4,42.4,8.4,65.4-3.1,6.2-5.1,13-10,18.9,23,1.4,45.8-11.1,58.6-30,4.1-3.5-10.4-18.1,5.1-19.1,9.8-.6,20.7,15.1,25.4,22.4,4.7,7.3,14.7,23,4.9,30.5-12.3,9.4-16.8-11-21.8-17.2-16,20.6-36.5,31.9-62.2,36-14.2,2.3-28.9,2.4-43.2,3.7-7.1.7-14.3,1.3-21.5.7-5-.4-11.7-3-16.5-.6.3-.2,1.3.3.9-.8-.3.3-.6.5-.8.8,2.6,1.9,5.2,3.9,7.8,5.8,10.8,10.4,24.4,15.8,39,21-18,7.4-38.5,3.9-55.5-4.9-9.1-4.7-15.6-11.2-23.3-17.7-7.6-6.5-17.5-9.3-27-13.5-32.3-26-36.2-55.3-25.1-93.9,1.9-1.8,2.6-4.3,3.8-6.8-12.4-4.8-23.2-12-32.8-20.8-2.4,3.4-.5,6.6-.7,9.7-1.7,72.2,36.7,134.7,93.6,176.2v-.3c0,.8.6,1,1.2,1ZM492,183c.2.2.3.4.5.6,0-.2,0-.4,0-.6-.2,0-.4,0-.6,0,1.7-3.1-8.3-18.1-9.9-21.3-3.4-7-6.1-17.2-11.7-22.8-10.8-10.9-31.2-18.5-46.2-15.1,2.4-31.7,27.7-76.8,65-71.4-13.8,57,16.8,132.5,66.8,163.7,6.4,5.5,14.6,10.5,22.4,13.8,8.1,3.4,11.3-.5,18.5-5.4,13.9-9.4,26.5-20.5,36.7-33.9,10-13.2,17.7-28.5,21.4-44.7,1.9-8.2,2.8-16.8,3.4-25.1.7-10.2-1.8-9.9-11.4-9.6-25.2-5.4-49.1-11.6-71.4-25-22.1-13.2-38.2-32.9-58.7-48-20.7-15.3-44.9-15.8-66.7-2.3-20.6,12.8-29.2,31.5-42.6,50.3-5.8,8.2-8.4,5.4-18,2.5-13.1-4-26.5-6.8-40.1-8.1-26.5-2.6-53.4.2-78.7,8.7-23,7.7-44.6,19.4-63,35.3-8.8,7.6-16.9,16.1-24.2,25.1-6,7.4-17.4,19-18.5,28.8,24.9,4.7,49.7,8.9,67.8,28.5,16.3-8,32-7.7,47.7.6,20.4-24.1,58.7-30.5,88.3-33.1,34.5-3,67.9-.3,102.1,3.5,7,1.7,14,3.3,21,5ZM269.8,368.5c0-31.7-28.3-69.6-60.4-75-31.9-5.4-60.2,29.1-67.7,56.8-4.4,16.1-2.8,33.2,8,46.5,13,16.1,27.9,14.8,46,10.6,18.3-4.2,34.3,9.3,52.5-1.4,12.9-7.5,21-22.8,21.6-37.5ZM313.7,249.4c0,7.1,4.6,17.3,13.2,12.5,6.2-3.5,5.1-14.6,6.9-20.4,2.6-8.5,7.6-15.8,14.6-21.3,5.4-4.3,14.4-5.7,18.9-10.3,5.9-6,1.1-12.5-6.2-13.3-7.9-.9-18.8,6.3-25,10.8-13.7,10.1-21.1,25.3-22.4,42.2ZM102,243.4c0,6.3,3.5,11.2,8.3,11.6,4.9.4,8.9-2.8,9.6-8.6,2-17.5,12-27.5,28.7-31.5,4.3-1,6.8-3.8,6.5-8.6-.4-4.5-3.2-6.7-7.3-7.4-1.6-.3-3.4-.4-5-.2-22.2,3.9-38.8,22.1-40.8,44.6ZM459.4,197c-10.1,0-12.9,7.5-1.9,8.9,12.4,1.6,15.7-8.9,1.9-8.9ZM81.4,197c-10.2,0-10.2,7.2-1,8.9,10.8,2,13-8.3,1-8.9Z"/><path class="cls-2" d="M556,216.1c-50-31.3-80.7-106.7-66.8-163.7-37.3-5.4-62.6,39.8-65,71.4-1.3,4.3,19.4,19,22.8,22.6,9.2,9.6,17.3,20.2,24.1,31.6-34.2-3.8-67.7-6.5-102.1-3.5-29.6,2.6-67.9,9-88.3,33.1-15.7-8.2-31.4-8.6-47.7-.6-18.1-19.5-42.9-23.8-67.8-28.5,1.1-9.8,12.5-21.4,18.5-28.8,7.3-9.1,15.4-17.5,24.2-25.1,18.4-15.9,40-27.6,63-35.3,25.3-8.5,52.2-11.3,78.7-8.7,13.6,1.3,27,4.1,40.1,8.1,9.6,2.9,12.1,5.6,18-2.5,13.4-18.9,22-37.5,42.6-50.3,21.8-13.5,45.9-13,66.7,2.3,20.5,15.1,36.7,34.8,58.7,48,22.3,13.4,46.2,19.7,71.4,25-.5,18-22.7,39-35.7,49.3-8,6.4-17,11.5-26.6,15.1-9.9,3.7-20.1,3.4-30.1,6,9.1,9.2,19.3,16.3,30.9,22.2-9.2,7.7-19.4,7.5-29.5,12.4Z"/><path class="cls-2" d="M450.1,292c5.3-11.1,10.8-21.9,12.9-34.2,1.6-9.5-1.2-22.4,3.3-31.1,9.6-18.6,49-1.9,61.7,4.4,13.2,41.9,18.4,80.7,2.4,123-13.5,35.6-39.5,65.6-70.9,86.9-35.3,24-76.9,34.6-119.3,32.9-21.1-.8-42.5-5.6-61.4-15.3-5.3-2.7-10.5-7.5-16.1-9.2-4.4-1.4-9.4-.6-13.9-1-5-.4-10-1.2-14.8-2.5-5.7-1.6-12.1-6.4-18.1-5.9-2.6-1.9-5.2-3.9-7.8-5.8h0c4.8-2.4,11.5.2,16.5.6,7.2.5,14.3,0,21.5-.7,14.3-1.3,29-1.4,43.2-3.7,25.7-4.1,46.1-15.4,62.2-36,5,6.2,9.5,26.6,21.8,17.2,9.8-7.5-.2-23.2-4.9-30.5-4.7-7.3-15.6-23-25.4-22.4-15.5,1-1,15.6-5.1,19.1-4,.4-6.7,3.4-10.1,5.1-12.2,6.2-25,8.4-38.5,6,5-22.9,3-44.7-8.4-65.4-11-19.9-26-31.5-44.5-43.8,10.1-2.3,19.3-4.4,28.9-4.8-11.8-7.4-24.4-9.2-38.3-6,6.3-11.4,4.2-27.9,15.6-36.1,9.1-6.6,24.9-5.4,32.6,2.8,8.2,8.8,6.5,24.5,9.9,35.4,4.6,14.7,13,26.6,23.2,37.8-2.6,7.9,25.5,23.4,31,26,15.1,7.2,31.7,9.5,48.3,7.9,14-1.3,27.8-5.1,39.3-13.5,10-7.3,25.3-23.8,23.4-37.3Z"/><path class="cls-3" d="M215.9,440.1c6.1-.5,12.5,4.3,18.1,5.9,4.8,1.4,9.8,2.1,14.8,2.5,4.5.4,9.6-.4,13.9,1,5.6,1.8,10.8,6.5,16.1,9.2,18.9,9.7,40.2,14.5,61.4,15.3,42.4,1.6,84-8.9,119.3-32.9,31.3-21.3,57.4-51.3,70.9-86.9,16-42.3,10.8-81.1-2.4-123,8.4,0,17.2,8.7,24.2,12.6,9.2,5.2,24.4,8.4,32.2,15.1,6.5,5.7,5.9,17.5,6.7,25.4,1.2,11.3,1.1,22.6.2,33.9-3.4,42.7-18.8,83.1-44.5,117.4-50.7,67.8-131.4,106.2-216.2,102.3-24.5-1.1-49.1-5.8-72.4-13.3-22.1-7.1-51-17.5-68.2-33.6.6-1.6-.6-.9-1.2-.9,0,0,.2,0,.2,0,0-.6-.4-1-1.1-1.1,0,0,0,.3,0,.2-2.2-9.7-16.4-20.4-22-28.8-5-7.5-19.2-25.9-16.7-35.6,9.6,4.2,19.4,7.1,27,13.5,7.7,6.5,14.2,13,23.3,17.7,17,8.9,37.5,12.3,55.5,4.9-14.6-5.3-28.2-10.7-39-21Z"/><path class="cls-2" d="M269.8,368.5c-.6,14.8-8.7,30-21.6,37.5-18.2,10.7-34.2-2.8-52.5,1.4-18.1,4.1-32.9,5.5-46-10.6-10.8-13.4-12.3-30.4-8-46.5,7.5-27.7,35.8-62.1,67.7-56.8,32.1,5.4,60.5,43.3,60.4,75ZM216.5,337.4c0,10.4,2,24.6,7.5,33.8,6.1,10.2,21.2,10.7,25.4-1.8,3.6-10.6-8.9-27.4-15.1-35.5-6.8-8.8-16.8-9.4-17.9,3.5ZM189.1,339.7c0-14.5-9.6-15.7-17.5-4.7-5.7,7.9-15.6,22.4-13.8,32.6,1.7,9.7,13.3,15.4,21,8.4,8.1-7.3,9.9-26,10.3-36.2Z"/><path class="cls-2" d="M110.9,177.7c-10.1,4.6-24.9,1.9-36.1,5.3-13.8,4.3-11.5,12.7-11.5,25.5-18.7-12.8-42-52.6-38-89.8,3.4-3.1,17.2-1,21.9-1.7,8.6-1.3,17-3.9,24.9-7.5,16.8-7.6,30.4-19.5,43-32.7,12-12.5,24.3-24.6,42.6-25.7,14.9-.9,29.7,5.6,39.4,16.7-2.5.8-4-1.1-5.9-2-12.8-5.9-25.6-7.7-38.7-.7-11.5,6.2-17,16.7-20.7,28.6-3.5,11.5-4.3,23.4-6.4,35.1-3,16.9-8.2,33.1-14.7,48.9Z"/><path class="cls-3" d="M556,216.1c10.1-4.9,20.3-4.7,29.5-12.4-11.7-5.9-21.8-13-30.9-22.2,10-2.6,20.2-2.3,30.1-6,9.6-3.6,18.6-8.7,26.6-15.1,13-10.3,35.1-31.3,35.7-49.3,9.6-.3,12.1-.6,11.4,9.6-.6,8.4-1.5,17-3.4,25.1-3.7,16.1-11.4,31.5-21.4,44.7-10.2,13.4-22.8,24.5-36.7,33.9-7.3,4.9-10.5,8.8-18.5,5.4-7.8-3.3-16-8.3-22.4-13.8Z"/><path class="cls-3" d="M110.9,177.7c6.5-15.8,11.7-32,14.7-48.9,2.1-11.7,2.9-23.6,6.4-35.1,3.6-11.9,9.1-22.4,20.7-28.6,13-6.9,25.9-5.2,38.7.7,1.9.9,3.4,2.8,5.9,2,0,0-.2,0-.2,0,0,.8.3,1.1,1.1,1.1,0,0,0,0,0,0,0,.7.4,1,1.1,1.1,0,0-.1,0-.1,0,.4.4.8.7,1.1,1.1,4,3.2,13.3,12.1,11.4,17.8-1.7,5-14.9,12.3-19,15.6-6.4-9.7-14.7-27.2-29.4-22.6-13.1,4.1-14.3,23.1-15.5,34.1-1.8,15.2-4.3,30.1-7,45.2-1,5.6-.5,14.4-5.8,16.9-5.4,2.5-17.9-.2-23.9-.2Z"/><path class="cls-2" d="M149,424.9c-2.4,9.7,11.7,28.1,16.7,35.6,5.6,8.4,19.8,19,22,28.8-56.9-41.6-95.3-104.1-93.6-176.2,1.3,0,2,.9,2.8,1.7,7.3,8.2,16.5,13.2,27,16.2-11.1,38.7-7.2,67.9,25.1,93.9Z"/><path class="cls-3" d="M450.1,292c1.8,13.5-13.5,30-23.4,37.3-11.5,8.4-25.3,12.2-39.3,13.5-16.6,1.5-33.1-.7-48.3-7.9-5.5-2.6-33.6-18-31-26,25.2,17.5,53,24.6,83.8,19.3,11.5-2,22.8-6,32.8-12.1,5-3,9.7-6.6,13.9-10.7,3.9-3.8,7.1-10.5,11.5-13.4Z"/><path class="cls-2" d="M313.7,249.4c1.3-16.8,8.7-32,22.4-42.2,6.1-4.5,17.1-11.7,25-10.8,7.3.8,12.1,7.3,6.2,13.3-4.6,4.6-13.6,6.1-18.9,10.3-7,5.5-11.9,12.9-14.6,21.3-1.8,5.8-.7,17-6.9,20.4-8.6,4.8-13.2-5.4-13.2-12.5Z"/><path class="cls-3" d="M471,178c-6.8-11.4-14.9-22-24.1-31.6-3.4-3.5-24.1-18.3-22.8-22.6,15.1-3.4,35.4,4.2,46.2,15.1,5.5,5.6,8.2,15.8,11.7,22.8,1.6,3.2,11.7,18.2,9.9,21.3h0c-7-1.8-14-3.4-21-5.1Z"/><path class="cls-2" d="M102,243.4c2-22.5,18.6-40.7,40.8-44.6,1.6-.3,3.3-.1,5,.2,4.1.7,6.9,2.9,7.3,7.4.4,4.8-2.1,7.5-6.5,8.6-16.7,4-26.7,14-28.7,31.5-.7,5.8-4.6,9-9.6,8.6-4.9-.4-8.4-5.3-8.3-11.6Z"/><path class="cls-3" d="M289.1,388.9c13.5,2.5,26.3.3,38.5-6,3.4-1.7,6.1-4.7,10.1-5.1-12.7,18.9-35.5,31.4-58.6,30,4.9-5.9,6.9-12.7,10-18.9Z"/><path class="cls-3" d="M123.9,331c-10.5-2.9-19.7-7.9-27-16.2-.8-.9-1.5-1.8-2.8-1.7.3-3.1-1.7-6.3.7-9.7,9.7,8.8,20.4,16,32.8,20.8-1.2,2.5-1.9,5-3.8,6.8Z"/><path class="cls-2" d="M459.4,197c13.8,0,10.5,10.6-1.9,8.9-11-1.4-8.2-8.9,1.9-8.9Z"/><path class="cls-2" d="M81.4,197c12,.7,9.8,10.9-1,8.9-9.1-1.7-9.2-8.9,1-8.9Z"/><path class="cls-2" d="M188.8,490.1c.6,0,1.8-.6,1.2.9-.4-.3-.8-.6-1.2-.9Z"/><path class="cls-2" d="M198.1,69c-.8,0-1.1-.3-1.1-1.1.4.4.7.7,1.1,1.1Z"/><path class="cls-2" d="M199.1,70c-.7,0-1.1-.4-1.1-1.1.4.4.7.7,1.1,1.1Z"/><path class="cls-2" d="M200.1,71c-.4-.4-.8-.7-1.1-1.1.4.4.8.7,1.1,1.1Z"/><path class="cls-3" d="M491.9,183.1c.2,0,.4,0,.6,0,0,.2,0,.4,0,.6-.2-.2-.3-.4-.5-.6,0,0,0,.1,0,.1Z"/><path class="cls-2" d="M208.1,434.3c.3-.3.6-.5.8-.8.5,1.1-.5.6-.9.8,0,0,0,0,0,0Z"/><path class="cls-2" d="M187.9,489.1c.7,0,1,.4,1.1,1.1-.6,0-1.1-.3-1.1-1.1Z"/><path class="cls-1" d="M216.5,337.4c1.1-12.8,11.1-12.3,17.9-3.5,6.2,8.1,18.7,24.9,15.1,35.5-4.2,12.4-19.3,12-25.4,1.8-5.5-9.1-7.4-23.3-7.5-33.8Z"/><path class="cls-1" d="M189.1,339.7c-.4,10.2-2.2,28.9-10.3,36.2-7.7,7-19.3,1.4-21-8.4-1.8-10.2,8.2-24.7,13.8-32.6,7.9-11,17.5-9.7,17.5,4.7Z"/></g></svg>

---
/Users/lachie/Documents/coding/website/assets/js/boid-menu.js
---
// boid-menu.js

// This module is responsible for the Experimental Menu UI.
// It receives initial state and dispatches events when the user interacts.
// It does NOT modify the main application state directly.

import { MAX_FLOCK_SIZE_HARD_CAP } from './boid-simulator.js';

// --- Private variables ---
let menuContainer; // Keep a reference to the main menu element
const inputElements = {}; // To easily update sliders from text inputs and vice-versa

// --- Private Functions ---

function dispatch(eventName, detail) {
    const event = new CustomEvent(eventName, {
        detail: detail,
        bubbles: true,
        composed: true
    });
    (menuContainer || document.body).dispatchEvent(event);
}

/**
 * Creates a DOM element with specified Tailwind classes and properties.
 * @param {string} tag - The HTML tag for the element.
 * @param {string} classList - A string of Tailwind CSS classes.
 * @param {Object} [properties={}] - Other properties to assign to the element.
 * @returns {HTMLElement} The created element.
 */
function createElement(tag, classList, properties = {}) {
    const element = document.createElement(tag);
    element.className = classList.trim().split(/\s+/).filter(Boolean).join(' ');
    Object.assign(element, properties);
    return element;
}

// --- Public (Exported) Functions ---

/**
 * Sets the visibility of the menu, with an option to skip the animation.
 * @param {boolean} isVisible - Whether the menu should be visible.
 * @param {object} [options={}] - An options object.
 * @param {boolean} [options.animated=true] - If false, the change happens instantly.
 */
export function setMenuVisibility(isVisible, options = {}) {
    const { animated = true } = options; // Default to an animated transition

    if (!menuContainer) return;

    // Centralize all relevant class lists for easy management
    const openClasses = ['opacity-100', 'translate-y-0', 'scale-100', 'pointer-events-auto'];
    const closedClasses = ['opacity-0', 'translate-y-5', 'scale-95', 'pointer-events-none'];
    const transitionClasses = ['transition', 'ease-out', 'duration-300'];

    // --- HIDING LOGIC ---
    if (!isVisible) {
        menuContainer.setAttribute('inert', 'true');
        menuContainer.classList.remove(...openClasses);

        if (animated) {
            // Standard behavior: just add the classes and let the transition run.
            menuContainer.classList.add(...closedClasses);
        } else {
            // INSTANT behavior for page loads/bfcache restores:
            // 1. Temporarily remove transition classes to make the next change instant.
            menuContainer.classList.remove(...transitionClasses);

            // 2. Apply the final 'closed' state classes. This happens immediately.
            menuContainer.classList.add(...closedClasses);

            // 3. IMPORTANT: Use a minimal timeout to re-apply the transition classes
            //    *after* the browser has rendered the instant change. This ensures
            //    that the *next* time the menu is opened, it will animate correctly.
            setTimeout(() => {
                menuContainer.classList.add(...transitionClasses);
            }, 10); // A tiny delay is all that's needed.
        }
        return; // We're done hiding.
    }

    // --- SHOWING LOGIC (can remain the same) ---
    menuContainer.removeAttribute('inert');
    menuContainer.classList.remove(...closedClasses);
    menuContainer.classList.add(...openClasses);
}

/**
 * Fetches an SVG sprite sheet and injects its symbols into the document.
 * This is the most performant method for using multiple icons from a
 * single file, as it requires only ONE HTTP request.
 * It runs only once.
 * @param {string} url - The path to the SVG sprite sheet file.
 */
async function loadSvgIcons(url) {
    const ICON_SPRITE_ID = 'boid-ui-icons';
    if (document.getElementById(ICON_SPRITE_ID)) return;

    try {
        const response = await fetch(url);
        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);

        const svgText = await response.text();
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = svgText;
        const svgElement = tempDiv.querySelector('svg');

        if (svgElement) {
            svgElement.setAttribute('id', ICON_SPRITE_ID);
            svgElement.style.display = 'none';
            svgElement.setAttribute('aria-hidden', 'true');
            document.body.prepend(svgElement);
        }
    } catch (error) {
        console.error(`Could not load SVG icons from ${url}:`, error);
    }
}

export async function initializeMenu(initialParams, initialDebugFlags) {
    if (document.getElementById('experimentalMenu')) return;

    await loadSvgIcons('/assets/images/icons.svg');

    // --- Refactored configuration to include Debug toggles ---
    const categorizedParamConfigs = {
        General: {
            FLOCK_SIZE: { label: 'Flock Size', type: 'range', min: 1, max: MAX_FLOCK_SIZE_HARD_CAP, step: 1, precision: 0 }
        },
        Force: {
            ALIGNMENT_FORCE: { label: 'Alignment', type: 'range', min: 0, max: 2, step: 0.1, precision: 1 },
            COHESION_FORCE: { label: 'Cohesion', type: 'range', min: 0, max: 3, step: 0.1, precision: 1 },
            SEPARATION_FORCE: { label: 'Separation', type: 'range', min: 0, max: 2, step: 0.1, precision: 1 },
            OBSTACLE_FORCE: { label: 'Obstacle', type: 'range', min: 0, max: 3, step: 0.1, precision: 1 },
        },
        Radius: {
            ALIGNMENT_RADIUS: { label: 'Alignment', type: 'range', min: 10, max: 500, step: 5 },
            COHESION_RADIUS: { label: 'Cohesion', type: 'range', min: 10, max: 750, step: 10 },
            SEPARATION_RADIUS: { label: 'Separation', type: 'range', min: 10, max: 500, step: 5 },
            OBSTACLE_RADIUS: { label: 'Obstacle', type: 'range', min: 10, max: 500, step: 5 },
        },
        Inertia: {
            VELOCITY_INERTIA: { label: 'Velocity', type: 'range', min: 0, max: 2, step: 0.01, precision: 2 },
            ROTATION_INERTIA: { label: 'Rotation', type: 'range', min: 0, max: 1.5, step: 0.01, precision: 2 },
        },
        Debug: {
            grid: { label: 'Grid', type: 'checkbox', checked: initialDebugFlags.grid },
            obstacles: { label: 'Obstacles', type: 'checkbox', checked: initialDebugFlags.obstacles },
            lines: { label: 'Lines', type: 'checkbox', checked: initialDebugFlags.lines }
        }
    };

    // --- Main container setup ---
    menuContainer = createElement('div', `
        fixed bottom-4 left-4 z-[1000] min-w-[276px]
        flex-col bg-black/60 text-white backdrop-blur-sm
        rounded-[32px] font-sans text-xs overflow-hidden
        max-h-[calc(100vh-32px)]
        transition ease-out duration-300
        opacity-0 translate-y-5 scale-95 pointer-events-none
        hidden md:flex
    `, {
        id: 'experimentalMenu',
        inert: 'true',
    });

    const scrollableContent = createElement('div', 'flex-grow overflow-y-auto scrollable-content py-4 px-3 min-h-0', {});
    Object.assign(scrollableContent.style, { scrollbarGutter: 'stable both-edges' });

    const titleContainer = createElement('div', 'relative w-full mb-3');
    const title = createElement('h2', 'm-0 text-center text-white text-lg font-medium', { textContent: 'God Mode' });

    // --- Create and add the dice button for randomization ---
    const randomizeButton = createElement('button', `
        absolute left-[-4px] top-1/2 -translate-y-1/2
        bg-transparent border-none text-white
        cursor-pointer p-2 leading-none
        hover:text-neutral-300 transition-colors
    `, {
        innerHTML: '<svg class="w-5 h-5"><use href="#dice-d20"></use></svg>'
    });

    const icon = randomizeButton.querySelector('svg');

    icon.addEventListener('animationend', () => {
        icon.classList.remove('dice-is-spinning');
    });

    randomizeButton.addEventListener('click', () => {
        // By removing the class and then adding it back within a minimal timeout,
        // we ensure the browser processes the removal before the addition,
        // which reliably restarts the animation from the beginning.
        icon.classList.remove('dice-is-spinning');
        setTimeout(() => {
            icon.classList.add('dice-is-spinning');
        }, 0); // A 0ms timeout is sufficient to queue this for the next paint cycle.

        let newParams;
        let isSizeLarge, isAnyRadiusLarge;

        // Keep generating random parameters until the constraint is met.
        // The constraint: FLOCK_SIZE and any RADIUS cannot both be large (> 400).
        do {
            newParams = {};
            // First, generate a full set of random parameters
            for (const categoryName in categorizedParamConfigs) {
                const paramsInCategory = categorizedParamConfigs[categoryName];
                for (const key in paramsInCategory) {
                    const config = paramsInCategory[key];
                    if (config.type === 'range') {
                        const min = parseFloat(config.min);
                        const max = parseFloat(config.max);
                        const step = parseFloat(config.step) || 1;
                        const precision = config.precision !== undefined ? config.precision : 2;

                        const numSteps = Math.floor((max - min) / step);
                        const randomStepIndex = Math.floor(Math.random() * (numSteps + 1));
                        let newValue = min + randomStepIndex * step;
                        newValue = Math.min(max, newValue); // Clamp to max for safety
                        const finalValue = parseFloat(newValue.toFixed(precision));

                        newParams[key] = finalValue;
                    }
                }
            }

            // Now, check if the generated set violates the constraint
            isSizeLarge = newParams.FLOCK_SIZE > 400;
            isAnyRadiusLarge =
                newParams.ALIGNMENT_RADIUS > 400 ||
                newParams.COHESION_RADIUS > 400 ||
                newParams.SEPARATION_RADIUS > 400 ||
                newParams.OBSTACLE_RADIUS > 400;

        } while (isSizeLarge && isAnyRadiusLarge); // Loop if both conditions are true

        // Once a valid set is found, dispatch all changes and update the UI
        for (const key in newParams) {
            dispatch('paramChanged', { key: key, value: newParams[key] });
        }
        updateMenuValues(newParams);
    });

    const closeButton = createElement('button', `
        absolute right-[-4px] top-1/2 -translate-y-1/2
        bg-transparent border-none text-2xl text-white
        cursor-pointer p-2 leading-none
        hover:text-neutral-300 transition-colors
    `, { innerHTML: '×' });
    titleContainer.append(randomizeButton, title, closeButton);

    // --- Stylesheet for menu controls and collapsible categories ---
    const styleSheet = document.createElement("style");
    styleSheet.innerText = `
            /* Basic Controls */
            #experimentalMenu .control-row {
                padding: 0 4px; display: flex; justify-content: space-between; align-items: center; margin-bottom: 12px;
            }
            #experimentalMenu .control-row label {
                color: #f3f4f1; min-width: 65px; flex-shrink: 0; font-size: 12px;
            }
            #experimentalMenu .control-row input[type="range"] {
                flex-grow: 1; max-width: 100px;
            }
            #experimentalMenu .value-input {
                width: 32px; text-align: center; color: #f3f4f1;
                background: transparent; border: 1px solid rgba(255, 255, 255, 0.2);
                border-radius: 32px; font-size: 11px;
                font-family: Arial, sans-serif;
            }
            #experimentalMenu .value-input:hover {
                border-color: rgba(255, 255, 255, 0.5);
            }
            #experimentalMenu .value-input:focus {
                outline: none; border-color: #2196F3;
            }

            /* Dice Button Animation */
            @keyframes dice-bounce-and-roll {
                0% {
                    transform: translateY(0) rotate(0deg);
                    animation-timing-function: cubic-bezier(0.25, 0.75, 0.5, 1);
                }
                40% {
                    /* Peak of the throw, reduced height */
                    transform: translateY(-15px) rotate(270deg);
                    animation-timing-function: cubic-bezier(0.5, 0, 0.75, 0.25);
                }
                60% {
                    /* First bounce impact */
                    transform: translateY(0px) rotate(330deg);
                    animation-timing-function: cubic-bezier(0.25, 0.75, 0.5, 1);
                }
                80% {
                    /* Second, smaller bounce, reduced height */
                    transform: translateY(-5px) rotate(350deg);
                    animation-timing-function: cubic-bezier(0.5, 0, 0.75, 0.25);
                }
                100% {
                    /* Settle */
                    transform: translateY(0) rotate(360deg);
                }
            }

            .dice-is-spinning {
                transform-origin: center;
                animation: dice-bounce-and-roll 0.5s ease-out;
            }


            /* Collapsible Category Styles */
            #experimentalMenu .category-header {
                display: flex; justify-content: space-between; align-items: center; cursor: pointer;
                padding: 8px 0; user-select: none; transition: background-color 0.2s; border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            }
            #experimentalMenu .category-header:hover { background-color: rgba(255,255,255,0.1); }
            #experimentalMenu .category-header h4 {
                margin-left: 4px; font-size: 14px; color: #f3f4f1;
            }
            #experimentalMenu .category-arrow {
                width: 8px; 
                height: 8px; 
                border-left: 2px solid #f3f4f1; 
                border-bottom: 2px solid #f3f4f1;
                transform: translateY(-2px) rotate(-45deg); 
                transition: transform 0.3s ease-out; 
                margin-right: 6px;
                transform-origin: center;
                position: relative;
            }
            #experimentalMenu .category-header.is-open .category-arrow {
                transform: translateY(2px) rotate(135deg);
            }
            #experimentalMenu .category-content-wrapper {
                display: grid; 
                grid-template-rows: 0fr; /* Collapsed by default */
                padding-top: 0; /* Initial state - no padding */
                transition: grid-template-rows 0.35s ease-in-out, padding-top 0.35s ease-in-out;
            }

            #experimentalMenu .category-content-wrapper.is-open {
                grid-template-rows: 1fr; 
                padding-top: 8px; /* Expanded state */
            }
            #experimentalMenu .category-content {
                overflow: hidden; 
            }
            /* Only remove bottom margin from the last control in the Debug category */
            #experimentalMenu .category-debug .control-row:last-child {
                margin-bottom: 0;
            }

            /* Scrollbar */
            #experimentalMenu .scrollable-content {
                scrollbar-color: #f3f4f1 rgba(255, 255, 255, 0.2);
                scrollbar-width: thin;
            }
    `;

    menuContainer.addEventListener('mouseenter', () => dispatch('menuInteraction', { hovering: true }));
    menuContainer.addEventListener('mouseleave', () => dispatch('menuInteraction', { hovering: false }));
    closeButton.addEventListener('click', () => dispatch('godModeToggled', { enabled: false }));
    scrollableContent.appendChild(titleContainer);

    document.head.appendChild(styleSheet);

    // --- Create and append all parameter controls in collapsible categories ---
    for (const categoryName in categorizedParamConfigs) {
        const isOpen = true;
        const categoryContainer = createElement('div', 'category-container');
        const categoryHeader = createElement('div', `category-header ${isOpen ? 'is-open' : ''}`);
        const categoryTitle = createElement('h4', '', { textContent: categoryName });
        const categoryArrow = createElement('div', 'category-arrow');
        categoryHeader.append(categoryTitle, categoryArrow);

        const contentWrapper = createElement('div', `category-content-wrapper ${isOpen ? 'is-open' : ''}`);
        const contentDiv = createElement('div', 'category-content');

        // Add a specific class to the Debug category's content for styling
        if (categoryName === 'Debug') {
            contentDiv.classList.add('category-debug');
        }

        const paramsInCategory = categorizedParamConfigs[categoryName];
        for (const key in paramsInCategory) {
            const config = paramsInCategory[key];
            const controlRow = createElement('div', 'control-row');

            if (config.type === 'range') {
                const labelEl = createElement('label', '', { htmlFor: `param-${key}-input`, textContent: config.label });
                const inputEl = createElement('input', '', { type: 'range', id: `param-${key}-input`, min: config.min, max: config.max, step: config.step, value: initialParams[key] });
                const valueInput = createElement('input', 'value-input', { type: 'text', id: `param-${key}-value`, value: config.precision ? initialParams[key].toFixed(config.precision) : initialParams[key].toString() });

                inputEl.addEventListener('input', () => {
                    const newVal = parseFloat(inputEl.value);
                    valueInput.value = config.precision ? newVal.toFixed(config.precision) : newVal.toString();
                    if (config.type === 'range') updateSliderFill(inputEl);
                    dispatch('paramChanged', { key: key, value: newVal });
                });
                valueInput.addEventListener('input', () => {
                    let newVal = parseFloat(valueInput.value);
                    if (!isNaN(newVal)) {
                        newVal = Math.max(config.min, Math.min(config.max, newVal));
                        inputEl.value = newVal;
                        if (config.type === 'range') updateSliderFill(inputEl);
                        dispatch('paramChanged', { key: key, value: newVal });
                    }
                });
                const finalizeInputValue = () => {
                    let currentVal = parseFloat(valueInput.value);
                    if (isNaN(currentVal)) {
                        currentVal = parseFloat(inputEl.value);
                    }
                    const min = parseFloat(config.min);
                    const max = parseFloat(config.max);
                    currentVal = Math.max(min, Math.min(max, currentVal));
                    valueInput.value = config.precision ? currentVal.toFixed(config.precision) : currentVal.toString();
                    inputEl.value = currentVal;
                    updateSliderFill(inputEl);
                    dispatch('paramChanged', { key: key, value: currentVal });
                };

                valueInput.addEventListener('blur', finalizeInputValue);
                valueInput.addEventListener('keydown', (e) => {
                    if (e.key === 'Enter') {
                        finalizeInputValue();
                        valueInput.blur();
                    }
                });

                updateSliderFill(inputEl);
                enableSliderWheelControl(inputEl);
                inputElements[key] = { input: inputEl, valueInput: valueInput, config: config };
                controlRow.append(labelEl, inputEl, valueInput);

            } else if (config.type === 'checkbox') {
                const label = createElement('label', '', { htmlFor: `debug-${key}-toggle`, textContent: config.label });
                const checkbox = createElement('input', '', { type: 'checkbox', id: `debug-${key}-toggle`, checked: config.checked });
                checkbox.addEventListener('change', () => dispatch('debugFlagChanged', { flag: key, enabled: checkbox.checked }));
                controlRow.append(label, checkbox);
            }
            contentDiv.appendChild(controlRow);
        }

        contentWrapper.appendChild(contentDiv);
        categoryContainer.append(categoryHeader, contentWrapper);
        scrollableContent.appendChild(categoryContainer);

        categoryHeader.addEventListener('click', () => {
            categoryHeader.classList.toggle('is-open');
            contentWrapper.classList.toggle('is-open');
        });
    }


    // --- Create and append Reset button ---
    const resetButton = createElement('button', 'px-3 py-2 mt-4 w-full bg-background text-gray-600 rounded-2xl cursor-pointer hover:bg-backgroundHovered', { textContent: 'Reset' });
    resetButton.addEventListener('click', () => {
        dispatch('paramsReset');
    });
    scrollableContent.appendChild(resetButton);

    // --- Final DOM attachment ---
    menuContainer.appendChild(scrollableContent);
    document.body.appendChild(menuContainer);
}


export function updateMenuValues(newParams) {
    for (const key in newParams) {
        if (inputElements[key]) {
            const { input, valueInput, config } = inputElements[key];
            input.value = newParams[key];
            valueInput.value = config.precision ? newParams[key].toFixed(config.precision) : newParams[key].toString();
            if (input.type === 'range') {
                updateSliderFill(input);
            }
        }
    }
}

/**
 * NEW: Updates the visual state of the debug checkboxes from external state.
 * @param {object} newDebugFlags - An object like { grid: false, obstacles: true }.
 */
export function updateDebugCheckboxes(newDebugFlags) {
    for (const flag in newDebugFlags) {
        const checkbox = document.getElementById(`debug-${flag}-toggle`);
        if (checkbox) {
            checkbox.checked = newDebugFlags[flag];
        }
    }
}

---
/Users/lachie/Documents/coding/website/assets/js/boid-simulator.js
---
import { initializeMenu, setMenuVisibility, updateMenuValues, updateDebugCheckboxes } from './boid-menu.js';

// Canvas and DOM elements
const canvas = document.getElementById('boidCanvas');
const ctx = canvas.getContext('2d');
const speedSlider = document.getElementById('speedSlider');
const speedControls = document.getElementById('controls');
const speedValue = document.getElementById('speedValue');
const godModeButton = document.getElementById('godModeButton');

// --- Flock Management ---
const FLOCK_DENSITY = 0.0002; // Boids per pixel area for responsive sizing
const MIN_BOIDS = 30;
const MAX_BOIDS_PER_1000PX_WIDTH = 750; // Max boids scales with width
const DEFAULT_FLOCK_SIZE = 150;
let userHasSetFlockSize = false;

// --- Tweakable Simulation Parameters (via experimental menu) ---
let simParams = {
    FLOCK_SIZE: DEFAULT_FLOCK_SIZE,
    ALIGNMENT_FORCE: 1.0,
    COHESION_FORCE: 0.7,
    SEPARATION_FORCE: 1.1,
    OBSTACLE_FORCE: 1.2,
    ALIGNMENT_RADIUS: 50,
    COHESION_RADIUS: 120,
    SEPARATION_RADIUS: 45,
    OBSTACLE_RADIUS: 120,
    VELOCITY_INERTIA: 0.45,
    ROTATION_INERTIA: 0.3,
};

const defaultSimParams = { ...simParams }; // Store initial values for reset

const OBSTACLE_PADDING = 0;
const OBSTACLE_BOUNCE_FORCE_MULTIPLIER = 3;
const OBSTACLE_DEBUG_COLOR = 'rgba(255, 0, 0, 0.7)';
const OBSTACLE_DEBUG_FILL_COLOR = 'rgba(255, 0, 0, 0.1)';

const OBSTACLE_ELEMENT_IDS = [
    'navLinks',
    'footer',
    'hamburger-menu',
    'simpleHomeLink',
    'downloadPdfBtn',
    'keith-logo',
    'dj-pretence-logo',
    'root-basis-logo',
];
// Initialize obstacles from the DOM elements
let allObstacles = [];

// --- Other Simulation parameters (mostly non-tweakable via new menu) ---
const MITOSIS_BOOST_STRENGTH = 0.1;
const NORMAL_MAX_SPEED = 5;
const SCATTER_MAX_SPEED = 15;
const INITIAL_BOOST = 10;
const BOOST_DECAY = 0.95;

// Mouse interaction
const MOUSE_INFLUENCE_RADIUS = 200;
const CLICK_SCATTER_DURATION = 22;
const HOLD_SCATTER_DURATION = 45;
const COOLDOWN_DURATION = 30;

// Boid behavior forces (related to mouse, not part of tweakable menu)
const MOUSE_FORCE_NORMAL = 3.0;
const MOUSE_FORCE_SCATTER = 2.5;

// Boid behavior radii (DEPTH_INFLUENCE_RADIUS is used for CELL_SIZE but not in tweakable menu)
const DEPTH_INFLUENCE_RADIUS = 50;

// Additional Boid-specific constants
const BOID_MAX_FORCE = 0.175;
const BOID_SIZE_BASE = 20;
const BOID_SIZE_VARIATION = 10;
const BOID_OSCILLATION_SPEED_BASE = 0.02;
const BOID_OSCILLATION_SPEED_VARIATION = 0.04;
const BOID_ROTATION_SPEED = 0.1;
const BOID_DYING_DURATION = 250; // Time in ms for a boid to fade out

// Easter egg parameters
const EASTER_EGG_WIDTH = 45;
const EASTER_EGG_HEIGHT = 40;
const EASTER_EGG_RIGHT = 25;
const EASTER_EGG_BOTTOM = 21;
const SPREAD_FACTOR = 0.1;

// Animation
const END_ANIMATION_DURATION = 1000;

// Edge buffering for wraparound effect
const EDGE_BUFFER_POSITIONS = [
    { dx: 0, dy: 0 },
    { dx: -1, dy: 0 }, { dx: 1, dy: 0 },
    { dx: 0, dy: -1 }, { dx: 0, dy: 1 },
    { dx: -1, dy: -1 }, { dx: 1, dy: -1 },
    { dx: -1, dy: 1 }, { dx: 1, dy: 1 }
];

// --- Spatial Partitioning Settings ---
let CELL_SIZE; // Dynamically calculated based on simParams radii

const TARGET_FPS = 120; // The desired FPS for your simulation's look and feel

// Helper function to calculate CELL_SIZE
function calculateCurrentCellSize() {
    return Math.max(simParams.ALIGNMENT_RADIUS, simParams.SEPARATION_RADIUS, simParams.COHESION_RADIUS, DEPTH_INFLUENCE_RADIUS, simParams.OBSTACLE_RADIUS);
}

// Function to update spatial grid parameters if radii change
function updateSpatialGridParameters() {
    const newCellSize = calculateCurrentCellSize();
    CELL_SIZE = newCellSize;

    if (spatialGrid) {
        spatialGrid.cellSize = CELL_SIZE;
        spatialGrid.resize(canvas.width, canvas.height);
    }
}

// Global variables
let speedMultiplier = 1;
let isScattering = false;
let mouseInfluence = false;
let animationFrameId = null;
let isEnding = false;
let endStartTime = 0;
let spatialGrid;
let godMode = false;
let debugObstaclesMode = false;
let debugGridMode = false;
let debugLinesMode = false;
let debugSelectedBoid = null;
let boidsIgnoreMouse = false;
let boidsIgnoreTouch = false;
let touchEndTimeoutId = null;
let boidImageBitmap = null;
let isSystemInitialized = false;


// --- Vector Pool ---
// Since FLOCK_SIZE is dynamic, the pool size must be based on a hard-coded maximum capacity.
export const MAX_FLOCK_SIZE_HARD_CAP = 1000;
const PEAK_VECTORS_PER_BOID = 7;
const VECTOR_POOL_INITIAL_SIZE = MAX_FLOCK_SIZE_HARD_CAP * PEAK_VECTORS_PER_BOID;
const VECTOR_POOL_MAX_SIZE = MAX_FLOCK_SIZE_HARD_CAP * PEAK_VECTORS_PER_BOID * 2;

class VectorPool {
    constructor(initialSize, maxSize) {
        this.pool = [];
        this.maxSize = maxSize;
        // For debugging/tuning:
        this._totalCreated = 0;
        this._totalReleased = 0;
        this._totalRetrieved = 0;
        this._maxInUseSimultaneously = 0;
        this._currentlyInUse = 0;

        for (let i = 0; i < initialSize; i++) {
            this.pool.push(new Vector(0, 0)); // Pre-populate with actual Vector instances
            this._totalCreated++;
        }
    }

    get(x = 0, y = 0) {
        this._totalRetrieved++;
        this._currentlyInUse++;
        if (this._currentlyInUse > this._maxInUseSimultaneously) {
            this._maxInUseSimultaneously = this._currentlyInUse;
        }

        let v;
        if (this.pool.length > 0) {
            v = this.pool.pop();
            v.x = x;
            v.y = y;
        } else {
            v = new Vector(x, y); // Create new if pool is empty
            this._totalCreated++;
            console.warn("VectorPool had to create a new Vector. Pool empty.");
        }
        return v;
    }

    release(v) {
        if (v instanceof Vector) {
            this._totalReleased++;
            this._currentlyInUse--;
            if (this.pool.length < this.maxSize) {
                this.pool.push(v);
            } else {
                // Optional: console.warn("VectorPool is full. Discarding released vector.");
                // Vector is not added back, will be GC'd.
            }
        } else {
            // console.warn("VectorPool: Attempted to release non-Vector object or null/undefined:", v);
        }
    }

    // Utility to get stats (for debugging/tuning)
    getStats() {
        return {
            poolSize: this.pool.length,
            maxSize: this.maxSize,
            totalCreated: this._totalCreated,
            totalRetrieved: this._totalRetrieved,
            totalReleased: this._totalReleased,
            currentlyInUse: this._currentlyInUse,
            maxInUseSimultaneously: this._maxInUseSimultaneously,
        };
    }
}

window.logPoolStats = () => console.table(vectorPool.getStats());

class Vector {
    constructor(x, y) {
        this.x = x;
        this.y = y;
    }

    add(v) { this.x += v.x; this.y += v.y; return this; }
    sub(v) { this.x -= v.x; this.y -= v.y; return this; }
    mult(n) { this.x *= n; this.y *= n; return this; }
    div(n) { if (n === 0) { this.x = 0; this.y = 0; } else { this.x /= n; this.y /= n; } return this; }
    mag() { return Math.sqrt(this.x * this.x + this.y * this.y); }
    magSq() { return this.x * this.x + this.y * this.y; }
    setMag(n) { this.normalize(); this.mult(n); return this; }
    normalize() { const m = this.mag(); if (m !== 0) this.div(m); return this; }
    limit(max) { const mSq = this.magSq(); if (mSq > max * max && mSq > 0) { this.div(Math.sqrt(mSq)); this.mult(max); } return this; }

    copy() {
        return vectorPool.get(this.x, this.y);
    }

    set(x, y) {
        this.x = x;
        this.y = y;
        return this;
    }

    static dist(v1, v2) { return Math.sqrt((v1.x - v2.x) ** 2 + (v1.y - v2.y) ** 2); }

    static sub(v1, v2, out_vector) {
        const target = out_vector || vectorPool.get(0, 0);
        target.x = v1.x - v2.x;
        target.y = v1.y - v2.y;
        return target;
    }

    static random2D(out_vector) {
        const target = out_vector || vectorPool.get(0, 0);
        target.x = Math.random() * 2 - 1;
        target.y = Math.random() * 2 - 1;
        return target;
    }
}

// Now define the global vectorPool instance AFTER Vector and VectorPool classes are defined.
const vectorPool = new VectorPool(VECTOR_POOL_INITIAL_SIZE, VECTOR_POOL_MAX_SIZE);

let mouse = vectorPool.get(0, 0);

class Obstacle {
    constructor(elementIdOrElement) {
        this.element = typeof elementIdOrElement === 'string'
            ? document.getElementById(elementIdOrElement)
            : elementIdOrElement;

        this.bounds = null;
        this.paddedBounds = null;
        this.isEnabled = false;
        this.centerX = 0;
        this.centerY = 0;
        this.update(); // Initial update
    }

    update() {
        if (this.element instanceof HTMLElement && typeof this.element.getBoundingClientRect === 'function') {
            const rect = this.element.getBoundingClientRect();
            const computedStyle = window.getComputedStyle(this.element);

            if (rect.width > 0 && rect.height > 0 &&
                computedStyle.display !== 'none' &&
                computedStyle.visibility !== 'hidden' &&
                this.element.offsetParent !== null) {

                this.bounds = rect;
                const canvasRect = canvas.getBoundingClientRect();

                this.paddedBounds = {
                    left: rect.left - canvasRect.left - OBSTACLE_PADDING, // Use global
                    top: rect.top - canvasRect.top - OBSTACLE_PADDING,    // Use global
                    right: rect.right - canvasRect.left + OBSTACLE_PADDING, // Use global
                    bottom: rect.bottom - canvasRect.top + OBSTACLE_PADDING, // Use global
                };
                this.paddedBounds.width = this.paddedBounds.right - this.paddedBounds.left;
                this.paddedBounds.height = this.paddedBounds.bottom - this.paddedBounds.top;

                this.centerX = this.paddedBounds.left + this.paddedBounds.width / 2;
                this.centerY = this.paddedBounds.top + this.paddedBounds.height / 2;
                this.isEnabled = true;
            } else {
                this.isEnabled = false;
                this.bounds = null;
                this.paddedBounds = null;
            }
        } else {
            this.isEnabled = false;
            this.bounds = null;
            this.paddedBounds = null;
        }
    }

    drawDebug() {
        if (!this.isEnabled || !this.paddedBounds) return;

        ctx.save();
        ctx.strokeStyle = OBSTACLE_DEBUG_COLOR; // Use global
        ctx.fillStyle = OBSTACLE_DEBUG_FILL_COLOR; // Use global
        ctx.lineWidth = 2;

        const pb = this.paddedBounds;
        ctx.fillRect(pb.left, pb.top, pb.width, pb.height);
        ctx.strokeRect(pb.left, pb.top, pb.width, pb.height);

        ctx.beginPath();
        ctx.arc(this.centerX, this.centerY, 5, 0, Math.PI * 2);
        // Fill with the same color as the stroke for simplicity, or use a dedicated fill for center point
        ctx.fillStyle = OBSTACLE_DEBUG_COLOR;
        ctx.fill();
        ctx.restore();
    }
}

class SpatialGrid {
    constructor(canvasWidth, canvasHeight, cellSize) {
        this.canvasWidth = canvasWidth;
        this.canvasHeight = canvasHeight;
        this.cellSize = cellSize;
        this.resize(canvasWidth, canvasHeight);
    }

    _initializeGrid() {
        this.grid = [];
        this.numRows = Math.max(1, Math.ceil(this.canvasHeight / this.cellSize));
        this.numCols = Math.max(1, Math.ceil(this.canvasWidth / this.cellSize));
        for (let i = 0; i < this.numRows; i++) {
            this.grid[i] = [];
            for (let j = 0; j < this.numCols; j++) {
                this.grid[i][j] = [];
            }
        }
    }

    resize(newWidth, newHeight) {
        this.canvasWidth = newWidth;
        this.canvasHeight = newHeight;
        this._initializeGrid();
    }

    clear() {
        for (let i = 0; i < this.numRows; i++) {
            for (let j = 0; j < this.numCols; j++) {
                this.grid[i][j].length = 0;
            }
        }
    }

    _getCellCoords(position) {
        const col = Math.floor(position.x / this.cellSize);
        const row = Math.floor(position.y / this.cellSize);
        return { col, row };
    }

    // --- GENERIC ADD METHODS ---

    /**
     * Adds an object with a .position property (like a Boid) to a single cell.
     * @param {object} item - The item to add, must have a .position {x, y} property.
     */
    addItemAtPoint(item) {
        const { col, row } = this._getCellCoords(item.position);
        if (row >= 0 && row < this.numRows && col >= 0 && col < this.numCols) {
            this.grid[row][col].push(item);
        }
    }

    /**
     * Adds an object to all grid cells it overlaps.
     * @param {object} item - The item to add.
     * @param {object} bounds - An object with { left, top, right, bottom } properties.
     */
    addItemInArea(item, bounds) {
        const startCol = Math.floor(bounds.left / this.cellSize);
        const endCol = Math.floor(bounds.right / this.cellSize);
        const startRow = Math.floor(bounds.top / this.cellSize);
        const endRow = Math.floor(bounds.bottom / this.cellSize);

        for (let row = startRow; row <= endRow; row++) {
            for (let col = startCol; col <= endCol; col++) {
                if (row >= 0 && row < this.numRows && col >= 0 && col < this.numCols) {
                    this.grid[row][col].push(item);
                }
            }
        }
    }

    // --- GENERIC QUERY METHOD ---

    /**
     * Retrieves all items from the 3x3 neighborhood of cells around a position.
     * Returns an array of items (with duplicates if an item is in multiple cells).
     * @param {object} position - The center point of the query, { x, y }.
     */
    getItemsInNeighborhood(position) {
        const items = [];
        const { col: centerCol, row: centerRow } = this._getCellCoords(position);

        for (let rOffset = -1; rOffset <= 1; rOffset++) {
            for (let cOffset = -1; cOffset <= 1; cOffset++) {
                // Toroidal wrapping for seamless edges
                const neighborRow = (centerRow + rOffset + this.numRows) % this.numRows;
                const neighborCol = (centerCol + cOffset + this.numCols) % this.numCols;

                if (this.grid[neighborRow] && this.grid[neighborRow][neighborCol]) {
                    // This creates a shallow copy, which is fine.
                    // For performance, could also loop and push items one by one.
                    items.push(...this.grid[neighborRow][neighborCol]);
                }
            }
        }
        return items;
    }
}

let nextBoidId = 0;
class Boid {
    constructor(parentBoid = null) {
        this.id = nextBoidId++;
        if (parentBoid) {
            // "Mitosis" logic: spawn from a parent
            this.position = parentBoid.position.copy();
            this.position.x += (Math.random() - 0.5) * 5; // Jitter position
            this.position.y += (Math.random() - 0.5) * 5;

            this.velocity = parentBoid.velocity.copy();
            // Apply a small perpendicular force to "split off"
            this.boost = vectorPool.get(0, 0);
            this.depth = parentBoid.depth;

        } else {
            // Initial spawn logic (at the easter egg location)
            const easterEggCenterX = canvas.width - EASTER_EGG_RIGHT - EASTER_EGG_WIDTH / 2;
            const easterEggCenterY = canvas.height + EASTER_EGG_BOTTOM - EASTER_EGG_HEIGHT / 2 - 10;

            this.position = vectorPool.get(
                easterEggCenterX + (Math.random() - 0.5) * EASTER_EGG_WIDTH * SPREAD_FACTOR,
                easterEggCenterY + (Math.random() - 0.5) * EASTER_EGG_HEIGHT * SPREAD_FACTOR
            );

            this.velocity = Vector.random2D(vectorPool.get(0, 0));
            this.velocity.setMag(Math.random() * 2 + 2);
            this.boost = vectorPool.get(-INITIAL_BOOST, -INITIAL_BOOST);
            this.depth = Math.random();
        }

        // --- Common initialization for all boids ---
        this.desiredVelocity = vectorPool.get(0, 0);
        this.maxForce = BOID_MAX_FORCE;
        this.maxSpeed = NORMAL_MAX_SPEED;

        this.rotation = Math.atan2(this.velocity.y, this.velocity.x);
        this.rotationSpeed = BOID_ROTATION_SPEED;

        this.size = BOID_SIZE_BASE + this.depth * BOID_SIZE_VARIATION;
        this.renderSize = this.calculateRenderSize();
        this.oscillationPhase = Math.random() * Math.PI * 2;
        this.oscillationSpeed = BOID_OSCILLATION_SPEED_BASE + Math.random() * BOID_OSCILLATION_SPEED_VARIATION;

        this.scatterState = 0;
        this.cooldownTimer = 0;

        // --- Properties for fading out ---
        this.isDying = false;
        this.dyingStartTime = 0;
    }

    destroy() {
        vectorPool.release(this.position);
        vectorPool.release(this.velocity);
        vectorPool.release(this.desiredVelocity);
        vectorPool.release(this.boost);
        // Set them to null to prevent accidental use after destruction
        this.position = null;
        this.velocity = null;
        this.desiredVelocity = null;
        this.boost = null;
    }

    startDying() {
        if (!this.isDying) {
            this.isDying = true;
            this.dyingStartTime = performance.now();
        }
    }

    edges() {
        if (this.position.x > canvas.width) this.position.x = 0;
        else if (this.position.x < 0) this.position.x = canvas.width;
        if (this.position.y > canvas.height) this.position.y = 0;
        else if (this.position.y < 0) this.position.y = canvas.height;
    }

    calculateFlockingForces(localNeighbors, timeScale) {
        const dynamicMaxForce = this.maxForce * timeScale;

        // --- Accumulators for all behaviors ---
        const alignmentForce = vectorPool.get(0, 0);
        const cohesionForce = vectorPool.get(0, 0);
        const separationForce = vectorPool.get(0, 0);

        const avgVelocity = vectorPool.get(0, 0);
        const avgPosition = vectorPool.get(0, 0);
        const avgRepulsion = vectorPool.get(0, 0);
        let avgDepth = 0;

        let avgPhaseX = 0;
        let avgPhaseY = 0;
        let syncTotal = 0;

        let alignmentTotal = 0;
        let cohesionTotal = 0;
        let separationTotal = 0;
        let depthTotal = 0;

        // --- Pre-calculate constants for this boid ---
        const halfWidth = canvas.width / 2;
        const halfHeight = canvas.height / 2;
        const alignRadiusSq = simParams.ALIGNMENT_RADIUS * simParams.ALIGNMENT_RADIUS;
        const cohRadiusSq = simParams.COHESION_RADIUS * simParams.COHESION_RADIUS;
        const sepRadiusSq = simParams.SEPARATION_RADIUS * simParams.SEPARATION_RADIUS;
        const depthRadiusSq = DEPTH_INFLUENCE_RADIUS * DEPTH_INFLUENCE_RADIUS;
        const syncRadiusSq = 50 * 50;

        const tempDiff = vectorPool.get(0, 0); // Reusable vector for calculations

        // --- SINGLE LOOP ---
        for (const other of localNeighbors) {
            if (other === this || other.isDying) continue; // Ignore self and dying boids in flocking

            // --- 1. Calculate Toroidal Distance (ONCE!) ---
            let tdx = this.position.x - other.position.x;
            let tdy = this.position.y - other.position.y;
            if (Math.abs(tdx) > halfWidth) tdx -= Math.sign(tdx) * canvas.width;
            if (Math.abs(tdy) > halfHeight) tdy -= Math.sign(tdy) * canvas.height;
            const dSq = tdx * tdx + tdy * tdy;

            // --- 2. Apply Behaviors based on distance ---
            // Alignment
            if (dSq < alignRadiusSq) {
                avgVelocity.add(other.velocity);
                alignmentTotal++;
            }
            // Cohesion
            if (dSq < cohRadiusSq) {
                // Adjust neighbor position for wrapping to get correct average
                const neighborX = this.position.x - tdx;
                const neighborY = this.position.y - tdy;
                avgPosition.x += neighborX;
                avgPosition.y += neighborY;
                cohesionTotal++;
            }
            // Separation
            if (dSq < sepRadiusSq && dSq > 0) {
                const distance = Math.sqrt(dSq);
                const strength = 1.0 - (distance / simParams.SEPARATION_RADIUS);
                tempDiff.set(tdx, tdy); // Vector pointing away from neighbor
                tempDiff.normalize().mult(strength);
                avgRepulsion.add(tempDiff);
                separationTotal++;
            }
            // Depth
            if (dSq < depthRadiusSq) {
                avgDepth += other.depth;
                depthTotal++;
            }

            // Oscillation Sync
            if (dSq < syncRadiusSq) {
                avgPhaseX += Math.cos(other.oscillationPhase);
                avgPhaseY += Math.sin(other.oscillationPhase);
                syncTotal++;
            }
        }

        vectorPool.release(tempDiff); // Done with this temporary vector

        // --- Finalize ALIGNMENT force ---
        if (alignmentTotal > 0) {
            avgVelocity.div(alignmentTotal);
            avgVelocity.setMag(this.maxSpeed);
            Vector.sub(avgVelocity, this.velocity, alignmentForce);
            alignmentForce.limit(dynamicMaxForce);
        }
        vectorPool.release(avgVelocity);

        // --- Finalize COHESION force ---
        if (cohesionTotal > 0) {
            avgPosition.div(cohesionTotal);
            Vector.sub(avgPosition, this.position, cohesionForce);
            cohesionForce.setMag(this.maxSpeed);
            cohesionForce.sub(this.velocity);
            cohesionForce.limit(dynamicMaxForce);
        }
        vectorPool.release(avgPosition);

        // --- Finalize SEPARATION force ---
        if (separationTotal > 0) {
            avgRepulsion.div(separationTotal);
            if (avgRepulsion.magSq() > 0) {
                avgRepulsion.setMag(this.maxSpeed);
                Vector.sub(avgRepulsion, this.velocity, separationForce);
                separationForce.limit(dynamicMaxForce);
            }
        }
        vectorPool.release(avgRepulsion);

        // --- Finalize and apply DEPTH update ---
        if (depthTotal > 0) {
            const targetDepth = avgDepth / depthTotal;
            this.depth = this.depth * 0.99 + targetDepth * 0.01;
            this.depth = Math.max(0, Math.min(1, this.depth));
        }

        // --- Finalize OSCILLATION SYNC update ---
        if (syncTotal > 0) {
            const avgTargetPhase = Math.atan2(avgPhaseY / syncTotal, avgPhaseX / syncTotal);
            let phaseDifference = avgTargetPhase - this.oscillationPhase;
            phaseDifference = Math.atan2(Math.sin(phaseDifference), Math.cos(phaseDifference));
            this.oscillationPhase += phaseDifference * 0.02 * timeScale;
        }

        // --- Return the combined forces ---
        return { alignmentForce, cohesionForce, separationForce };
    }

    mouseAttraction(timeScale) {
        if (!mouseInfluence || boidsIgnoreMouse) return vectorPool.get(0, 0);

        const directionToMouse = Vector.sub(mouse, this.position, vectorPool.get(0, 0));
        let distance = directionToMouse.mag();
        let steer = null; // Will hold the final steering vector for this function

        const dynamicMaxForce = this.maxForce * timeScale;

        if (distance > 0 && distance < MOUSE_INFLUENCE_RADIUS) {
            if (this.scatterState === 1) {
                const desiredRepulsionVelocity = vectorPool.get(directionToMouse.x, directionToMouse.y);
                desiredRepulsionVelocity.setMag(this.maxSpeed).mult(-1);
                steer = Vector.sub(desiredRepulsionVelocity, this.velocity, vectorPool.get(0, 0));
                steer.limit(dynamicMaxForce * 3);
                vectorPool.release(desiredRepulsionVelocity);
            } else {
                let strength = 1.0 - (distance / MOUSE_INFLUENCE_RADIUS);
                const desiredAttractionVelocity = vectorPool.get(directionToMouse.x, directionToMouse.y);
                desiredAttractionVelocity.setMag(this.maxSpeed);
                steer = Vector.sub(desiredAttractionVelocity, this.velocity, vectorPool.get(0, 0));
                steer.mult(strength).limit(dynamicMaxForce);
                vectorPool.release(desiredAttractionVelocity);
            }
        }
        vectorPool.release(directionToMouse);

        if (steer) {
            return steer; // Return the calculated steer (pooled, to be released by flock)
        } else {
            return vectorPool.get(0, 0); // Return a zero vector if no interaction (pooled, to be released by flock)
        }
    }

    /**
    * Calculates flocking and mouse forces and accumulates them in desiredVelocity.
    * Obstacle forces will be added externally after this step.
    */
    calculateBoidAndMouseForces(localNeighbors, timeScale) {
        // --- 1. Calculate flocking and mouse forces ---
        const { alignmentForce, cohesionForce, separationForce } = this.calculateFlockingForces(localNeighbors, timeScale);
        const mouseForce = this.mouseAttraction(timeScale);

        // --- 2. Apply weights ---
        alignmentForce.mult(simParams.ALIGNMENT_FORCE);
        cohesionForce.mult(simParams.COHESION_FORCE);
        separationForce.mult(simParams.SEPARATION_FORCE);
        mouseForce.mult(this.scatterState === 1 ? MOUSE_FORCE_SCATTER : MOUSE_FORCE_NORMAL);

        // --- 3. Accumulate forces into desiredVelocity ---
        // Start with current velocity for steering behavior
        this.desiredVelocity.set(this.velocity.x, this.velocity.y);
        this.desiredVelocity.add(alignmentForce);
        this.desiredVelocity.add(cohesionForce);
        this.desiredVelocity.add(separationForce);
        this.desiredVelocity.add(mouseForce);
        // Note: obstacleAvoidanceForce is now added externally between this method and the next.

        // --- 4. Release temporary force vectors ---
        vectorPool.release(alignmentForce);
        vectorPool.release(cohesionForce);
        vectorPool.release(separationForce);
        vectorPool.release(mouseForce);
    }

    /**
     * Applies the final accumulated forces (including obstacle forces) to update
     * the boid's physics, position, and visual properties.
     */
    applyForcesAndMove(timeScale) {
        // For living boids, update velocity based on all calculated forces.
        // Dying boids skip this block and just continue with their last velocity.
        if (!this.isDying) {
            // --- 1. Update velocity from desiredVelocity based on inertia ---
            this.velocity.x = this.velocity.x * simParams.VELOCITY_INERTIA + this.desiredVelocity.x * (1 - simParams.VELOCITY_INERTIA);
            this.velocity.y = this.velocity.y * simParams.VELOCITY_INERTIA + this.desiredVelocity.y * (1 - simParams.VELOCITY_INERTIA);

            // --- 2. Update state, determine max speed, and limit the base velocity ---
            this.updateScatterState();
            this.updateMaxSpeed();
            this.velocity.limit(this.maxSpeed); // Limit the boid's normal, sustainable speed

            // --- 3. Apply the decaying boost AFTER limiting ---
            // This allows the boost to temporarily exceed the max speed.
            this.velocity.add(this.boost);
            this.boost.mult(BOOST_DECAY);
        }


        // --- 4. Update position and visuals (for ALL boids, living or dying) ---
        this.position.add(this.velocity);
        this.updateRotation();
        this.oscillationPhase = (this.oscillationPhase + this.oscillationSpeed * timeScale) % (Math.PI * 2);
        this.edges(); // Wrap around canvas
    }


    updateScatterState() {
        if (this.scatterState !== 0) {
            this.cooldownTimer--;
            if (this.cooldownTimer <= 0) {
                this.scatterState = this.scatterState === 1 ? 2 : 0;
                this.cooldownTimer = this.scatterState === 2 ? COOLDOWN_DURATION : 0;
            }
        }
    }

    updateMaxSpeed() {
        if (this.scatterState === 1) {
            this.maxSpeed = SCATTER_MAX_SPEED * speedMultiplier;
        } else if (this.scatterState === 2) {
            this.maxSpeed = (NORMAL_MAX_SPEED + (SCATTER_MAX_SPEED - NORMAL_MAX_SPEED) * (this.cooldownTimer / COOLDOWN_DURATION)) * speedMultiplier;
        } else {
            this.maxSpeed = NORMAL_MAX_SPEED * speedMultiplier;
        }
        this.maxSpeed *= (0.5 + this.depth * 0.5);
    }



    updateRotation() {
        const targetRotation = Math.atan2(this.velocity.y, this.velocity.x);
        let rotationDiff = targetRotation - this.rotation;
        rotationDiff = Math.atan2(Math.sin(rotationDiff), Math.cos(rotationDiff));

        const smoothedRotationDiff = rotationDiff * (1 - simParams.ROTATION_INERTIA) * this.rotationSpeed * speedMultiplier;
        this.rotation += smoothedRotationDiff;

        this.rotation = (this.rotation + 2 * Math.PI) % (2 * Math.PI);
    }

    draw(currentTime) {
        const margin = this.renderSize; // A slightly larger margin for safety

        // If the boid is safely away from all edges, draw it just once.
        if (this.position.x > margin && this.position.x < canvas.width - margin &&
            this.position.y > margin && this.position.y < canvas.height - margin) {

            this.drawAt(this.position, currentTime);

        } else {
            // Only for boids near an edge, perform the expensive buffered drawing.
            EDGE_BUFFER_POSITIONS.forEach(offset => {
                const position = this.calculateBufferPosition(offset);
                if (this.isPositionVisible(position)) {
                    this.drawAt(position, currentTime);
                }
            });
        }
    }

    calculateBufferPosition(offset) {
        return {
            x: this.position.x + offset.dx * canvas.width,
            y: this.position.y + offset.dy * canvas.height
        };
    }

    drawAt(position, currentTime) {
        if (!boidImageBitmap) return;
        ctx.save();

        let opacity = 1.0;
        let scale = 1.0;

        if (this.isDying) {
            const progress = Math.min(1, (currentTime - this.dyingStartTime) / BOID_DYING_DURATION);
            opacity = 1 - progress;
            scale = 1 - progress;
        }

        const finalRenderSize = this.renderSize * scale;
        if (finalRenderSize <= 0) {
            ctx.restore();
            return;
        }

        ctx.globalAlpha = opacity;
        ctx.translate(position.x, position.y);
        ctx.rotate(this.rotation + Math.PI / 2);
        ctx.drawImage(boidImageBitmap, -finalRenderSize / 2, -finalRenderSize / 2, finalRenderSize, finalRenderSize);
        ctx.restore();
    }

    isPositionVisible(pos) {
        return pos.x + this.renderSize / 2 > 0 &&
            pos.x - this.renderSize / 2 < canvas.width &&
            pos.y + this.renderSize / 2 > 0 &&
            pos.y - this.renderSize / 2 < canvas.height;
    }

    calculateRenderSize() {
        const oscillation = Math.sin(this.oscillationPhase);
        let size = this.size * (1 + oscillation * 0.1);

        if (this.scatterState === 1) {
            size *= 1.5;
        } else if (this.scatterState === 2) {
            size *= 1 + 0.5 * (this.cooldownTimer / COOLDOWN_DURATION);
        }
        return size;
    }
}

const flock = [];

/**
 * Draws lines between nearby boids based on their distance.
 * The line opacity fades from full at 20px to zero at 200px.
 */
function drawBoidConnections() {
    const minDist = 10;
    const maxDist = 150;
    const range = maxDist - minDist;
    const halfWidth = canvas.width / 2;
    const halfHeight = canvas.height / 2;

    // Use a Set to ensure each pair is drawn only once per frame.
    const drawnPairs = new Set();

    ctx.lineWidth = 0.5;
    ctx.strokeStyle = 'rgba(125, 125, 125, 1)';

    for (const boid of flock) {
        if (boid.isDying) continue;

        const localNeighbors = spatialGrid.getItemsInNeighborhood(boid.position);

        for (const other of localNeighbors) {
            if (boid === other || other.isDying) continue;

            const pairKey = boid.id < other.id ? `${boid.id}-${other.id}` : `${other.id}-${boid.id}`;
            if (drawnPairs.has(pairKey)) {
                continue;
            }

            let dx = boid.position.x - other.position.x;
            let dy = boid.position.y - other.position.y;

            if (Math.abs(dx) > halfWidth) dx -= Math.sign(dx) * canvas.width;
            if (Math.abs(dy) > halfHeight) dy -= Math.sign(dy) * canvas.height;

            const dist = Math.sqrt(dx * dx + dy * dy);

            if (dist < maxDist) {
                const opacity = 1 - Math.max(0, Math.min(1, (dist - minDist) / range));
                if (opacity > 0.001) {
                    const drawX = boid.position.x - dx;
                    const drawY = boid.position.y - dy;

                    ctx.globalAlpha = opacity;
                    ctx.beginPath();
                    ctx.moveTo(boid.position.x, boid.position.y);
                    ctx.lineTo(drawX, drawY);
                    ctx.stroke();
                }
            }
            drawnPairs.add(pairKey);
        }
    }
    ctx.globalAlpha = 1.0;
}

// --- NEW FLOCK MANAGEMENT FUNCTIONS ---

/**
 * Finds a boid within a "clump" by sampling the flock and checking neighbor density.
 * Used for both adding (as a parent) and removing boids.
 * @returns {Boid | null} The chosen boid, or null if the flock is empty.
 */
function findBoidInClump() {
    if (flock.length === 0) return null;

    let bestBoid = null;
    let maxNeighbors = -1;
    // Sample a small number of boids to find a suitable candidate efficiently.
    const sampleSize = Math.min(flock.length, 15);
    const radius = simParams.COHESION_RADIUS;
    const radiusSq = radius * radius;

    // For correct toroidal distance calculation
    const halfWidth = canvas.width / 2;
    const halfHeight = canvas.height / 2;

    for (let i = 0; i < sampleSize; i++) {
        const candidate = flock[Math.floor(Math.random() * flock.length)];
        // Get neighbors from the pre-populated spatial grid for this frame.
        const potentialNeighbors = spatialGrid.getItemsInNeighborhood(candidate.position);
        let neighborCount = 0;
        for (const other of potentialNeighbors) {
            if (other === candidate) {
                continue;
            }

            // Perform correct, optimized toroidal distance check
            let dx = candidate.position.x - other.position.x;
            let dy = candidate.position.y - other.position.y;

            if (Math.abs(dx) > halfWidth) {
                dx = canvas.width - Math.abs(dx);
            }
            if (Math.abs(dy) > halfHeight) {
                dy = canvas.height - Math.abs(dy);
            }

            const distSq = dx * dx + dy * dy;

            if (distSq < radiusSq) {
                neighborCount++;
            }
        }
        if (neighborCount > maxNeighbors) {
            maxNeighbors = neighborCount;
            bestBoid = candidate;
        }
    }

    // Fallback to a purely random boid if no suitable one is found.
    return bestBoid || flock[Math.floor(Math.random() * flock.length)];
}


/** Adds one new boid to the flock using "mitosis" from a clumped parent. */
function addBoid() {
    const parentBoid = findBoidInClump();
    const newBoid = new Boid(parentBoid);

    // If a parent exists, apply the splitting force.
    if (parentBoid) {
        // Create temporary vectors for the calculation
        const splitForce = vectorPool.get(parentBoid.velocity.y, -parentBoid.velocity.x);
        const randomJitter = Vector.random2D(vectorPool.get(0, 0)).mult(0.25);

        splitForce.normalize().mult(MITOSIS_BOOST_STRENGTH);
        splitForce.add(randomJitter); // Add jitter for less uniform splits

        // Apply opposing boosts
        newBoid.boost.add(splitForce);
        parentBoid.boost.sub(splitForce); // Parent gets an equal and opposite recoil

        // Release the temporary vectors now that they've been used
        vectorPool.release(splitForce);
        vectorPool.release(randomJitter);
    }

    flock.push(newBoid);
}

/** Marks a boid for removal, starting a fade-out animation. */
function removeBoid() {
    if (flock.length === 0) return;

    // Try a few times to find a boid that isn't already dying. This is to avoid
    // always picking the same one if `findBoidInClump` is not perfectly random.
    for (let i = 0; i < 10; i++) {
        const candidate = findBoidInClump();
        if (candidate && !candidate.isDying) {
            candidate.startDying();
            return;
        }
    }

    // If the loop fails (e.g., many boids are already dying),
    // find the first available boid to ensure one is always marked.
    const fallbackBoid = flock.find(b => !b.isDying);
    if (fallbackBoid) {
        fallbackBoid.startDying();
    }
}


/**
 * Compares current flock size to the target in simParams and adds/removes boids.
 */
function adjustFlockToTargetSize() {
    const targetSize = Math.floor(simParams.FLOCK_SIZE);

    // Count only boids that are not in the process of fading out.
    let livingBoidsCount = 0;
    for (const boid of flock) {
        if (!boid.isDying) {
            livingBoidsCount++;
        }
    }

    const difference = targetSize - livingBoidsCount;

    if (difference > 0) {
        // Add boids if below target, respecting the hard cap on total boids (living + dying).
        const boidsToAdd = Math.min(difference, MAX_FLOCK_SIZE_HARD_CAP - flock.length);
        for (let i = 0; i < boidsToAdd; i++) {
            addBoid();
        }
    } else if (difference < 0) {
        // Mark boids for removal if above target.
        for (let i = 0; i < Math.abs(difference); i++) {
            removeBoid();
        }
    }
}


/**
 * Calculates the desired flock size based on canvas area and density settings.
 * This is called when `userHasSetFlockSize` is false.
 */
function updateResponsiveFlockSize() {
    const maxBoids = (canvas.width / 1000) * MAX_BOIDS_PER_1000PX_WIDTH;
    let targetSize = canvas.width * canvas.height * FLOCK_DENSITY;
    targetSize = Math.max(MIN_BOIDS, targetSize);
    targetSize = Math.min(maxBoids, targetSize);
    simParams.FLOCK_SIZE = Math.floor(targetSize);
    updateMenuValues(simParams);
}


// Public API / Entry Points
/**
 * Starts the boid simulation.
 * It will LAZILY INITIALIZE the system on its first run.
 * On subsequent runs, it just creates a new flock and starts the animation.
 */
async function startSimulation() {
    // --- LAZY INITIALIZATION ---
    if (!isSystemInitialized) {
        await _prepareEnvironment();
    }
    if (!isSystemInitialized) {
        console.error("Cannot run simulation; system initialization failed.");
        return;
    }

    // --- REGULAR RUN LOGIC ---
    if (animationFrameId) {
        console.warn("Simulation is already running. Call stopSimulation() first.");
        return;
    }

    CELL_SIZE = calculateCurrentCellSize();
    if (spatialGrid) spatialGrid.resize(canvas.width, canvas.height);
    // Set initial flock size based on responsive calculation if not manually set
    if (!userHasSetFlockSize) {
        updateResponsiveFlockSize();
    }
    // Create the initial flock
    flock.length = 0; // Clear previous flock if any
    for (let i = 0; i < simParams.FLOCK_SIZE; i++) {
        flock.push(new Boid());
    }

    speedMultiplier = parseFloat(speedSlider.value) / 100 || 1;
    speedValue.textContent = `${speedSlider.value}%`;
    isEnding = false;
    animate();
}

/**
 * Completely stops the simulation, cleans up all boids and state variables.
 */
function stopSimulation() {
    // 1. Stop the animation loop immediately.
    stopAnimation();

    // 2. Clean up all existing boid objects to prevent memory leaks.
    for (const boid of flock) {
        boid.destroy();
    }
    flock.length = 0;
    debugSelectedBoid = null;

    // 3. Clear the canvas.
    if (ctx) {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
    }

    // 4. Reset all simulation state variables to their defaults.
    isScattering = false;
    mouseInfluence = false;
    isEnding = false; // Ensure we aren't stuck in the shutdown animation state.
    godMode = false;
    setMenuVisibility(false);
    boidsIgnoreMouse = false;
    boidsIgnoreTouch = false;
    if (touchEndTimeoutId) {
        clearTimeout(touchEndTimeoutId);
        touchEndTimeoutId = null;
    }

    // 5. Reset simulation parameters to their initial values.
    resetSimulationParameters();
}

function startExitAnimation() {
    godMode = false;
    setMenuVisibility(false);
    if (!isEnding) {
        isEnding = true;
        endStartTime = performance.now();
    }
}

let lastFrameTime = 0;
//  Core Simulation Loop
function animate() {
    const currentTime = performance.now();
    if (!lastFrameTime) {
        lastFrameTime = currentTime;
    }
    // deltaTime is the time in milliseconds since the last frame
    let deltaTime = currentTime - lastFrameTime;
    lastFrameTime = currentTime;

    // This makes the simulation slow down if FPS drops below ~60 FPS, instead of stuttering wildly.
    // if (deltaTime > 17) {
    //     deltaTime = 17;
    // }

    // timeScale is our adjustment factor. At 60fps, it will be ~2.0. At 120fps, it will be ~1.0.
    const timeScale = (deltaTime / 1000) * TARGET_FPS;

    // THE HACK: The slider's value is now adjusted by the per-frame timeScale.
    const sliderValue = parseFloat(speedSlider.value) / 100;
    speedMultiplier = sliderValue * timeScale;

    if (typeof isDarkReaderActive === 'function' && isDarkReaderActive()) {
        ctx.fillStyle = 'rgba(18, 18, 18, 0.1)';
    } else {
        ctx.fillStyle = 'rgba(243, 244, 241, 0.25)';
    }
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    if (debugObstaclesMode) {
        for (const obstacle of allObstacles) {
            obstacle.drawDebug();
        }
    }

    if (debugGridMode) {
        drawGridVisualization(spatialGrid, ctx);
    }
    if (debugSelectedBoid) {
        drawNeighborhoodVisualization(debugSelectedBoid, spatialGrid, ctx);
    }

    if (isScattering) {
        scatter(HOLD_SCATTER_DURATION);
    }

    // --- Cleanup Phase for faded-out boids ---
    for (let i = flock.length - 1; i >= 0; i--) {
        const boid = flock[i];
        if (boid.isDying && (currentTime - boid.dyingStartTime > BOID_DYING_DURATION)) {
            boid.destroy();
            flock[i] = flock[flock.length - 1];
            flock.pop();
        }
    }


    // --- Main Simulation Update Order ---

    // 1. Update target flock size if in responsive mode.
    if (!userHasSetFlockSize && !isEnding) {
        updateResponsiveFlockSize();
    }

    // 2. Adjust the flock to the target size. This uses the grid populated in step 2.
    if (!isEnding) {
        adjustFlockToTargetSize();
    }


    // 3. Populate the grid with the current state of the flock.
    spatialGrid.clear();
    for (let boid of flock) {
        // Do not include dying boids in the spatial grid for flocking calculations
        if (!boid.isDying) {
            spatialGrid.addItemAtPoint(boid);
        }
    }



    const endProgress = isEnding ? Math.min(1, (currentTime - endStartTime) / END_ANIMATION_DURATION) : 0;
    if (isEnding) {
        const targetX = canvas.width - EASTER_EGG_RIGHT - EASTER_EGG_WIDTH / 2;
        const targetY = canvas.height + EASTER_EGG_BOTTOM - EASTER_EGG_HEIGHT / 2 - 10;
        const targetPosForEnding = vectorPool.get(targetX, targetY);

        for (let boid of flock) {
            // Lerp position towards the target
            boid.position.x += (targetPosForEnding.x - boid.position.x) * 0.1;
            boid.position.y += (targetPosForEnding.y - boid.position.y) * 0.1;

            // Shrink boids as they approach the end
            boid.size = (BOID_SIZE_BASE + boid.depth * BOID_SIZE_VARIATION) * (1 - endProgress);
            if (endProgress > 0.95 && Vector.dist(boid.position, targetPosForEnding) < 5) {
                boid.position.x = targetPosForEnding.x;
                boid.position.y = targetPosForEnding.y;
            }
            boid.renderSize = boid.calculateRenderSize();
            boid.draw(currentTime);
        }
        vectorPool.release(targetPosForEnding);
    } else {
        // 4. Main Simulation Loop (if not ending)
        for (let boid of flock) {
            // Dying boids don't need to calculate forces, they just fade out
            if (boid.isDying) continue;
            const localNeighbors = spatialGrid.getItemsInNeighborhood(boid.position);
            boid.calculateBoidAndMouseForces(localNeighbors, timeScale);
        }

        applyObstacleAvoidanceForces(timeScale);

        if (debugLinesMode) {
            drawBoidConnections();
        }

        for (let boid of flock) {
            boid.applyForcesAndMove(timeScale);
            boid.renderSize = boid.calculateRenderSize();
            boid.draw(currentTime);
        }
    }

    // --- Continue or Stop the Animation Loop ---
    if (isEnding && endProgress >= 1) {
        return; // Stop the loop
    }
    animationFrameId = requestAnimationFrame(animate);
}

// Simulation Sub-systems & Major Logic
/**
 * Applies obstacle avoidance forces using an obstacle-centric approach.
 * For each obstacle, it finds all boids within its influence radius and calculates
 * the necessary avoidance force, applying it directly to the boid's desiredVelocity.
 */
function applyObstacleAvoidanceForces(timeScale) {
    // --- Reusable temporary vectors for all calculations in this function ---
    const effectiveObsCenter = vectorPool.get(0, 0);
    const repulsionDirTemp = vectorPool.get(0, 0);
    const boidToEffectiveCenterTemp = vectorPool.get(0, 0);
    const closestPointOnEffectiveObstacleTemp = vectorPool.get(0, 0);
    const boidToClosestPointTemp = vectorPool.get(0, 0);
    const desiredSteerAwayTemp = vectorPool.get(0, 0);
    const currentToroidalForce = vectorPool.get(0, 0); // Holds the force for one toroidal image

    // --- 1. For each Obstacle -> ... ---
    for (const obstacle of allObstacles) {
        if (!obstacle.isEnabled || !obstacle.paddedBounds) continue;

        // --- 2. Find all nearby Boids -> ... ---
        // Define the search area around the obstacle, including its vision radius.
        const influenceRadius = simParams.OBSTACLE_RADIUS;
        const searchBounds = {
            left: obstacle.paddedBounds.left - influenceRadius,
            top: obstacle.paddedBounds.top - influenceRadius,
            right: obstacle.paddedBounds.right + influenceRadius,
            bottom: obstacle.paddedBounds.bottom + influenceRadius,
        };

        // Get the grid cells that this search area overlaps.
        const startCol = Math.max(0, Math.floor(searchBounds.left / spatialGrid.cellSize));
        const endCol = Math.min(spatialGrid.numCols - 1, Math.floor(searchBounds.right / spatialGrid.cellSize));
        const startRow = Math.max(0, Math.floor(searchBounds.top / spatialGrid.cellSize));
        const endRow = Math.min(spatialGrid.numRows - 1, Math.floor(searchBounds.bottom / spatialGrid.cellSize));

        // Collect a unique set of boids from those cells.
        const uniqueBoidsInArea = new Set();
        for (let row = startRow; row <= endRow; row++) {
            for (let col = startCol; col <= endCol; col++) {
                const cell = spatialGrid.grid[row][col];
                for (const boid of cell) {
                    uniqueBoidsInArea.add(boid);
                }
            }
        }

        // --- 3. For each nearby Boid, Calculate and apply force -> ... ---
        for (const boid of uniqueBoidsInArea) {
            if (boid.isDying) continue; // Dying boids don't avoid obstacles
            const dynamicMaxForce = boid.maxForce * timeScale;
            let bestForceForBoid = null; // Stores the single most critical force vector for this boid/obstacle pair
            let bestDistSqForBoid = Infinity;
            let bestTypeForBoid = null; // 'steer' or 'bounce'

            const boidRadius = boid.renderSize / 2;

            const margin = simParams.OBSTACLE_RADIUS + boidRadius;

            const boidIsFarFromEdges =
                boid.position.x > margin && boid.position.x < canvas.width - margin &&
                boid.position.y > margin && boid.position.y < canvas.height - margin;

            // If the boid is far from the edges, we only need to check the primary position (offset 0,0).
            // Otherwise, we check all 9 positions for a seamless wrap.
            const offsetsToCheck = boidIsFarFromEdges ? [EDGE_BUFFER_POSITIONS[0]] : EDGE_BUFFER_POSITIONS;

            // Check against all 9 toroidal images of the obstacle to find the most critical interaction.
            for (const offset of offsetsToCheck) {
                const offsetX = offset.dx * canvas.width;
                const offsetY = offset.dy * canvas.height;
                const effectiveObsPadded = {
                    left: obstacle.paddedBounds.left + offsetX,
                    top: obstacle.paddedBounds.top + offsetY,
                    right: obstacle.paddedBounds.right + offsetX,
                    bottom: obstacle.paddedBounds.bottom + offsetY,
                };
                effectiveObsCenter.set(obstacle.centerX + offsetX, obstacle.centerY + offsetY);
                currentToroidalForce.set(0, 0);
                let interactionType = null;
                let currentDistSq = Infinity;

                // --- This is the exact same calculation logic from your old `avoidObstacles` method ---
                const isOverlapping =
                    (boid.position.x + boidRadius > effectiveObsPadded.left) &&
                    (boid.position.x - boidRadius < effectiveObsPadded.right) &&
                    (boid.position.y + boidRadius > effectiveObsPadded.top) &&
                    (boid.position.y - boidRadius < effectiveObsPadded.bottom);

                if (isOverlapping) {
                    interactionType = 'bounce';
                    Vector.sub(boid.position, effectiveObsCenter, repulsionDirTemp);
                    if (repulsionDirTemp.magSq() === 0) Vector.random2D(repulsionDirTemp);

                    repulsionDirTemp.setMag(NORMAL_MAX_SPEED);

                    Vector.sub(repulsionDirTemp, boid.velocity, currentToroidalForce);
                    const bounceMultiplier = simParams.OBSTACLE_FORCE * OBSTACLE_BOUNCE_FORCE_MULTIPLIER;
                    currentToroidalForce.limit(dynamicMaxForce * bounceMultiplier);
                    Vector.sub(boid.position, effectiveObsCenter, boidToEffectiveCenterTemp);
                    currentDistSq = boidToEffectiveCenterTemp.magSq();
                } else {
                    const closestX = Math.max(effectiveObsPadded.left, Math.min(boid.position.x, effectiveObsPadded.right));
                    const closestY = Math.max(effectiveObsPadded.top, Math.min(boid.position.y, effectiveObsPadded.bottom));
                    closestPointOnEffectiveObstacleTemp.set(closestX, closestY);
                    Vector.sub(boid.position, closestPointOnEffectiveObstacleTemp, boidToClosestPointTemp);
                    currentDistSq = boidToClosestPointTemp.magSq();
                    const visionRadius = simParams.OBSTACLE_RADIUS + boidRadius;

                    if (currentDistSq < visionRadius ** 2) {
                        Vector.sub(boid.position, closestPointOnEffectiveObstacleTemp, desiredSteerAwayTemp);
                        if (desiredSteerAwayTemp.magSq() === 0) Vector.sub(boid.position, effectiveObsCenter, desiredSteerAwayTemp);
                        if (desiredSteerAwayTemp.magSq() > 0) {
                            interactionType = 'steer';
                            desiredSteerAwayTemp.setMag(boid.maxSpeed);
                            Vector.sub(desiredSteerAwayTemp, boid.velocity, currentToroidalForce);
                            const distance = Math.sqrt(currentDistSq);
                            const strength = 1 - (distance / visionRadius);
                            currentToroidalForce.mult(strength);
                            currentToroidalForce.limit(dynamicMaxForce * simParams.OBSTACLE_FORCE);
                        }
                    }
                }
                // --- End of ported logic ---

                // Determine if this interaction is more critical than any other found so far for this boid.
                if (interactionType) {
                    let updateBest = !bestTypeForBoid ||
                        (interactionType === 'bounce' && bestTypeForBoid === 'steer') ||
                        (interactionType === bestTypeForBoid && currentDistSq < bestDistSqForBoid);

                    if (updateBest) {
                        if (bestForceForBoid) vectorPool.release(bestForceForBoid);
                        bestForceForBoid = currentToroidalForce.copy();
                        bestDistSqForBoid = currentDistSq;
                        bestTypeForBoid = interactionType;
                    }
                }
            } // End of toroidal images loop

            // After checking all 9 images, if a best force was found, apply it to the boid.
            if (bestForceForBoid) {
                boid.desiredVelocity.add(bestForceForBoid);
                vectorPool.release(bestForceForBoid);
            }
        } // End of nearby boids loop
    } // End of obstacles loop

    // --- Release all temporary vectors at the end ---
    vectorPool.release(effectiveObsCenter);
    vectorPool.release(repulsionDirTemp);
    vectorPool.release(boidToEffectiveCenterTemp);
    vectorPool.release(closestPointOnEffectiveObstacleTemp);
    vectorPool.release(boidToClosestPointTemp);
    vectorPool.release(desiredSteerAwayTemp);
    vectorPool.release(currentToroidalForce);
}

function scatter(duration) {
    flock.forEach(boid => {
        if (Vector.dist(mouse, boid.position) < MOUSE_INFLUENCE_RADIUS) {
            boid.scatterState = 1;
            boid.cooldownTimer = duration;
        }
    });
}

// One-Time Setup & Lifecycle Management
/**
 * Performs the one-time setup for the entire boid system.
 * This should only ever be called once.
 */
async function _prepareEnvironment() {
    // Prevent this from ever running more than once.
    if (isSystemInitialized) return;

    try {
        await loadAndPrepareImage();
    } catch (error) {
        console.error("Could not prepare boid image:", error);
        return; // Stop if the image fails to load
    }

    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    spatialGrid = new SpatialGrid(canvas.width, canvas.height, calculateCurrentCellSize());
    initializeObstacles();
    updateAllObstacles();

    const initialDebugFlags = { grid: debugGridMode, obstacles: debugObstaclesMode, lines: debugLinesMode };
    initializeMenu(simParams, initialDebugFlags);
    setupMenuEventListeners();
    setupEventListeners();

    closeNavMenu();

    // Set the flag to true at the very end of a successful setup.
    isSystemInitialized = true;
    console.log("Boid system initialized for the first time.");
}

async function loadAndPrepareImage() {
    // 1. Fetch the image data as a blob
    const response = await fetch('../assets/images/boid-logo.webp');
    if (!response.ok) {
        throw new Error('Failed to fetch boid image');
    }
    const imageBlob = await response.blob();

    // 2. Decode the blob into an ImageBitmap
    boidImageBitmap = await createImageBitmap(imageBlob, {
        resizeWidth: 64,  // Set this to a reasonable max size for your boids
        resizeHeight: 64, // e.g., 64x64
        resizeQuality: 'high'
    });

    // console.log("Boid image is decoded and ready to render.");
}

function initializeObstacles() {
    allObstacles = OBSTACLE_ELEMENT_IDS.map(id => new Obstacle(id));
}

// Event Handlers
const mouseMoveHandler = (event) => {
    const rect = canvas.getBoundingClientRect();
    mouse.set(event.clientX - rect.left, event.clientY - rect.top);
    mouseInfluence = true;
};

const mouseLeaveHandler = () => {
    mouseInfluence = false;
    isScattering = false;
};

const mouseDownHandler = (event) => {
    if (boidsIgnoreMouse) {
        return;
    }
    if (event.button === 0 && !event.shiftKey) {
        isScattering = true;
        scatter(CLICK_SCATTER_DURATION);
    }
};

const mouseUpHandler = (event) => {
    if (event.button === 0) {
        isScattering = false;
    }
};

const touchStartHandler = (event) => {
    const experimentalMenu = document.getElementById('experimentalMenu');
    const easterEgg = document.getElementById('easterEgg');
    const navLinks = document.getElementById('navLinks');
    const hamburgerMenu = document.getElementById('hamburger-menu');
    const visualContainer = document.getElementById('visualContainer');
    const playerGrid = document.getElementById('playerGrid');
    const designGrid = document.getElementById('designGrid');
    const songsGrid = document.getElementById('songsGrid');
    const cvContent = document.getElementById('cvContent');
    const softwareContainer = document.getElementById('softwareContainer');
    const homeLink = document.getElementById('homeLink');
    const downloadPdfBtn = document.getElementById('downloadPdfBtn');
    const myModal = document.getElementById('myModal');
    const modalImage = document.getElementById('modalImage');

    const shouldBoidsIgnoreTouch = (easterEgg && easterEgg.contains(event.target)) ||
        (speedControls && speedControls.contains(event.target)) ||
        (experimentalMenu && experimentalMenu.contains(event.target)) ||
        (navLinks && navLinks.contains(event.target)) ||
        (hamburgerMenu && hamburgerMenu.contains(event.target)) ||
        (visualContainer && visualContainer.contains(event.target)) ||
        (playerGrid && playerGrid.contains(event.target)) ||
        (designGrid && designGrid.contains(event.target)) ||
        (songsGrid && songsGrid.contains(event.target)) ||
        (cvContent && cvContent.contains(event.target)) ||
        (softwareContainer && softwareContainer.contains(event.target)) ||
        (homeLink && homeLink.contains(event.target)) ||
        (downloadPdfBtn && downloadPdfBtn.contains(event.target)) ||
        (myModal && myModal.contains(event.target)) ||
        (modalImage && modalImage.contains(event.target));

    boidsIgnoreTouch = shouldBoidsIgnoreTouch;

    if (isEnding || boidsIgnoreTouch) {
        mouseInfluence = false;
        return;
    }
    boidsIgnoreMouse = false;
    event.preventDefault();
    const rect = canvas.getBoundingClientRect();
    mouse.set(event.touches[0].clientX - rect.left, event.touches[0].clientY - rect.top);
    mouseInfluence = true;
    isScattering = true;
    scatter(CLICK_SCATTER_DURATION);

    if (touchEndTimeoutId) {
        clearTimeout(touchEndTimeoutId);
        touchEndTimeoutId = null;
    }
};

const touchMoveHandler = (event) => {
    if (isEnding || boidsIgnoreTouch) {
        mouseInfluence = false;
        return;
    }
    event.preventDefault();
    const rect = canvas.getBoundingClientRect();
    mouse.set(event.touches[0].clientX - rect.left, event.touches[0].clientY - rect.top);
    mouseInfluence = true;

    if (touchEndTimeoutId) {
        clearTimeout(touchEndTimeoutId);
        touchEndTimeoutId = null;
    }
};

const touchEndHandler = () => {
    isScattering = false;
    boidsIgnoreTouch = false;

    if (touchEndTimeoutId) {
        clearTimeout(touchEndTimeoutId);
    }

    touchEndTimeoutId = setTimeout(() => {
        mouseInfluence = false;
        touchEndTimeoutId = null;
    }, 100);
};

const resizeHandler = () => {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    if (spatialGrid) {
        spatialGrid.resize(canvas.width, canvas.height);
    }
    updateAllObstacles();
    // If simulation is running and in responsive mode, update the target flock size.
    if (animationFrameId && !userHasSetFlockSize) {
        updateResponsiveFlockSize();
    }
};



const throttledScrollUpdater = rafThrottle(performScrollUpdates);

const speedSliderInputHandler = function () {
    speedMultiplier = (this.value / 100);
    speedValue.textContent = `${this.value}%`;
};

const speedControlsMouseEnterHandler = () => {
    boidsIgnoreMouse = true;
};

const speedControlsMouseLeaveHandler = () => {
    boidsIgnoreMouse = false;
};

const iframeMouseEnterHandler = () => {
    boidsIgnoreMouse = true;
};

const iframeMouseLeaveHandler = () => {
    boidsIgnoreMouse = false;
};

const documentClickHandler = (event) => {
    if (!event.shiftKey || !debugGridMode) {
        if (!debugGridMode) {
            debugSelectedBoid = null;
        }
        return;
    }

    const experimentalMenu = document.getElementById('experimentalMenu');
    if (boidsIgnoreMouse || (experimentalMenu && experimentalMenu.contains(event.target) && godMode)) {
        return;
    }

    const rect = canvas.getBoundingClientRect();
    const clickX = event.clientX - rect.left;
    const clickY = event.clientY - rect.top;

    let closestBoid = null;
    let minDistSq = Infinity;

    for (const boid of flock) {
        const distSq = (boid.position.x - clickX) ** 2 + (boid.position.y - clickY) ** 2;
        if (distSq < minDistSq && distSq < (boid.renderSize * 2) ** 2) {
            minDistSq = distSq;
            closestBoid = boid;
        }
    }
    debugSelectedBoid = closestBoid;
};

const godModeButtonClickHandler = () => {
    const newGodModeState = !godMode;
    const event = new CustomEvent('godModeToggled', {
        detail: { enabled: newGodModeState },
        bubbles: true,
        composed: true
    });
    document.body.dispatchEvent(event);
    console.log("God Mode:", godMode);
};

// State & Event Management
function setupAppLifecycleListeners() {
    window.addEventListener('pageshow', (event) => {
        // This event fires on every page load, including back-button navigation.
        if (event.persisted) {
            mouseInfluence = false;
            // console.log("Page restored from back-forward cache. Resetting UI state.");
            godMode = false;

            setMenuVisibility(false, { animated: false });

            if (typeof window.resetEasterEggState === 'function') {
                window.resetEasterEggState();
            }

            // Dispatch event to sync the God Mode button's state (good practice)
            const customEvent = new CustomEvent('godModeToggled', {
                detail: { enabled: false },
                bubbles: true,
                composed: true
            });
            document.body.dispatchEvent(customEvent);


            const pageMode = document.body.dataset.pageMode;

            // Only tear down the main simulation UI if we are NOT on the permanent page.
            if (pageMode !== 'permanent-sim') {
                stopSimulation();
                // console.log("Standard page detected. Hiding main simulation UI.");

                if (window.setControlsVisibility) {
                    window.setControlsVisibility(false, { animated: false });
                }

                // Instantly hide the canvas
                const boidCanvas = document.getElementById('boidCanvas');
                if (boidCanvas) {
                    boidCanvas.style.transition = 'none';
                    boidCanvas.style.opacity = '0';
                    boidCanvas.style.display = 'none';
                    setTimeout(() => boidCanvas.style.transition = '', 20);
                }
            } else {
                // console.log("Permanent simulation page detected. Controls and canvas will remain visible.");
            }
        }
    });
}

function setupEventListeners() {
    document.removeEventListener('mousemove', mouseMoveHandler);
    document.removeEventListener('mouseleave', mouseLeaveHandler);
    document.removeEventListener('mousedown', mouseDownHandler);
    document.removeEventListener('mouseup', mouseUpHandler);
    document.removeEventListener('touchstart', touchStartHandler);
    document.removeEventListener('touchmove', touchMoveHandler);
    document.removeEventListener('touchend', touchEndHandler);
    window.removeEventListener('resize', resizeHandler);
    document.removeEventListener('click', documentClickHandler);
    document.body.removeEventListener('scroll', throttledScrollUpdater);

    if (speedSlider) {
        speedSlider.removeEventListener('input', speedSliderInputHandler);
    }
    if (speedControls) {
        speedControls.removeEventListener('mouseenter', speedControlsMouseEnterHandler);
        speedControls.removeEventListener('mouseleave', speedControlsMouseLeaveHandler);
    }
    if (godModeButton) {
        godModeButton.removeEventListener('click', godModeButtonClickHandler);
    }

    const iframes = document.querySelectorAll('iframe');
    iframes.forEach(iframe => {
        iframe.removeEventListener('mouseenter', iframeMouseEnterHandler);
        iframe.removeEventListener('mouseleave', iframeMouseLeaveHandler);
    });

    document.addEventListener('mousemove', mouseMoveHandler);
    document.addEventListener('mouseleave', mouseLeaveHandler);
    document.addEventListener('mousedown', mouseDownHandler);
    document.addEventListener('mouseup', mouseUpHandler);
    document.addEventListener('touchstart', touchStartHandler, { passive: false });
    document.addEventListener('touchmove', touchMoveHandler, { passive: false });
    document.addEventListener('touchend', touchEndHandler);
    window.addEventListener('resize', resizeHandler);
    document.addEventListener('click', documentClickHandler);
    document.body.addEventListener('scroll', throttledScrollUpdater, { passive: true });

    if (speedSlider) {
        speedSlider.addEventListener('input', speedSliderInputHandler);
    }
    if (speedControls) {
        speedControls.addEventListener('mouseenter', speedControlsMouseEnterHandler);
        speedControls.addEventListener('mouseleave', speedControlsMouseLeaveHandler);
    }
    if (godModeButton) {
        godModeButton.addEventListener('click', godModeButtonClickHandler);
    }

    iframes.forEach(iframe => {
        iframe.addEventListener('mouseenter', iframeMouseEnterHandler);
        iframe.addEventListener('mouseleave', iframeMouseLeaveHandler);
    });
}

function setupMenuEventListeners() {
    document.body.addEventListener('godModeToggled', (e) => {
        godMode = e.detail.enabled;
        setMenuVisibility(godMode);
        console.log("God Mode:", godMode);
    });

    document.body.addEventListener('paramChanged', (e) => {
        const { key, value } = e.detail;
        if (simParams.hasOwnProperty(key)) {
            simParams[key] = value;
            if (key.includes('RADIUS')) {
                updateSpatialGridParameters();
            }
            // If the user manually changes flock size via the menu, set the flag.
            if (key === 'FLOCK_SIZE') {
                userHasSetFlockSize = true;
            }
        }
    });

    document.body.addEventListener('debugFlagChanged', (e) => {
        const { flag, enabled } = e.detail;
        if (flag === 'grid') {
            debugGridMode = enabled;
            if (!enabled) debugSelectedBoid = null;
        } else if (flag === 'obstacles') {
            debugObstaclesMode = enabled;
        } else if (flag === 'lines') {
            debugLinesMode = enabled;
        }
    });

    document.body.addEventListener('paramsReset', resetSimulationParameters);


    // Handles mouse entering/leaving the menu itself
    document.body.addEventListener('menuInteraction', (e) => {
        boidsIgnoreMouse = e.detail.hovering;
        console.log("Boids ignore mouse:", boidsIgnoreMouse);
    });

    document.body.addEventListener('layoutChanged', throttledScrollUpdater);
}

function updateAllObstacles() {
    for (const obstacle of allObstacles) {
        obstacle.update();
    }
}

function performScrollUpdates() {
    updateAllObstacles();
}

function resetSimulationParameters() {
    simParams = { ...defaultSimParams }; // Reset to defaults
    userHasSetFlockSize = false;         // Allow responsive flock size again.
    updateSpatialGridParameters();      // Update dependent systems (grid)
    updateMenuValues(simParams);        // Update UI to reflect the reset
    debugGridMode = false;
    debugObstaclesMode = false;
    debugLinesMode = false;
    updateDebugCheckboxes({
        grid: debugGridMode,
        obstacles: debugObstaclesMode,
        lines: debugLinesMode
    });
}

// Utility & Helper Functions
function stopAnimation() {
    if (animationFrameId) {
        cancelAnimationFrame(animationFrameId);
        animationFrameId = null;
    }
}

function rafThrottle(callback) {
    let requestId = null;
    let lastArgs = []; // To store the latest arguments if needed, though scroll usually doesn't have important args

    const later = (context) => () => {
        requestId = null;
        callback.apply(context, lastArgs);
    };

    const throttled = function (...args) {
        lastArgs = args; // Store the latest arguments
        if (requestId === null) {
            requestId = requestAnimationFrame(later(this));
        }
    };

    throttled.cancel = () => {
        if (requestId !== null) {
            cancelAnimationFrame(requestId);
            requestId = null;
        }
    };
    return throttled;
}

// Debugging Functions
function drawGridVisualization(gridInstance, ctx) {
    if (!gridInstance) return;
    ctx.strokeStyle = 'rgba(128, 128, 128, 0.3)';
    ctx.lineWidth = 0.5;

    for (let i = 0; i <= gridInstance.numCols; i++) {
        ctx.beginPath();
        ctx.moveTo(i * gridInstance.cellSize, 0);
        ctx.lineTo(i * gridInstance.cellSize, canvas.height);
        ctx.stroke();
    }
    for (let i = 0; i <= gridInstance.numRows; i++) {
        ctx.beginPath();
        ctx.moveTo(0, i * gridInstance.cellSize);
        ctx.lineTo(canvas.width, i * gridInstance.cellSize);
        ctx.stroke();
    }
}

function drawNeighborhoodVisualization(boid, gridInstance, ctx) {
    if (!boid || !gridInstance) return;

    const { col: boidCol, row: boidRow } = gridInstance._getCellCoords(boid.position);

    ctx.fillStyle = 'rgba(0, 255, 0, 0.05)';
    for (let rOffset = -1; rOffset <= 1; rOffset++) {
        for (let cOffset = -1; cOffset <= 1; cOffset++) {
            let neighborRow = boidRow + rOffset;
            let neighborCol = boidCol + cOffset;
            const actualRow = (neighborRow + gridInstance.numRows) % gridInstance.numRows;
            const actualCol = (neighborCol + gridInstance.numCols) % gridInstance.numCols;
            ctx.fillRect(actualCol * gridInstance.cellSize, actualRow * gridInstance.cellSize, gridInstance.cellSize, gridInstance.cellSize);
        }
    }

    const localNeighbors = gridInstance.getItemsInNeighborhood(boid.position);
    ctx.strokeStyle = 'rgba(255, 0, 0, 0.3)';
    ctx.lineWidth = 1;
    for (const other of localNeighbors) {
        if (other === boid) continue;
        const distanceToOther = Vector.dist(boid.position, other.position);
        if (distanceToOther <= CELL_SIZE) {
            ctx.beginPath();
            ctx.moveTo(boid.position.x, boid.position.y);
            ctx.lineTo(other.position.x, other.position.y);
            ctx.stroke();
        }
    }
    ctx.beginPath();
    ctx.arc(boid.position.x, boid.position.y, boid.renderSize / 2 + 5, 0, Math.PI * 2);
    ctx.strokeStyle = 'rgba(255, 255, 0, 0.8)';
    ctx.lineWidth = 2;
    ctx.stroke();
}



// Expose functions to global scope if they are called from HTML
window.startSimulation = startSimulation;
window.stopSimulation = stopSimulation;
window.startExitAnimation = startExitAnimation;
setupAppLifecycleListeners();


---
/Users/lachie/Documents/coding/website/assets/js/design.js
---
// Config
var imagePaths = [
    '../assets/images/posters/experiment.jpg',
    '../assets/images/posters/psy.jpg',
    '../assets/images/posters/womp.jpg',
    '../assets/images/posters/southerly.jpg',
];

// Create an element with class name
function createElementWithClass(tag, className) {
    var element = document.createElement(tag);
    element.className = className;
    return element;
}

// Create an image element
function createImageElement(src) {
    var img = document.createElement('img');
    img.style.cssText = 'width: 100%; height: 100%; object-fit: cover;';
    img.src = src;
    img.alt = "Design Poster";
    img.classList.add('modal-trigger', 'cursor-pointer', 'rounded-xl');
    img.loading = 'lazy';
    return img;
}

// Create common elements for the image
function createImageWrapper(src) {
    var wrapperDiv = createElementWithClass('div', 'image-wrapper');
    var img = createImageElement(src);
    wrapperDiv.appendChild(img);
    return wrapperDiv;
}

// Add all images to the grid
function populateGrid() {
    var grid = document.getElementById('imageGrid');
    if (!grid) {
        console.error("Element with ID 'imageGrid' not found.");
        return;
    }
    imagePaths.forEach(function (src) {
        grid.appendChild(createImageWrapper(src));
    });
}

window.addEventListener('DOMContentLoaded', function () {
    populateGrid();
});

---
/Users/lachie/Documents/coding/website/assets/js/easter-egg.js
---
/**
 * Controls the visibility of the main boid controls (speed slider).
 * @param {boolean} isVisible - Whether the controls should be visible.
 * @param {object} [options={}] - An options object.
 * @param {boolean} [options.animated=true] - If false, the change happens instantly.
 */
function setControlsVisibility(isVisible, options = {}) {
    const { animated = true } = options;
    const controls = document.getElementById('controls');
    if (!controls) return;

    // The duration of the fade animation, consistent with your original code.
    const ANIMATION_DURATION = 1000;

    if (isVisible) {
        // --- SHOW LOGIC ---
        controls.style.display = 'flex';

        if (animated) {
            // Use a tiny delay to ensure the 'display' change is rendered
            // before the opacity transition begins.
            setTimeout(() => {
                controls.style.opacity = '1';
            }, 50);
        } else {
            // Instantly set opacity to 1.
            controls.style.opacity = '1';
        }

    } else {
        // --- HIDE LOGIC ---
        if (animated) {
            controls.style.opacity = '0';
            // Wait for the transition to finish before setting display to none.
            setTimeout(() => {
                controls.style.display = 'none';
            }, ANIMATION_DURATION);
        } else {
            // The instant-hide trick:
            // 1. Temporarily disable CSS transitions on the element.
            controls.style.transition = 'none';

            // 2. Apply the final hidden state. It will happen immediately.
            controls.style.opacity = '0';
            controls.style.display = 'none';

            // 3. Re-enable transitions after a tiny delay, so they work next time.
            setTimeout(() => {
                controls.style.transition = ''; // Resets to the CSS-defined value
            }, 20);
        }
    }
}

function setupEasterEgg() {
    const easterEgg = document.getElementById('easterEgg');
    const boidCanvas = document.getElementById('boidCanvas');
    let tapCount = 0;
    let canIncrement = true;
    let currentScale = 1; // Logical current scale
    let isAnimating = false; // Main animation lock

    // Shared state for transform properties
    let activeTransformState = {
        x: 0,
        y: 0,
        scale: currentScale,
        rotate: 0
    };

    function resetEasterEggState() {
        console.log("Resetting Easter Egg state to default.");
        tapCount = 0;
        currentScale = 1;
        canIncrement = true;
        isAnimating = false;

        // Reset the logical state for transformations
        activeTransformState = { x: 0, y: 0, scale: 1, rotate: 0 };

        // Also reset the actual visual style of the element instantly.
        if (easterEgg) {
            // By setting the transform to an empty string, we remove any inline
            // styles and let it revert to its stylesheet definition.
            easterEgg.style.transform = '';
        }
    }

    window.setControlsVisibility = setControlsVisibility;
    window.resetEasterEggState = resetEasterEggState;

    function applyCurrentTransform() {
        easterEgg.style.transform = `translateY(${activeTransformState.y}px) translateX(${activeTransformState.x}px) scale(${activeTransformState.scale}) rotate(${activeTransformState.rotate}deg)`;
    }

    if (easterEgg) {
        function animate(direction) {
            if (isAnimating) return;
            isAnimating = true;
            activeTransformState.x = 0;
            activeTransformState.rotate = 0;

            const startTime = performance.now();
            const duration = 500;
            const baseDistance = 20;

            let scaleForBounceDepthCalculation = currentScale;
            let visualScaleDuringCurrentAnimation = currentScale;

            if (direction === 'down') {
                visualScaleDuringCurrentAnimation = currentScale;
                if (tapCount === 1) scaleForBounceDepthCalculation = 1.3;
                else if (tapCount === 2) scaleForBounceDepthCalculation = 1.5;
                else if (tapCount === 3) scaleForBounceDepthCalculation = 1.8;
            } else {
                scaleForBounceDepthCalculation = currentScale;
                visualScaleDuringCurrentAnimation = currentScale;
            }

            const scaledDistance = baseDistance * scaleForBounceDepthCalculation;
            const startPosition = direction === 'down' ? 0 : scaledDistance;
            const endPosition = direction === 'down' ? scaledDistance : 0;

            activeTransformState.scale = visualScaleDuringCurrentAnimation;
            activeTransformState.y = startPosition;
            applyCurrentTransform();

            function step(currentTime) {
                const elapsed = currentTime - startTime;
                const progress = Math.min(elapsed / duration, 1);
                const easeProgress = easeInOutElastic(progress);

                activeTransformState.y = startPosition + (endPosition - startPosition) * easeProgress;
                activeTransformState.scale = visualScaleDuringCurrentAnimation;
                applyCurrentTransform();

                if (progress < 1) {
                    requestAnimationFrame(step);
                } else {
                    isAnimating = false;
                    if (direction === 'down') {
                        if (tapCount === 1) currentScale = 1.3;
                        else if (tapCount === 2) currentScale = 1.5;
                        else if (tapCount === 3) currentScale = 1.8;

                        activeTransformState.scale = currentScale;
                        activeTransformState.y = endPosition;
                        applyCurrentTransform();
                        setTimeout(() => animate('up'), 20);
                    } else if (direction === 'up') {
                        if (tapCount === 3) {
                            animateWiggle();
                            animateScaleToNormal(() => {
                                canIncrement = true;
                            });
                        } else {
                            canIncrement = true;
                        }
                        activeTransformState.y = 0;


                        applyCurrentTransform();
                    }
                }
            }
            requestAnimationFrame(step);
        }

        function animateScaleToNormal(onCompleteCallback) {
            isAnimating = true;
            activeTransformState.x = 0;
            activeTransformState.y = 0;
            activeTransformState.rotate = 0;

            const startTime = performance.now();
            const duration = 1000;
            const startScale = currentScale;
            const endScale = 1;

            activeTransformState.scale = startScale;
            applyCurrentTransform();

            function scaleStep(currentTime) {
                const elapsed = currentTime - startTime;
                const progress = Math.min(elapsed / duration, 1);
                const easeProgress = 1 - Math.pow(1 - progress, 3);

                activeTransformState.scale = startScale + (endScale - startScale) * easeProgress;
                applyCurrentTransform();

                if (progress < 1) {
                    requestAnimationFrame(scaleStep);
                } else {
                    currentScale = 1;
                    activeTransformState.scale = 1;
                    activeTransformState.rotate = 0;
                    applyCurrentTransform();
                    isAnimating = false;
                    if (onCompleteCallback) {
                        onCompleteCallback();
                    }
                }
            }
            requestAnimationFrame(scaleStep);
        }

        function animateWiggle(onCompleteCallback) {
            if (animateWiggle.isRunning) return;
            animateWiggle.isRunning = true;

            const startTime = performance.now();
            const duration = 450;
            const numWiggles = 4;
            const wiggleFrequency = (2 * Math.PI * numWiggles) / duration;
            const amplitude = 1;
            const rotateAmplitude = 3;

            function wiggleStep(currentTime) {
                const elapsed = currentTime - startTime;
                let progress = elapsed / duration;

                if (progress >= 1) {
                    activeTransformState.x = 0;
                    activeTransformState.rotate = 0;
                    applyCurrentTransform();
                    animateWiggle.isRunning = false;
                    if (onCompleteCallback) onCompleteCallback();
                    return;
                }

                const currentXAmplitude = amplitude * (1 - progress); // Dampen X wiggle
                const xOffset = currentXAmplitude * Math.sin(elapsed * wiggleFrequency);

                const currentRotateAmplitude = rotateAmplitude * (1 - progress);
                const rotationOffset = currentRotateAmplitude * Math.sin(elapsed * wiggleFrequency);
                // const rotationOffset = currentRotateAmplitude * Math.cos(elapsed * wiggleFrequency); // Alternative

                activeTransformState.x = xOffset;
                activeTransformState.rotate = rotationOffset;
                applyCurrentTransform();

                requestAnimationFrame(wiggleStep);
            }
            requestAnimationFrame(wiggleStep);
        }
        animateWiggle.isRunning = false;


        function animateGrowAndShrink(onCompleteCallback) {
            if (isAnimating) return;
            isAnimating = true;

            const growDuration = 200;
            const shrinkDuration = 250;
            const targetScaleFactor = 1.8;
            const initialAnimScale = currentScale;
            const peakScale = initialAnimScale * targetScaleFactor;

            activeTransformState.y = 0;
            activeTransformState.scale = initialAnimScale;
            applyCurrentTransform();


            const growStartTime = performance.now();
            function growStep(currentTime) {
                const elapsed = currentTime - growStartTime;
                const progress = Math.min(elapsed / growDuration, 1);
                const easeProgress = 1 - Math.pow(1 - progress, 3);

                activeTransformState.scale = initialAnimScale + (peakScale - initialAnimScale) * easeProgress;
                applyCurrentTransform();

                if (progress < 1) {
                    requestAnimationFrame(growStep);
                } else {
                    const shrinkStartTime = performance.now();
                    function shrinkStep(currentTimeShrink) {
                        const elapsedShrink = currentTimeShrink - shrinkStartTime;
                        const progressShrink = Math.min(elapsedShrink / shrinkDuration, 1);
                        const easeProgressShrink = 1 - Math.pow(1 - progressShrink, 3);

                        activeTransformState.scale = peakScale + (initialAnimScale - peakScale) * easeProgressShrink;
                        applyCurrentTransform();

                        if (progressShrink < 1) {
                            requestAnimationFrame(shrinkStep);
                        } else {
                            currentScale = initialAnimScale;
                            activeTransformState.scale = initialAnimScale;
                            if (!animateWiggle.isRunning) {
                                activeTransformState.x = 0;
                                activeTransformState.rotate = 0;
                            }
                            applyCurrentTransform();

                            isAnimating = false;
                            if (onCompleteCallback) onCompleteCallback();
                        }
                    }
                    requestAnimationFrame(shrinkStep);
                }
            }
            requestAnimationFrame(growStep);
        }


        easterEgg.addEventListener('click', () => {
            // No change needed for this initial section.
            if (!canIncrement) return;
            canIncrement = false;
            tapCount++;
            activeTransformState.scale = currentScale;
            activeTransformState.x = 0;
            activeTransformState.y = 0;
            activeTransformState.rotate = 0;
            applyCurrentTransform();

            // --- HIDING LOGIC (Tap 4) ---
            // Refactored to use the new function and preserve staggered timing.
            if (tapCount === 4) {
                // These animations for the egg itself start immediately.
                activeTransformState.scale = currentScale;
                activeTransformState.y = 0;
                activeTransformState.x = 0;
                activeTransformState.rotate = 0;
                applyCurrentTransform();
                animateWiggle(() => { /* Wiggle finished */ });
                animateGrowAndShrink(() => {
                    tapCount = 0;
                    canIncrement = true;
                });

                // The simulation's own exit animation also starts immediately.
                if (typeof window.startExitAnimation === 'function') {
                    window.startExitAnimation();
                }

                // REFACTOR: Start the fade-out of background elements after a 50ms delay.
                setTimeout(() => {
                    // Call our new, clean function to hide the controls with animation.
                    setControlsVisibility(false);

                    // Start the canvas fade-out at the same time.
                    if (boidCanvas) boidCanvas.style.opacity = '0';
                }, 50);

                // REFACTOR: Schedule the final cleanup to run after the 1000ms animation completes.
                setTimeout(() => {
                    if (boidCanvas) boidCanvas.style.display = 'none';
                    // Note: setControlsVisibility handles its own display change, no need to repeat.
                    document.body.classList.remove('boid-active');
                    if (typeof window.stopSimulation === 'function') {
                        window.stopSimulation();
                    }
                }, 1050); // 50ms delay + 1000ms animation = 1050ms total time.

            }
            // No change needed for this block.
            else if (tapCount === 5) {
                tapCount = 1;
                animate('down');
            }
            // --- BUILD-UP & SHOWING LOGIC (Taps 1-3) ---
            else if (tapCount >= 1 && tapCount <= 3) {
                // This runs on taps 1, 2, and 3.
                animate('down');

                // This nested block ONLY runs on the 3rd tap to reveal the simulation.
                if (tapCount === 3) {
                    // The original timing chain is preserved for the desired visual effect.
                    setTimeout(() => {
                        if (boidCanvas) {
                            boidCanvas.style.display = 'block';
                            boidCanvas.style.opacity = '0';
                        }
                        setTimeout(() => {
                            if (boidCanvas) boidCanvas.style.opacity = '1';
                            document.body.classList.add('boid-active');

                            // REFACTOR: The complex logic for showing the controls is now one function call.
                            // This is scheduled after a 500ms delay to let the canvas appear first.
                            setTimeout(() => {
                                // Show the controls with the default fade-in animation.
                                setControlsVisibility(true);

                                // Initialize the simulation and slider as the controls are fading in.
                                if (typeof initializeSlider === 'function') initializeSlider('speedSlider', 'speedValue', '%');
                                if (typeof startSimulation === 'function') startSimulation();
                            }, 500);
                        }, 50);
                    }, 500);
                }
            }
            // No change needed for this final reset block.
            else {
                resetEasterEggState();
            }
        });
    }
}

document.addEventListener('DOMContentLoaded', setupEasterEgg);

/**
 * @param {string} sliderId - The ID of the slider element
 * @param {string} [displayId] - Optional ID of element to show the value
 * @param {string} [suffix='%'] - Suffix to add to displayed value
 */
function initializeSlider(sliderId, displayId = null, suffix = '%') {
    const slider = document.getElementById(sliderId);
    const display = displayId ? document.getElementById(displayId) : null;

    if (!slider) {
        console.warn(`Slider with ID '${sliderId}' not found`);
        return;
    }

    const sliderInputHandlerKey = `_sliderInputHandler_${sliderId}`;

    if (slider[sliderInputHandlerKey]) {
        slider.removeEventListener('input', slider[sliderInputHandlerKey]);
    }

    const updateSliderHandler = function () {
        const value = parseFloat(slider.value);

        updateSliderFill(slider);

        if (display) {
            const step = slider.step;
            if (step && step.includes('.')) {
                const precision = step.split('.')[1].length;
                display.textContent = value.toFixed(precision) + suffix;
            } else {
                display.textContent = value + suffix;
            }
        }
    };

    slider[sliderInputHandlerKey] = updateSliderHandler;
    slider.addEventListener('input', slider[sliderInputHandlerKey]);

    updateSliderHandler();

    if (typeof enableSliderWheelControl === 'function') {
        enableSliderWheelControl(slider);
    }
}

var easterEggElement = document.getElementById('easterEgg');

if (easterEggElement) {
    function preloadImages() {
        const normalImg = new Image();
        const hoverImg = new Image();

        normalImg.src = getLogoPath('home.webp');
        hoverImg.src = getLogoPath('home-hover.webp');
    }
    preloadImages();

    easterEggElement.addEventListener('mousedown', function () {
        easterEggElement.classList.add('easter-egg--clicked');
    });

    easterEggElement.addEventListener('mouseup', function () {
        setTimeout(function () {
            easterEggElement.classList.remove('easter-egg--clicked');
        }, 25);
    });
}

---
/Users/lachie/Documents/coding/website/assets/js/mastering.js
---
// Config
var linkColor = '63b2cc';

var links = [
    {
        name: 'Young Gho$t - Lost Time',
        credits: 'Credits: Mastering',
        date: '2025-09-08',
        id: 'album=2709497462',
        url: 'https://youngghost.bandcamp.com/album/lost-time',
        type: 'bandcamp',
    },
    {
        name: 'Weka Tek x Te Manu - Tūroa',
        credits: 'Credits: Mastering',
        date: '2024-12-20',
        id: 'album=3139597693',
        url: 'https://teethandtail.bandcamp.com/album/t-roa',
        type: 'bandcamp',
    },
    {
        name: 'Stems - Grains Remixed',
        credits: 'Credits: Contributor, Mastering',
        date: '2024-12-13',
        id: 'album=2113246421',
        url: 'https://grainsnz.bandcamp.com/album/stems-grains-remixed',
        type: 'bandcamp',
        isVariousArtists: true,
    },
    {
        name: 'Büka - Bitches Cauldron',
        credits: 'Credits: Mastering',
        date: '2024-11-27',
        id: 'album=816268342',
        url: 'https://bukabass.bandcamp.com/album/bitches-cauldron',
        type: 'bandcamp',
    },
    {
        name: 'Sauin - Wharariki',
        credits: 'Credits: Co-Mixing, Mastering',
        date: '2024-09-06',
        id: 'album=4246940979',
        url: 'https://teethandtail.bandcamp.com/album/wharariki',
        type: 'bandcamp',
    },
    {
        name: 'Necropolis - Prophecy Of Ruin',
        credits: 'Credits: Mixing, Mastering',
        date: '2024-09-06',
        id: 'album=788398486',
        url: 'https://necropolis-siege.bandcamp.com/album/prophecy-of-ruin',
        type: 'bandcamp',
    },
    {
        name: 'B​ü​ka - B​ü​ka',
        credits: 'Credits: Mastering',
        date: '2024-06-02',
        id: 'album=940964128',
        url: 'https://bukabass.bandcamp.com/album/b-ka',
        type: 'bandcamp',
    },
    {
        name: 'Nomali - Dubcore',
        credits: 'Credits: Mastering',
        date: '2024-05-03',
        id: 'album=4108014993',
        url: 'https://post-modernmusic.bandcamp.com/album/dubcore',
        type: 'bandcamp',
    },
    {
        name: 'bobby mayo - Axolotl',
        credits: 'Credits: Mastering',
        date: '2024-03-08', id: 'spotify:track:32GAT5y3WYNpvBHAaRk8XU',
        url: 'https://open.spotify.com/track/32GAT5y3WYNpvBHAaRk8XU?si=799e38d2744e410c',
        type: 'spotify',
    },
    {
        name: 'Teeth and Tail - Air [TNT001]',
        credits: 'Credits: Mastering',
        date: '2024-03-01',
        id: 'album=3993366517',
        url: 'https://teethandtail.bandcamp.com/album/air-tnt001',
        type: 'bandcamp', isVariousArtists: true,
    },
    {
        name: 'Zero Plussed - Zero Plussed plates',
        credits: 'Credits: Mastering',
        date: '2024-02-10',
        id: 'playlists/1754058492',
        url: 'https://soundcloud.com/commander_zeroplussed/sets/zero-plussed-plates',
        type: 'soundcloud',
    },
    {
        name: 'Lü Ka - Burning Bedroom',
        credits: 'Credits: Mastering',
        date: '2023-12-08',
        id: 'album=4074789862',
        url: 'https://lukaplays.bandcamp.com/album/burning-bedroom',
        type: 'bandcamp',
    },
    {
        name: 'bobby mayo - Funk It Up',
        credits: 'Credits: Mastering',
        date: '2023-12-01',
        id: 'spotify:track:5GBzndCuV6kqYZQm3DY78x',
        url: 'https://open.spotify.com/track/5GBzndCuV6kqYZQm3DY78x?si=c8807b5c19734774',
        type: 'spotify',
    },
    {
        name: 'ACOLDPLACE - ACP 2.1',
        credits: 'Credits: Contributor, Mastering',
        date: '2023-12-01',
        id: 'album=1188484858',
        url: 'https://acoldplace.bandcamp.com/album/acp-21',
        type: 'bandcamp',
        isVariousArtists: true,
    },
    {
        name: 'xtopher - FOR PSY-IENCE',
        credits: 'Credits: Mastering',
        date: '2023-11-29',
        id: 'album=79054116',
        url: 'https://xtopher69.bandcamp.com/album/for-psy-ience-ep',
        type: 'bandcamp',
    },
    {
        name: 'Sound Salad - Lettuce Begin',
        credits: 'Credits: Mastering',
        date: '2023-11-03',
        id: 'playlists/1717724526',
        url: 'https://soundcloud.com/sound-salad-225675916/sets/lettuce-begin-ep',
        type: 'soundcloud',
    },
    {
        name: 'bobby mayo - Dance Attack!',
        credits: 'Credits: Mastering',
        date: '2023-09-29',
        id: 'spotify:track:45qXRq6fkLxcA8i7N7PnDO',
        url: 'https://open.spotify.com/track/45qXRq6fkLxcA8i7N7PnDO?si=2dacfa4254eb4948',
        type: 'spotify',
    },
    // {
    //     name: 'LŪNA - Funk',
    //     credits: 'Credits: Mastering',
    //     date: '2023-08-30',
    //     id: 'tracks/1603868022',
    //     url: 'https://soundcloud.com/lunanz/funk',
    //     type: 'soundcloud',
    // },
    {
        name: 'Khz Collective - Various Artists: Vol. 2',
        credits: 'Credits: Mastering',
        date: '2023-08-25',
        id: 'album=1182416007',
        url: 'https://khzcollective.bandcamp.com/album/various-artists-vol-2',
        type: 'bandcamp',
        isVariousArtists: true,
    },
    {
        name: 'Sauin x Root Basis - Above the Abject Tide',
        credits: 'Credits: Co-Writing, Co-Mixing, Mastering',
        date: '2023-08-04',
        id: 'album=1916604811',
        url: 'https://teethandtail.bandcamp.com/album/above-the-abject-tide-sauin-x-root-basis',
        type: 'bandcamp',
    },
    {
        name: 'Sauin - Wharariki',
        credits: 'Credits: Mastering',
        date: '2023-02-13',
        id: 'tracks/1214910616',
        url: 'https://soundcloud.com/birkenthot/wharariki',
        type: 'soundcloud',
    },
    // {
    //     id: 'playlists/1546172593',
    //     name: 'Alley - snake oil',
    //     credits: 'Credits: Mastering',
    //     date: '2023-01-01',
    //     type: 'soundcloud'
    // },
    {
        name: 'Sano - Scandi',
        credits: 'Credits: Mastering',
        date: '2022-12-24',
        id: 'track=864865153',
        url: 'https://khzcollective.bandcamp.com/track/scandi',
        type: 'bandcamp',
    },
    {
        name: 'Keith - In a Crockpot',
        credits: 'Credits: Writing, Mixing, Mastering',
        date: '2022-03-04',
        id: 'album=2085826436',
        url: 'https://keithunsheathed.bandcamp.com/album/in-a-crockpot',
        type: 'bandcamp',
    },
    {
        name: 'Grains - Dualism',
        credits: 'Credits: Mastering',
        date: '2021-11-27',
        id: 'album=2595562505',
        url: 'https://grainsnz.bandcamp.com/album/dualism',
        type: 'bandcamp',
    },
    // {
    //     name: 'Sano - Lost Some Of Me',
    //     credits: 'Credits: Mastering',
    //     date: '2021-11-23',
    //     id: 'tracks/1165075729',
    //     url: 'https://soundcloud.com/sano_dng/lost-some-of-me',
    //     type: 'soundcloud',
    // },
    {
        name: 'PLISSKIN - Turn And Twist',
        credits: 'Credits: Mastering',
        date: '2021-11-21',
        id: 'tracks/1164338554',
        url: 'https://soundcloud.com/mmcrotn/turn-and-twist',
        type: 'soundcloud',
    },
    {
        name: 'DESTROY WITH SCIENCE - A New View',
        credits: 'Credits: Mastering',
        date: '2021-03-12',
        id: 'album=343771191',
        url: 'https://destroywithscience.bandcamp.com/album/a-new-view',
        type: 'bandcamp',
    },
    {
        name: 'Grains - ζ',
        credits: 'Credits: Mastering',
        date: '2020-09-19',
        id: 'album=1891136990',
        url: 'https://grainsnz.bandcamp.com/album/-',
        type: 'bandcamp',
    },
];

// Sort links by date in descending order
function sortLinks(a, b) {
    return new Date(b.date) - new Date(a.date);
}

// Create a common iframe element
function createIframe(src, allowAutoplay = false) {
    var iframe = document.createElement('iframe');
    iframe.style.cssText = 'border: 0; width: 100%; height: 100%;';
    iframe.src = src;
    iframe.loading = 'lazy';
    if (allowAutoplay) {
        iframe.allow = 'autoplay';
    }
    return iframe;
}

// Create an element with text content and class name
function createElementWithText(tag, text, className, url) {
    var element = document.createElement(tag);
    if (url != null) {
        element.href = url;
        element.target = '_blank';
        element.style.display = 'block';
    }
    element.textContent = text;
    element.className = className;
    return element;
}

// Create common elements for the embed
function createEmbedElements(item, iframeSrc, allowAutoplay = false) {
    var wrapperDiv = document.createElement('div');
    wrapperDiv.className = 'player-wrapper';

    var iframeDiv = document.createElement('div');
    iframeDiv.className = 'embed-responsive aspect-ratio-1/1';

    var iframe = createIframe(iframeSrc, allowAutoplay);
    iframeDiv.appendChild(iframe);

    wrapperDiv.appendChild(iframeDiv);

    var nameDiv = createElementWithText('a', item.name, 'release-name subtle-underline', item.url);
    if (item.isVariousArtists) {
        var variousArtistsSpan = createElementWithText('span', ' (Various Artists)', 'various-artists');
        nameDiv.appendChild(variousArtistsSpan);
    }
    wrapperDiv.appendChild(nameDiv);

    wrapperDiv.appendChild(createElementWithText('div', item.credits, 'credits'));

    return wrapperDiv;
}

// Create an embed based on item type
function createEmbed(item) {
    var embedSrc = '';
    switch (item.type) {
        case 'bandcamp':
            embedSrc = `https://bandcamp.com/EmbeddedPlayer/${item.id}/size=large/bgcol=333333/linkcol=${linkColor}/tracklist=false/transparent=true/`;
            break;
        case 'soundcloud':
            embedSrc = `https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/${item.id}&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&visual=true`;
            break;
        case 'spotify':
            var spotifyURI = item.id.replace(/:/g, '/');
            embedSrc = `https://open.spotify.com/embed/${spotifyURI.split('spotify/')[1]}`;
            break;
    }
    return createEmbedElements(item, embedSrc);
}

// Add all iframes to the grid
function populateGrid() {
    var grid = document.getElementById('songsGrid');
    links.forEach(function (item) {
        grid.appendChild(createEmbed(item));
    });
}

// Initialize the grid on window load
window.addEventListener('load', function () {
    links.sort(sortLinks);
    populateGrid();
});

---
/Users/lachie/Documents/coding/website/assets/js/music.js
---
function updateKeithImage() {
    const keithLogo = document.getElementById('keith-logo');
    if (typeof isDarkReaderActive === 'function' && isDarkReaderActive()) {
        keithLogo.src = "../assets/images/project-logos/keith_white.webp";
    } else {
        keithLogo.src = "../assets/images/project-logos/keith.webp";
    }
}

updateKeithImage();

const observer = new MutationObserver(updateKeithImage);
observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ['data-darkreader-mode']
});

---
/Users/lachie/Documents/coding/website/assets/js/script.js
---
// Utility functions
function getLogoPath(file) {
    var atRoot = window.location.pathname === '/' || window.location.pathname === '/slypork-studio/';
    var baseURL = atRoot ? 'assets/images/' : '../assets/images/';
    return baseURL + file;
}

// Easing function
function easeInOutElastic(x) {
    const c5 = (2 * Math.PI) / 4.5;
    return x === 0 ? 0
        : x === 1 ? 1
            : x < 0.5 ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2
                : (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1;
}

// Home image animation
var homeLink = document.getElementById('homeLink');
var homeLogo = document.querySelector('.home-logo');
if (homeLink && homeLogo) {
    var isHovering = false;
    var normalSrc = getLogoPath('home.webp');
    var hoverSrc = getLogoPath('home-hover.webp');

    function handleHomeLinkMouseEnter() {
        if (homeLogo.src !== hoverSrc) { // Only change if different
            homeLogo.src = hoverSrc;
        }
        isHovering = true;
    }

    function handleHomeLinkMouseLeave() {
        if (homeLogo.src !== normalSrc) { // Only change if different
            homeLogo.src = normalSrc;
        }
        isHovering = false;
    }

    function handleHomeLinkMouseDown() {
        homeLogo.src = normalSrc;
    }

    function handleHomeLinkMouseUp() {
        if (isHovering && homeLogo.src !== hoverSrc) {
            homeLogo.src = hoverSrc;
        }
    }

    homeLink.addEventListener('mouseenter', handleHomeLinkMouseEnter);
    homeLink.addEventListener('mouseleave', handleHomeLinkMouseLeave);
    homeLink.addEventListener('mousedown', handleHomeLinkMouseDown);
    homeLink.addEventListener('mouseup', handleHomeLinkMouseUp);
}

// Lightbox modal
var modal = document.getElementById("myModal");
var modalImg = document.getElementById("modalImage");
// var closeButton = document.querySelector("#myModal .close");

function openModal(event) {
    const triggerElement = event.target.closest('.modal-trigger');

    if (triggerElement && modal && modalImg) {
        const imgSrc = triggerElement.src || triggerElement.querySelector('img')?.src;

        if (imgSrc) {
            modal.style.display = "flex";
            modalImg.src = imgSrc;
            // lockHTMLScroll();
        } else {
            console.warn("Modal trigger clicked, but no image source found.", triggerElement);
        }
    }
}

function closeModal() {
    if (modal) {
        modal.style.display = "none";
        // unlockHTMLScroll();
        if (modalImg) {
            modalImg.src = "";
        }
    }
}

function handleOutsideClick(event) {
    if (event.target === modal) {
        closeModal();
    }
}

function handleEscapeKey(event) {
    if (event.key === "Escape" && modal && modal.style.display === "flex") {
        closeModal();
    }
}

document.body.addEventListener('click', openModal);

if (modal) {
    // if (closeButton) {
    //     closeButton.onclick = closeModal;
    // } else {
    //     console.warn("Modal close button (.close) not found within #myModal.");
    // }

    window.addEventListener('click', handleOutsideClick);

    document.addEventListener('keydown', handleEscapeKey);
}

if (modal && !modalImg) {
    console.warn("Modal image element (#modalImage) not found. Modal cannot display images.");
}

// Hamburger menu
function toggleNavMenu() {
    var nav = document.querySelector('nav');
    if (nav) {
        nav.classList.toggle('nav-active');
        document.body.dispatchEvent(new CustomEvent('layoutChanged'));
    }
}

function closeNavMenu() {
    var nav = document.querySelector('nav');
    if (nav && nav.classList.contains('nav-active')) {
        nav.classList.remove('nav-active');
        document.body.dispatchEvent(new CustomEvent('layoutChanged'));
    }
}

document.addEventListener('DOMContentLoaded', function () {
    var hamburger = document.getElementById('hamburger-menu');
    if (hamburger) {
        hamburger.addEventListener('click', toggleNavMenu);
    }
});

// Software iframes
function adjustIframeHeight() {
    const iframes = document.querySelectorAll('.software-iframe');
    if (iframes.length > 0) {
        const viewportHeight = window.innerHeight;
        const maxHeight = Math.min(800, viewportHeight * 0.8);

        iframes.forEach(iframe => {
            iframe.style.height = `${maxHeight}px`;
        });
    }
}

// Check for dark mode
function isDarkReaderActive() {
    return document.documentElement.getAttribute('data-darkreader-mode') !== null;
}

window.addEventListener('load', adjustIframeHeight);
window.addEventListener('resize', adjustIframeHeight);

/**
 * Updates the fill style of a range slider based on its current value.
 * It sets a CSS custom property '--value' on the slider element.
 * @param {HTMLInputElement} slider - The slider element.
 */
function updateSliderFill(slider) {
    if (!slider || slider.type !== 'range') {
        console.warn('Invalid element passed to updateSliderFill. Expected a range input.', slider);
        return;
    }
    const min = parseFloat(slider.min);
    const max = parseFloat(slider.max);
    const val = parseFloat(slider.value);
    const percentage = ((val - min) / (max - min)) * 100;
    slider.style.setProperty('--value', percentage + '%');
}

/**
 * Adds mouse wheel control to a slider element, ensuring only one listener is active.
 * Changes the slider's value based on wheel scroll and dispatches an 'input' event.
 * @param {HTMLInputElement} slider - The slider element to add wheel control to.
 */
function enableSliderWheelControl(slider) {
    if (!slider || slider.type !== 'range') {
        console.warn('Invalid element passed to enableSliderWheelControl. Expected a range input.', slider);
        return;
    }

    const wheelHandlerKey = '_sliderWheelEventHandler';

    // Remove existing handler if present (idempotency)
    if (slider[wheelHandlerKey]) {
        slider.removeEventListener('wheel', slider[wheelHandlerKey]);
    }

    const wheelHandler = function (event) {
        event.preventDefault();

        const step = parseFloat(this.step) || 1;
        let currentValue = parseFloat(this.value);
        const min = parseFloat(this.min);
        const max = parseFloat(this.max);

        // Update value based on scroll direction
        currentValue += event.deltaY < 0 ? step : -step;

        // Apply constraints
        currentValue = Math.max(min, Math.min(max, currentValue));

        // Handle decimal precision
        if (this.step && this.step.includes('.')) {
            const precision = this.step.split('.')[1].length;
            currentValue = parseFloat(currentValue.toFixed(precision));
        }

        this.value = currentValue;
        this.dispatchEvent(new Event('input', { bubbles: true }));
    };

    slider[wheelHandlerKey] = wheelHandler;
    slider.addEventListener('wheel', wheelHandler, { passive: false });
}

---
/Users/lachie/Documents/coding/website/rsvp-disabled/index.html
---
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>RSVP | Slypork</title>
    <link rel="icon" type="image/png" sizes="16x16" href="../assets/images/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="../assets/images/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="192x192" href="../assets/images/favicon-192x192.png">
    <link rel="preload" href="../assets/fonts/roboto-v48-latin-500.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home.webp" type="image/webp">
    <link rel="preload" fetchpriority="high" as="image" href="../assets/images/home-hover.webp" type="image/webp">
    <link href="../assets/css/output.css" rel="stylesheet">
</head>

<body class="text-neutral-900">
    <canvas id="boidCanvas"></canvas>
    <div id="controls">
        <button id="godModeButton" class="mr-2 hidden md:block">
            <svg
                class="w-4 h-4 fill-current text-background hover:text-backgroundHovered transition transform hover:scale-110">
                <use href="../assets/images/icons.svg#sliders"></use>
            </svg>
        </button>
        <input type="range" id="speedSlider" min="0" max="200" value="100">
        <span id="speedValue" class="ml-2 text-background text-right w-10">100%</span>
    </div>
    <main id="container" class="flex px-4 pb-12 pt-8 md:px-12 md:pt-12 mx-auto flex-grow">
        <section id="content" class="flex-1 flex flex-col">
            <div class="flex flex-col items-center w-full">
                <a href=".." id="homeLink" class="p-1 mb-4">
                    <img id="simpleHomeLink" src="../assets/images/home.webp" alt="Home"
                        class="w-[64px] md:w-[80px] aspect-[80/65.94] home-logo">
                </a>
                <h1
                    class="text-3xl md:text-5xl pb-8 md:pb-12 header-font font-medium leading-tight px-2 md:px-4 text-center w-full">
                    <div id="pageTitle" class="inline-block">Southerly II</div>
                </h1>
            </div>
            <div class="visual-container flex-grow flex">
                <div class="px-0 md:px-4 py-4 md:py-8 flex-grow flex">
                    <div class="iframe-container rounded-xl overflow-hidden flex-grow">
                        <iframe src="https://forms.gle/3xfkkoPS21XaigZA8" class="block w-full h-full border-none"
                            style="color-scheme: dark;"></iframe>
                    </div>
                </div>
            </div>
        </section>
    </main>
    <script src="../assets/js/script.js"></script>
    <script src="../assets/js/boid-simulator.js" type="module"></script>
    <div class="easter-egg" id="easterEgg"></div>
    <script src="../assets/js/easter-egg.js"></script>
</body>

</html>

---
